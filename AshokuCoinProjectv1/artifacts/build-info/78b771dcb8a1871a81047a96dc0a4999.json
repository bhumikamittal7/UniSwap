{
	"id": "78b771dcb8a1871a81047a96dc0a4999",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"quiz.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./token.sol\";\r\n\r\ncontract QuizGame is Ownable {\r\n    enum QuizState { NotStarted, Started, Ended }\r\n    QuizState public quizState;\r\n\r\n    AshokuCoin public acsToken;\r\n\r\n    address public winner;\r\n    uint256 public rewardAmount = 0.5 ether;\r\n\r\n    mapping(address => bool) public hasAnswered;\r\n\r\n    event QuizStarted();\r\n    event QuizEnded(address winner, uint256 rewardAmount);\r\n\r\n    modifier onlyQuizStarted() {\r\n        require(quizState == QuizState.Started, \"Quiz not started\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyQuizNotStarted() {\r\n        require(quizState == QuizState.NotStarted, \"Quiz already started\");\r\n        _;\r\n    }\r\n\r\n    constructor(address acsTokenAddress, address initialOwner) Ownable(initialOwner) {\r\n        acsToken = AshokuCoin(acsTokenAddress);\r\n        quizState = QuizState.NotStarted;\r\n    }\r\n\r\n    function startQuiz() external onlyOwner onlyQuizNotStarted {\r\n        quizState = QuizState.Started;\r\n        emit QuizStarted();\r\n    }\r\n\r\n    function endQuiz(address player, string memory answer1, string memory answer2, string memory answer3, string memory answer4, string memory answer5) external onlyOwner onlyQuizStarted {\r\n        require(!hasAnswered[player], \"Player has already answered\");\r\n\r\n        // Assume you have predefined correct answers for the quiz questions\r\n        string[5] memory correctAnswers = [\"Correct1\", \"Correct2\", \"Correct3\", \"Correct4\", \"Correct5\"];\r\n\r\n        require(keccak256(abi.encodePacked(answer1)) == keccak256(abi.encodePacked(correctAnswers[0])), \"Incorrect answer 1\");\r\n        require(keccak256(abi.encodePacked(answer2)) == keccak256(abi.encodePacked(correctAnswers[1])), \"Incorrect answer 2\");\r\n        require(keccak256(abi.encodePacked(answer3)) == keccak256(abi.encodePacked(correctAnswers[2])), \"Incorrect answer 3\");\r\n        require(keccak256(abi.encodePacked(answer4)) == keccak256(abi.encodePacked(correctAnswers[3])), \"Incorrect answer 4\");\r\n        require(keccak256(abi.encodePacked(answer5)) == keccak256(abi.encodePacked(correctAnswers[4])), \"Incorrect answer 5\");\r\n\r\n        winner = player;\r\n        hasAnswered[player] = true;\r\n\r\n        // Mint ACS tokens and transfer to the winner\r\n        acsToken.mint(winner, rewardAmount);\r\n\r\n        quizState = QuizState.Ended;\r\n\r\n        emit QuizEnded(winner, rewardAmount);\r\n    }\r\n}\r\n"
			},
			"token.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\ncontract AshokuCoin is ERC20, AccessControl {\r\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\r\n\r\n    constructor(address defaultAdmin, address minter) ERC20(\"AshokuCoin\", \"ACS\") {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin);\r\n        _grantRole(MINTER_ROLE, minter);\r\n    }\r\n\r\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\r\n        _mint(to, amount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 387,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 686,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 692,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 694,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 696,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 698,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"quiz.sol": {
				"QuizGame": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "acsTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "QuizEnded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "QuizStarted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acsToken",
							"outputs": [
								{
									"internalType": "contract AshokuCoin",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "answer1",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "answer2",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "answer3",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "answer4",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "answer5",
									"type": "string"
								}
							],
							"name": "endQuiz",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hasAnswered",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "quizState",
							"outputs": [
								{
									"internalType": "enum QuizGame.QuizState",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startQuiz",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"quiz.sol\":140:2455  contract QuizGame is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"quiz.sol\":355:364  0.5 ether */\n  0x06f05b59d3b20000\n    /* \"quiz.sol\":325:364  uint256 public rewardAmount = 0.5 ether */\n  0x03\n  sstore\n    /* \"quiz.sol\":773:954  constructor(address acsTokenAddress, address initialOwner) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"quiz.sol\":840:852  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"quiz.sol\":887:902  acsTokenAddress */\n  dup2\n    /* \"quiz.sol\":865:873  acsToken */\n  0x01\n  0x00\n    /* \"quiz.sol\":865:903  acsToken = AshokuCoin(acsTokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"quiz.sol\":926:946  QuizState.NotStarted */\n  0x00\n    /* \"quiz.sol\":914:923  quizState */\n  dup1\n  0x14\n    /* \"quiz.sol\":914:946  quizState = QuizState.NotStarted */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x02\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\ntag_13:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"quiz.sol\":773:954  constructor(address acsTokenAddress, address initialOwner) Ownable(initialOwner) {... */\n  pop\n  pop\n    /* \"quiz.sol\":140:2455  contract QuizGame is Ownable {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_34\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_35:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_37\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_40\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":949:1068   */\ntag_39:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_41\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_24\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_42\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_24\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_25:\n    /* \"#utility.yul\":1445:1469   */\n  tag_44\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_22\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_9:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_46\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_25\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1710:1890   */\ntag_15:\n    /* \"#utility.yul\":1758:1835   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1836   */\n  mstore\n    /* \"#utility.yul\":1855:1859   */\n  0x21\n    /* \"#utility.yul\":1852:1853   */\n  0x04\n    /* \"#utility.yul\":1845:1860   */\n  mstore\n    /* \"#utility.yul\":1879:1883   */\n  0x24\n    /* \"#utility.yul\":1876:1877   */\n  0x00\n    /* \"#utility.yul\":1869:1884   */\n  revert\n    /* \"quiz.sol\":140:2455  contract QuizGame is Ownable {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"quiz.sol\":140:2455  contract QuizGame is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9206815f\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x9206815f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xaa4339cb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdfbf53ae\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf7b2a7be\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x087e88d0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4c3415e6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5b67bdb4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"quiz.sol\":262:288  AshokuCoin public acsToken */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"quiz.sol\":962:1098  function startQuiz() external onlyOwner onlyQuizNotStarted {... */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"quiz.sol\":373:416  mapping(address => bool) public hasAnswered */\n    tag_5:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"quiz.sol\":227:253  QuizState public quizState */\n    tag_8:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"quiz.sol\":1106:2452  function endQuiz(address player, string memory answer1, string memory answer2, string memory answer3, string memory answer4, string memory answer5) external onlyOwner onlyQuizStarted {... */\n    tag_9:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"quiz.sol\":297:318  address public winner */\n    tag_10:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"quiz.sol\":325:364  uint256 public rewardAmount = 0.5 ether */\n    tag_12:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"quiz.sol\":262:288  AshokuCoin public acsToken */\n    tag_15:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"quiz.sol\":962:1098  function startQuiz() external onlyOwner onlyQuizNotStarted {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_51:\n        /* \"quiz.sol\":700:720  QuizState.NotStarted */\n      0x00\n        /* \"quiz.sol\":687:720  quizState == QuizState.NotStarted */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_54\n      jumpi\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n    tag_54:\n        /* \"quiz.sol\":687:696  quizState */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"quiz.sol\":687:720  quizState == QuizState.NotStarted */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_57\n      jumpi\n      tag_58\n      tag_56\n      jump\t// in\n    tag_58:\n    tag_57:\n      eq\n        /* \"quiz.sol\":679:745  require(quizState == QuizState.NotStarted, \"Quiz already started\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"quiz.sol\":1044:1061  QuizState.Started */\n      0x01\n        /* \"quiz.sol\":1032:1041  quizState */\n      0x00\n      0x14\n        /* \"quiz.sol\":1032:1061  quizState = QuizState.Started */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_63\n      jumpi\n      tag_64\n      tag_56\n      jump\t// in\n    tag_64:\n    tag_63:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"quiz.sol\":1077:1090  QuizStarted() */\n      0xb042f1d4d3b82efc559238fc1e12537fcdb79cccef346a003202925d94ff3133\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"quiz.sol\":962:1098  function startQuiz() external onlyOwner onlyQuizNotStarted {... */\n      jump\t// out\n        /* \"quiz.sol\":373:416  mapping(address => bool) public hasAnswered */\n    tag_23:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"quiz.sol\":227:253  QuizState public quizState */\n    tag_33:\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"quiz.sol\":1106:2452  function endQuiz(address player, string memory answer1, string memory answer2, string memory answer3, string memory answer4, string memory answer5) external onlyOwner onlyQuizStarted {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_72:\n        /* \"quiz.sol\":572:589  QuizState.Started */\n      0x01\n        /* \"quiz.sol\":559:589  quizState == QuizState.Started */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_74\n      jumpi\n      tag_75\n      tag_56\n      jump\t// in\n    tag_75:\n    tag_74:\n        /* \"quiz.sol\":559:568  quizState */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"quiz.sol\":559:589  quizState == QuizState.Started */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_76\n      jumpi\n      tag_77\n      tag_56\n      jump\t// in\n    tag_77:\n    tag_76:\n      eq\n        /* \"quiz.sol\":551:610  require(quizState == QuizState.Started, \"Quiz not started\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"quiz.sol\":1309:1320  hasAnswered */\n      0x04\n        /* \"quiz.sol\":1309:1328  hasAnswered[player] */\n      0x00\n        /* \"quiz.sol\":1321:1327  player */\n      dup8\n        /* \"quiz.sol\":1309:1328  hasAnswered[player] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"quiz.sol\":1308:1328  !hasAnswered[player] */\n      iszero\n        /* \"quiz.sol\":1300:1360  require(!hasAnswered[player], \"Player has already answered\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"quiz.sol\":1451:1482  string[5] memory correctAnswers */\n      0x00\n        /* \"quiz.sol\":1451:1545  string[5] memory correctAnswers = [\"Correct1\", \"Correct2\", \"Correct3\", \"Correct4\", \"Correct5\"] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x436f727265637431000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x436f727265637432000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x436f727265637433000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x436f727265637434000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x436f727265637435000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"quiz.sol\":1633:1647  correctAnswers */\n      dup1\n        /* \"quiz.sol\":1648:1649  0 */\n      0x00\n        /* \"quiz.sol\":1633:1650  correctAnswers[0] */\n      0x05\n      dup2\n      lt\n      tag_85\n      jumpi\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n    tag_85:\n      0x20\n      mul\n      add\n      mload\n        /* \"quiz.sol\":1616:1651  abi.encodePacked(correctAnswers[0]) */\n      add(0x20, mload(0x40))\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"quiz.sol\":1606:1652  keccak256(abi.encodePacked(correctAnswers[0])) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"quiz.sol\":1593:1600  answer1 */\n      dup7\n        /* \"quiz.sol\":1576:1601  abi.encodePacked(answer1) */\n      add(0x20, mload(0x40))\n      tag_90\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"quiz.sol\":1566:1602  keccak256(abi.encodePacked(answer1)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"quiz.sol\":1566:1652  keccak256(abi.encodePacked(answer1)) == keccak256(abi.encodePacked(correctAnswers[0])) */\n      eq\n        /* \"quiz.sol\":1558:1675  require(keccak256(abi.encodePacked(answer1)) == keccak256(abi.encodePacked(correctAnswers[0])), \"Incorrect answer 1\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"quiz.sol\":1761:1775  correctAnswers */\n      dup1\n        /* \"quiz.sol\":1776:1777  1 */\n      0x01\n        /* \"quiz.sol\":1761:1778  correctAnswers[1] */\n      0x05\n      dup2\n      lt\n      tag_94\n      jumpi\n      tag_95\n      tag_87\n      jump\t// in\n    tag_95:\n    tag_94:\n      0x20\n      mul\n      add\n      mload\n        /* \"quiz.sol\":1744:1779  abi.encodePacked(correctAnswers[1]) */\n      add(0x20, mload(0x40))\n      tag_96\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"quiz.sol\":1734:1780  keccak256(abi.encodePacked(correctAnswers[1])) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"quiz.sol\":1721:1728  answer2 */\n      dup6\n        /* \"quiz.sol\":1704:1729  abi.encodePacked(answer2) */\n      add(0x20, mload(0x40))\n      tag_97\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"quiz.sol\":1694:1730  keccak256(abi.encodePacked(answer2)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"quiz.sol\":1694:1780  keccak256(abi.encodePacked(answer2)) == keccak256(abi.encodePacked(correctAnswers[1])) */\n      eq\n        /* \"quiz.sol\":1686:1803  require(keccak256(abi.encodePacked(answer2)) == keccak256(abi.encodePacked(correctAnswers[1])), \"Incorrect answer 2\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"quiz.sol\":1889:1903  correctAnswers */\n      dup1\n        /* \"quiz.sol\":1904:1905  2 */\n      0x02\n        /* \"quiz.sol\":1889:1906  correctAnswers[2] */\n      0x05\n      dup2\n      lt\n      tag_101\n      jumpi\n      tag_102\n      tag_87\n      jump\t// in\n    tag_102:\n    tag_101:\n      0x20\n      mul\n      add\n      mload\n        /* \"quiz.sol\":1872:1907  abi.encodePacked(correctAnswers[2]) */\n      add(0x20, mload(0x40))\n      tag_103\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"quiz.sol\":1862:1908  keccak256(abi.encodePacked(correctAnswers[2])) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"quiz.sol\":1849:1856  answer3 */\n      dup5\n        /* \"quiz.sol\":1832:1857  abi.encodePacked(answer3) */\n      add(0x20, mload(0x40))\n      tag_104\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"quiz.sol\":1822:1858  keccak256(abi.encodePacked(answer3)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"quiz.sol\":1822:1908  keccak256(abi.encodePacked(answer3)) == keccak256(abi.encodePacked(correctAnswers[2])) */\n      eq\n        /* \"quiz.sol\":1814:1931  require(keccak256(abi.encodePacked(answer3)) == keccak256(abi.encodePacked(correctAnswers[2])), \"Incorrect answer 3\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"quiz.sol\":2017:2031  correctAnswers */\n      dup1\n        /* \"quiz.sol\":2032:2033  3 */\n      0x03\n        /* \"quiz.sol\":2017:2034  correctAnswers[3] */\n      0x05\n      dup2\n      lt\n      tag_108\n      jumpi\n      tag_109\n      tag_87\n      jump\t// in\n    tag_109:\n    tag_108:\n      0x20\n      mul\n      add\n      mload\n        /* \"quiz.sol\":2000:2035  abi.encodePacked(correctAnswers[3]) */\n      add(0x20, mload(0x40))\n      tag_110\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"quiz.sol\":1990:2036  keccak256(abi.encodePacked(correctAnswers[3])) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"quiz.sol\":1977:1984  answer4 */\n      dup4\n        /* \"quiz.sol\":1960:1985  abi.encodePacked(answer4) */\n      add(0x20, mload(0x40))\n      tag_111\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"quiz.sol\":1950:1986  keccak256(abi.encodePacked(answer4)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"quiz.sol\":1950:2036  keccak256(abi.encodePacked(answer4)) == keccak256(abi.encodePacked(correctAnswers[3])) */\n      eq\n        /* \"quiz.sol\":1942:2059  require(keccak256(abi.encodePacked(answer4)) == keccak256(abi.encodePacked(correctAnswers[3])), \"Incorrect answer 4\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"quiz.sol\":2145:2159  correctAnswers */\n      dup1\n        /* \"quiz.sol\":2160:2161  4 */\n      0x04\n        /* \"quiz.sol\":2145:2162  correctAnswers[4] */\n      0x05\n      dup2\n      lt\n      tag_115\n      jumpi\n      tag_116\n      tag_87\n      jump\t// in\n    tag_116:\n    tag_115:\n      0x20\n      mul\n      add\n      mload\n        /* \"quiz.sol\":2128:2163  abi.encodePacked(correctAnswers[4]) */\n      add(0x20, mload(0x40))\n      tag_117\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"quiz.sol\":2118:2164  keccak256(abi.encodePacked(correctAnswers[4])) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"quiz.sol\":2105:2112  answer5 */\n      dup3\n        /* \"quiz.sol\":2088:2113  abi.encodePacked(answer5) */\n      add(0x20, mload(0x40))\n      tag_118\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"quiz.sol\":2078:2114  keccak256(abi.encodePacked(answer5)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"quiz.sol\":2078:2164  keccak256(abi.encodePacked(answer5)) == keccak256(abi.encodePacked(correctAnswers[4])) */\n      eq\n        /* \"quiz.sol\":2070:2187  require(keccak256(abi.encodePacked(answer5)) == keccak256(abi.encodePacked(correctAnswers[4])), \"Incorrect answer 5\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"quiz.sol\":2209:2215  player */\n      dup7\n        /* \"quiz.sol\":2200:2206  winner */\n      0x02\n      0x00\n        /* \"quiz.sol\":2200:2215  winner = player */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"quiz.sol\":2248:2252  true */\n      0x01\n        /* \"quiz.sol\":2226:2237  hasAnswered */\n      0x04\n        /* \"quiz.sol\":2226:2245  hasAnswered[player] */\n      0x00\n        /* \"quiz.sol\":2238:2244  player */\n      dup10\n        /* \"quiz.sol\":2226:2245  hasAnswered[player] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"quiz.sol\":2226:2252  hasAnswered[player] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"quiz.sol\":2320:2328  acsToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"quiz.sol\":2320:2333  acsToken.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"quiz.sol\":2334:2340  winner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"quiz.sol\":2342:2354  rewardAmount */\n      sload(0x03)\n        /* \"quiz.sol\":2320:2355  acsToken.mint(winner, rewardAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap3\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n        /* \"quiz.sol\":2380:2395  QuizState.Ended */\n      0x02\n        /* \"quiz.sol\":2368:2377  quizState */\n      0x00\n      0x14\n        /* \"quiz.sol\":2368:2395  quizState = QuizState.Ended */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_127\n      jumpi\n      tag_128\n      tag_56\n      jump\t// in\n    tag_128:\n    tag_127:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"quiz.sol\":2413:2444  QuizEnded(winner, rewardAmount) */\n      0xe5f4afc88cb448bad8ab76d9ea0a66b123681b66f88c8f8aedd19526d742fad5\n        /* \"quiz.sol\":2423:2429  winner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"quiz.sol\":2431:2443  rewardAmount */\n      sload(0x03)\n        /* \"quiz.sol\":2413:2444  QuizEnded(winner, rewardAmount) */\n      mload(0x40)\n      tag_129\n      swap3\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"quiz.sol\":1289:2452  {... */\n      pop\n        /* \"quiz.sol\":1106:2452  function endQuiz(address player, string memory answer1, string memory answer2, string memory answer3, string memory answer4, string memory answer5) external onlyOwner onlyQuizStarted {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"quiz.sol\":297:318  address public winner */\n    tag_41:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"quiz.sol\":325:364  uint256 public rewardAmount = 0.5 ether */\n    tag_47:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_29\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_145:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_146:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_147:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_201\n        /* \"#utility.yul\":306:340   */\n      tag_202\n        /* \"#utility.yul\":315:339   */\n      tag_203\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_145\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":306:340   */\n      tag_146\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":288:341   */\n      tag_145\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_148:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_205\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_147\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:630   */\n    tag_149:\n        /* \"#utility.yul\":554:563   */\n      0x00\n        /* \"#utility.yul\":587:624   */\n      tag_207\n        /* \"#utility.yul\":618:623   */\n      dup3\n        /* \"#utility.yul\":587:624   */\n      tag_148\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":574:624   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":636:805   */\n    tag_150:\n        /* \"#utility.yul\":742:798   */\n      tag_209\n        /* \"#utility.yul\":792:797   */\n      dup2\n        /* \"#utility.yul\":742:798   */\n      tag_149\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":737:740   */\n      dup3\n        /* \"#utility.yul\":730:799   */\n      mstore\n        /* \"#utility.yul\":636:805   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":811:1071   */\n    tag_17:\n        /* \"#utility.yul\":923:927   */\n      0x00\n        /* \"#utility.yul\":961:963   */\n      0x20\n        /* \"#utility.yul\":950:959   */\n      dup3\n        /* \"#utility.yul\":946:964   */\n      add\n        /* \"#utility.yul\":938:964   */\n      swap1\n      pop\n        /* \"#utility.yul\":974:1064   */\n      tag_211\n        /* \"#utility.yul\":1061:1062   */\n      0x00\n        /* \"#utility.yul\":1050:1059   */\n      dup4\n        /* \"#utility.yul\":1046:1063   */\n      add\n        /* \"#utility.yul\":1037:1043   */\n      dup5\n        /* \"#utility.yul\":974:1064   */\n      tag_150\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":811:1071   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1077:1152   */\n    tag_151:\n        /* \"#utility.yul\":1110:1116   */\n      0x00\n        /* \"#utility.yul\":1143:1145   */\n      0x40\n        /* \"#utility.yul\":1137:1146   */\n      mload\n        /* \"#utility.yul\":1127:1146   */\n      swap1\n      pop\n        /* \"#utility.yul\":1077:1152   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1158:1275   */\n    tag_152:\n        /* \"#utility.yul\":1267:1268   */\n      0x00\n        /* \"#utility.yul\":1264:1265   */\n      dup1\n        /* \"#utility.yul\":1257:1269   */\n      revert\n        /* \"#utility.yul\":1281:1398   */\n    tag_153:\n        /* \"#utility.yul\":1390:1391   */\n      0x00\n        /* \"#utility.yul\":1387:1388   */\n      dup1\n        /* \"#utility.yul\":1380:1392   */\n      revert\n        /* \"#utility.yul\":1404:1500   */\n    tag_154:\n        /* \"#utility.yul\":1441:1448   */\n      0x00\n        /* \"#utility.yul\":1470:1494   */\n      tag_216\n        /* \"#utility.yul\":1488:1493   */\n      dup3\n        /* \"#utility.yul\":1470:1494   */\n      tag_145\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":1459:1494   */\n      swap1\n      pop\n        /* \"#utility.yul\":1404:1500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1506:1628   */\n    tag_155:\n        /* \"#utility.yul\":1579:1603   */\n      tag_218\n        /* \"#utility.yul\":1597:1602   */\n      dup2\n        /* \"#utility.yul\":1579:1603   */\n      tag_154\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":1572:1577   */\n      dup2\n        /* \"#utility.yul\":1569:1604   */\n      eq\n        /* \"#utility.yul\":1559:1622   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":1618:1619   */\n      0x00\n        /* \"#utility.yul\":1615:1616   */\n      dup1\n        /* \"#utility.yul\":1608:1620   */\n      revert\n        /* \"#utility.yul\":1559:1622   */\n    tag_219:\n        /* \"#utility.yul\":1506:1628   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1634:1773   */\n    tag_156:\n        /* \"#utility.yul\":1680:1685   */\n      0x00\n        /* \"#utility.yul\":1718:1724   */\n      dup2\n        /* \"#utility.yul\":1705:1725   */\n      calldataload\n        /* \"#utility.yul\":1696:1725   */\n      swap1\n      pop\n        /* \"#utility.yul\":1734:1767   */\n      tag_221\n        /* \"#utility.yul\":1761:1766   */\n      dup2\n        /* \"#utility.yul\":1734:1767   */\n      tag_155\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":1634:1773   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1779:2108   */\n    tag_22:\n        /* \"#utility.yul\":1838:1844   */\n      0x00\n        /* \"#utility.yul\":1887:1889   */\n      0x20\n        /* \"#utility.yul\":1875:1884   */\n      dup3\n        /* \"#utility.yul\":1866:1873   */\n      dup5\n        /* \"#utility.yul\":1862:1885   */\n      sub\n        /* \"#utility.yul\":1858:1890   */\n      slt\n        /* \"#utility.yul\":1855:1974   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":1893:1972   */\n      tag_224\n      tag_152\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":1855:1974   */\n    tag_223:\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2038:2091   */\n      tag_225\n        /* \"#utility.yul\":2083:2090   */\n      dup5\n        /* \"#utility.yul\":2074:2080   */\n      dup3\n        /* \"#utility.yul\":2063:2072   */\n      dup6\n        /* \"#utility.yul\":2059:2081   */\n      add\n        /* \"#utility.yul\":2038:2091   */\n      tag_156\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2028:2091   */\n      swap2\n      pop\n        /* \"#utility.yul\":1984:2101   */\n      pop\n        /* \"#utility.yul\":1779:2108   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2114:2204   */\n    tag_157:\n        /* \"#utility.yul\":2148:2155   */\n      0x00\n        /* \"#utility.yul\":2191:2196   */\n      dup2\n        /* \"#utility.yul\":2184:2197   */\n      iszero\n        /* \"#utility.yul\":2177:2198   */\n      iszero\n        /* \"#utility.yul\":2166:2198   */\n      swap1\n      pop\n        /* \"#utility.yul\":2114:2204   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2210:2319   */\n    tag_158:\n        /* \"#utility.yul\":2291:2312   */\n      tag_228\n        /* \"#utility.yul\":2306:2311   */\n      dup2\n        /* \"#utility.yul\":2291:2312   */\n      tag_157\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":2286:2289   */\n      dup3\n        /* \"#utility.yul\":2279:2313   */\n      mstore\n        /* \"#utility.yul\":2210:2319   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2325:2535   */\n    tag_25:\n        /* \"#utility.yul\":2412:2416   */\n      0x00\n        /* \"#utility.yul\":2450:2452   */\n      0x20\n        /* \"#utility.yul\":2439:2448   */\n      dup3\n        /* \"#utility.yul\":2435:2453   */\n      add\n        /* \"#utility.yul\":2427:2453   */\n      swap1\n      pop\n        /* \"#utility.yul\":2463:2528   */\n      tag_230\n        /* \"#utility.yul\":2525:2526   */\n      0x00\n        /* \"#utility.yul\":2514:2523   */\n      dup4\n        /* \"#utility.yul\":2510:2527   */\n      add\n        /* \"#utility.yul\":2501:2507   */\n      dup5\n        /* \"#utility.yul\":2463:2528   */\n      tag_158\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":2325:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2659   */\n    tag_159:\n        /* \"#utility.yul\":2628:2652   */\n      tag_232\n        /* \"#utility.yul\":2646:2651   */\n      dup2\n        /* \"#utility.yul\":2628:2652   */\n      tag_154\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":2623:2626   */\n      dup3\n        /* \"#utility.yul\":2616:2653   */\n      mstore\n        /* \"#utility.yul\":2541:2659   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2665:2887   */\n    tag_31:\n        /* \"#utility.yul\":2758:2762   */\n      0x00\n        /* \"#utility.yul\":2796:2798   */\n      0x20\n        /* \"#utility.yul\":2785:2794   */\n      dup3\n        /* \"#utility.yul\":2781:2799   */\n      add\n        /* \"#utility.yul\":2773:2799   */\n      swap1\n      pop\n        /* \"#utility.yul\":2809:2880   */\n      tag_234\n        /* \"#utility.yul\":2877:2878   */\n      0x00\n        /* \"#utility.yul\":2866:2875   */\n      dup4\n        /* \"#utility.yul\":2862:2879   */\n      add\n        /* \"#utility.yul\":2853:2859   */\n      dup5\n        /* \"#utility.yul\":2809:2880   */\n      tag_159\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2665:2887   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2893:3073   */\n    tag_56:\n        /* \"#utility.yul\":2941:3018   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2938:2939   */\n      0x00\n        /* \"#utility.yul\":2931:3019   */\n      mstore\n        /* \"#utility.yul\":3038:3042   */\n      0x21\n        /* \"#utility.yul\":3035:3036   */\n      0x04\n        /* \"#utility.yul\":3028:3043   */\n      mstore\n        /* \"#utility.yul\":3062:3066   */\n      0x24\n        /* \"#utility.yul\":3059:3060   */\n      0x00\n        /* \"#utility.yul\":3052:3067   */\n      revert\n        /* \"#utility.yul\":3079:3198   */\n    tag_160:\n        /* \"#utility.yul\":3166:3167   */\n      0x03\n        /* \"#utility.yul\":3159:3164   */\n      dup2\n        /* \"#utility.yul\":3156:3168   */\n      lt\n        /* \"#utility.yul\":3146:3192   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":3172:3190   */\n      tag_238\n      tag_56\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3146:3192   */\n    tag_237:\n        /* \"#utility.yul\":3079:3198   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3204:3343   */\n    tag_161:\n        /* \"#utility.yul\":3255:3262   */\n      0x00\n        /* \"#utility.yul\":3284:3289   */\n      dup2\n        /* \"#utility.yul\":3273:3289   */\n      swap1\n      pop\n        /* \"#utility.yul\":3290:3337   */\n      tag_240\n        /* \"#utility.yul\":3331:3336   */\n      dup3\n        /* \"#utility.yul\":3290:3337   */\n      tag_160\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":3204:3343   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3349:3488   */\n    tag_162:\n        /* \"#utility.yul\":3411:3420   */\n      0x00\n        /* \"#utility.yul\":3444:3482   */\n      tag_242\n        /* \"#utility.yul\":3476:3481   */\n      dup3\n        /* \"#utility.yul\":3444:3482   */\n      tag_161\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":3431:3482   */\n      swap1\n      pop\n        /* \"#utility.yul\":3349:3488   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:3649   */\n    tag_163:\n        /* \"#utility.yul\":3593:3642   */\n      tag_244\n        /* \"#utility.yul\":3636:3641   */\n      dup2\n        /* \"#utility.yul\":3593:3642   */\n      tag_162\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":3588:3591   */\n      dup3\n        /* \"#utility.yul\":3581:3643   */\n      mstore\n        /* \"#utility.yul\":3494:3649   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3655:3901   */\n    tag_35:\n        /* \"#utility.yul\":3760:3764   */\n      0x00\n        /* \"#utility.yul\":3798:3800   */\n      0x20\n        /* \"#utility.yul\":3787:3796   */\n      dup3\n        /* \"#utility.yul\":3783:3801   */\n      add\n        /* \"#utility.yul\":3775:3801   */\n      swap1\n      pop\n        /* \"#utility.yul\":3811:3894   */\n      tag_246\n        /* \"#utility.yul\":3891:3892   */\n      0x00\n        /* \"#utility.yul\":3880:3889   */\n      dup4\n        /* \"#utility.yul\":3876:3893   */\n      add\n        /* \"#utility.yul\":3867:3873   */\n      dup5\n        /* \"#utility.yul\":3811:3894   */\n      tag_163\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3655:3901   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3907:4024   */\n    tag_164:\n        /* \"#utility.yul\":4016:4017   */\n      0x00\n        /* \"#utility.yul\":4013:4014   */\n      dup1\n        /* \"#utility.yul\":4006:4018   */\n      revert\n        /* \"#utility.yul\":4030:4147   */\n    tag_165:\n        /* \"#utility.yul\":4139:4140   */\n      0x00\n        /* \"#utility.yul\":4136:4137   */\n      dup1\n        /* \"#utility.yul\":4129:4141   */\n      revert\n        /* \"#utility.yul\":4153:4255   */\n    tag_166:\n        /* \"#utility.yul\":4194:4200   */\n      0x00\n        /* \"#utility.yul\":4245:4247   */\n      0x1f\n        /* \"#utility.yul\":4241:4248   */\n      not\n        /* \"#utility.yul\":4236:4238   */\n      0x1f\n        /* \"#utility.yul\":4229:4234   */\n      dup4\n        /* \"#utility.yul\":4225:4239   */\n      add\n        /* \"#utility.yul\":4221:4249   */\n      and\n        /* \"#utility.yul\":4211:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4153:4255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4261:4441   */\n    tag_167:\n        /* \"#utility.yul\":4309:4386   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4306:4307   */\n      0x00\n        /* \"#utility.yul\":4299:4387   */\n      mstore\n        /* \"#utility.yul\":4406:4410   */\n      0x41\n        /* \"#utility.yul\":4403:4404   */\n      0x04\n        /* \"#utility.yul\":4396:4411   */\n      mstore\n        /* \"#utility.yul\":4430:4434   */\n      0x24\n        /* \"#utility.yul\":4427:4428   */\n      0x00\n        /* \"#utility.yul\":4420:4435   */\n      revert\n        /* \"#utility.yul\":4447:4728   */\n    tag_168:\n        /* \"#utility.yul\":4530:4557   */\n      tag_252\n        /* \"#utility.yul\":4552:4556   */\n      dup3\n        /* \"#utility.yul\":4530:4557   */\n      tag_166\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4522:4528   */\n      dup2\n        /* \"#utility.yul\":4518:4558   */\n      add\n        /* \"#utility.yul\":4660:4666   */\n      dup2\n        /* \"#utility.yul\":4648:4658   */\n      dup2\n        /* \"#utility.yul\":4645:4667   */\n      lt\n        /* \"#utility.yul\":4624:4642   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4612:4622   */\n      dup3\n        /* \"#utility.yul\":4609:4643   */\n      gt\n        /* \"#utility.yul\":4606:4668   */\n      or\n        /* \"#utility.yul\":4603:4691   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":4671:4689   */\n      tag_254\n      tag_167\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4603:4691   */\n    tag_253:\n        /* \"#utility.yul\":4711:4721   */\n      dup1\n        /* \"#utility.yul\":4707:4709   */\n      0x40\n        /* \"#utility.yul\":4700:4722   */\n      mstore\n        /* \"#utility.yul\":4490:4728   */\n      pop\n        /* \"#utility.yul\":4447:4728   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4734:4863   */\n    tag_169:\n        /* \"#utility.yul\":4768:4774   */\n      0x00\n        /* \"#utility.yul\":4795:4815   */\n      tag_256\n      tag_151\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":4785:4815   */\n      swap1\n      pop\n        /* \"#utility.yul\":4824:4857   */\n      tag_257\n        /* \"#utility.yul\":4852:4856   */\n      dup3\n        /* \"#utility.yul\":4844:4850   */\n      dup3\n        /* \"#utility.yul\":4824:4857   */\n      tag_168\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":4734:4863   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4869:5177   */\n    tag_170:\n        /* \"#utility.yul\":4931:4935   */\n      0x00\n        /* \"#utility.yul\":5021:5039   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5013:5019   */\n      dup3\n        /* \"#utility.yul\":5010:5040   */\n      gt\n        /* \"#utility.yul\":5007:5063   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":5043:5061   */\n      tag_260\n      tag_167\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5007:5063   */\n    tag_259:\n        /* \"#utility.yul\":5081:5110   */\n      tag_261\n        /* \"#utility.yul\":5103:5109   */\n      dup3\n        /* \"#utility.yul\":5081:5110   */\n      tag_166\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":5073:5110   */\n      swap1\n      pop\n        /* \"#utility.yul\":5165:5169   */\n      0x20\n        /* \"#utility.yul\":5159:5163   */\n      dup2\n        /* \"#utility.yul\":5155:5170   */\n      add\n        /* \"#utility.yul\":5147:5170   */\n      swap1\n      pop\n        /* \"#utility.yul\":4869:5177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5183:5329   */\n    tag_171:\n        /* \"#utility.yul\":5280:5286   */\n      dup3\n        /* \"#utility.yul\":5275:5278   */\n      dup2\n        /* \"#utility.yul\":5270:5273   */\n      dup4\n        /* \"#utility.yul\":5257:5287   */\n      calldatacopy\n        /* \"#utility.yul\":5321:5322   */\n      0x00\n        /* \"#utility.yul\":5312:5318   */\n      dup4\n        /* \"#utility.yul\":5307:5310   */\n      dup4\n        /* \"#utility.yul\":5303:5319   */\n      add\n        /* \"#utility.yul\":5296:5323   */\n      mstore\n        /* \"#utility.yul\":5183:5329   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5335:5760   */\n    tag_172:\n        /* \"#utility.yul\":5413:5418   */\n      0x00\n        /* \"#utility.yul\":5438:5504   */\n      tag_264\n        /* \"#utility.yul\":5454:5503   */\n      tag_265\n        /* \"#utility.yul\":5496:5502   */\n      dup5\n        /* \"#utility.yul\":5454:5503   */\n      tag_170\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":5438:5504   */\n      tag_169\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":5429:5504   */\n      swap1\n      pop\n        /* \"#utility.yul\":5527:5533   */\n      dup3\n        /* \"#utility.yul\":5520:5525   */\n      dup2\n        /* \"#utility.yul\":5513:5534   */\n      mstore\n        /* \"#utility.yul\":5565:5569   */\n      0x20\n        /* \"#utility.yul\":5558:5563   */\n      dup2\n        /* \"#utility.yul\":5554:5570   */\n      add\n        /* \"#utility.yul\":5603:5606   */\n      dup5\n        /* \"#utility.yul\":5594:5600   */\n      dup5\n        /* \"#utility.yul\":5589:5592   */\n      dup5\n        /* \"#utility.yul\":5585:5601   */\n      add\n        /* \"#utility.yul\":5582:5607   */\n      gt\n        /* \"#utility.yul\":5579:5691   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":5610:5689   */\n      tag_267\n      tag_165\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":5579:5691   */\n    tag_266:\n        /* \"#utility.yul\":5700:5754   */\n      tag_268\n        /* \"#utility.yul\":5747:5753   */\n      dup5\n        /* \"#utility.yul\":5742:5745   */\n      dup3\n        /* \"#utility.yul\":5737:5740   */\n      dup6\n        /* \"#utility.yul\":5700:5754   */\n      tag_171\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":5419:5760   */\n      pop\n        /* \"#utility.yul\":5335:5760   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5780:6120   */\n    tag_173:\n        /* \"#utility.yul\":5836:5841   */\n      0x00\n        /* \"#utility.yul\":5885:5888   */\n      dup3\n        /* \"#utility.yul\":5878:5882   */\n      0x1f\n        /* \"#utility.yul\":5870:5876   */\n      dup4\n        /* \"#utility.yul\":5866:5883   */\n      add\n        /* \"#utility.yul\":5862:5889   */\n      slt\n        /* \"#utility.yul\":5852:5974   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":5893:5972   */\n      tag_271\n      tag_164\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5852:5974   */\n    tag_270:\n        /* \"#utility.yul\":6010:6016   */\n      dup2\n        /* \"#utility.yul\":5997:6017   */\n      calldataload\n        /* \"#utility.yul\":6035:6114   */\n      tag_272\n        /* \"#utility.yul\":6110:6113   */\n      dup5\n        /* \"#utility.yul\":6102:6108   */\n      dup3\n        /* \"#utility.yul\":6095:6099   */\n      0x20\n        /* \"#utility.yul\":6087:6093   */\n      dup7\n        /* \"#utility.yul\":6083:6100   */\n      add\n        /* \"#utility.yul\":6035:6114   */\n      tag_172\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":6026:6114   */\n      swap2\n      pop\n        /* \"#utility.yul\":5842:6120   */\n      pop\n        /* \"#utility.yul\":5780:6120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6126:8083   */\n    tag_38:\n        /* \"#utility.yul\":6280:6286   */\n      0x00\n        /* \"#utility.yul\":6288:6294   */\n      dup1\n        /* \"#utility.yul\":6296:6302   */\n      0x00\n        /* \"#utility.yul\":6304:6310   */\n      dup1\n        /* \"#utility.yul\":6312:6318   */\n      0x00\n        /* \"#utility.yul\":6320:6326   */\n      dup1\n        /* \"#utility.yul\":6369:6372   */\n      0xc0\n        /* \"#utility.yul\":6357:6366   */\n      dup8\n        /* \"#utility.yul\":6348:6355   */\n      dup10\n        /* \"#utility.yul\":6344:6367   */\n      sub\n        /* \"#utility.yul\":6340:6373   */\n      slt\n        /* \"#utility.yul\":6337:6457   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":6376:6455   */\n      tag_275\n      tag_152\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":6337:6457   */\n    tag_274:\n        /* \"#utility.yul\":6496:6497   */\n      0x00\n        /* \"#utility.yul\":6521:6574   */\n      tag_276\n        /* \"#utility.yul\":6566:6573   */\n      dup10\n        /* \"#utility.yul\":6557:6563   */\n      dup3\n        /* \"#utility.yul\":6546:6555   */\n      dup11\n        /* \"#utility.yul\":6542:6564   */\n      add\n        /* \"#utility.yul\":6521:6574   */\n      tag_156\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":6511:6574   */\n      swap7\n      pop\n        /* \"#utility.yul\":6467:6584   */\n      pop\n        /* \"#utility.yul\":6651:6653   */\n      0x20\n        /* \"#utility.yul\":6640:6649   */\n      dup8\n        /* \"#utility.yul\":6636:6654   */\n      add\n        /* \"#utility.yul\":6623:6655   */\n      calldataload\n        /* \"#utility.yul\":6682:6700   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6674:6680   */\n      dup2\n        /* \"#utility.yul\":6671:6701   */\n      gt\n        /* \"#utility.yul\":6668:6785   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":6704:6783   */\n      tag_278\n      tag_153\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":6668:6785   */\n    tag_277:\n        /* \"#utility.yul\":6809:6872   */\n      tag_279\n        /* \"#utility.yul\":6864:6871   */\n      dup10\n        /* \"#utility.yul\":6855:6861   */\n      dup3\n        /* \"#utility.yul\":6844:6853   */\n      dup11\n        /* \"#utility.yul\":6840:6862   */\n      add\n        /* \"#utility.yul\":6809:6872   */\n      tag_173\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":6799:6872   */\n      swap6\n      pop\n        /* \"#utility.yul\":6594:6882   */\n      pop\n        /* \"#utility.yul\":6949:6951   */\n      0x40\n        /* \"#utility.yul\":6938:6947   */\n      dup8\n        /* \"#utility.yul\":6934:6952   */\n      add\n        /* \"#utility.yul\":6921:6953   */\n      calldataload\n        /* \"#utility.yul\":6980:6998   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6972:6978   */\n      dup2\n        /* \"#utility.yul\":6969:6999   */\n      gt\n        /* \"#utility.yul\":6966:7083   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":7002:7081   */\n      tag_281\n      tag_153\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":6966:7083   */\n    tag_280:\n        /* \"#utility.yul\":7107:7170   */\n      tag_282\n        /* \"#utility.yul\":7162:7169   */\n      dup10\n        /* \"#utility.yul\":7153:7159   */\n      dup3\n        /* \"#utility.yul\":7142:7151   */\n      dup11\n        /* \"#utility.yul\":7138:7160   */\n      add\n        /* \"#utility.yul\":7107:7170   */\n      tag_173\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":7097:7170   */\n      swap5\n      pop\n        /* \"#utility.yul\":6892:7180   */\n      pop\n        /* \"#utility.yul\":7247:7249   */\n      0x60\n        /* \"#utility.yul\":7236:7245   */\n      dup8\n        /* \"#utility.yul\":7232:7250   */\n      add\n        /* \"#utility.yul\":7219:7251   */\n      calldataload\n        /* \"#utility.yul\":7278:7296   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7270:7276   */\n      dup2\n        /* \"#utility.yul\":7267:7297   */\n      gt\n        /* \"#utility.yul\":7264:7381   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":7300:7379   */\n      tag_284\n      tag_153\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":7264:7381   */\n    tag_283:\n        /* \"#utility.yul\":7405:7468   */\n      tag_285\n        /* \"#utility.yul\":7460:7467   */\n      dup10\n        /* \"#utility.yul\":7451:7457   */\n      dup3\n        /* \"#utility.yul\":7440:7449   */\n      dup11\n        /* \"#utility.yul\":7436:7458   */\n      add\n        /* \"#utility.yul\":7405:7468   */\n      tag_173\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":7395:7468   */\n      swap4\n      pop\n        /* \"#utility.yul\":7190:7478   */\n      pop\n        /* \"#utility.yul\":7545:7548   */\n      0x80\n        /* \"#utility.yul\":7534:7543   */\n      dup8\n        /* \"#utility.yul\":7530:7549   */\n      add\n        /* \"#utility.yul\":7517:7550   */\n      calldataload\n        /* \"#utility.yul\":7577:7595   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7569:7575   */\n      dup2\n        /* \"#utility.yul\":7566:7596   */\n      gt\n        /* \"#utility.yul\":7563:7680   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":7599:7678   */\n      tag_287\n      tag_153\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":7563:7680   */\n    tag_286:\n        /* \"#utility.yul\":7704:7767   */\n      tag_288\n        /* \"#utility.yul\":7759:7766   */\n      dup10\n        /* \"#utility.yul\":7750:7756   */\n      dup3\n        /* \"#utility.yul\":7739:7748   */\n      dup11\n        /* \"#utility.yul\":7735:7757   */\n      add\n        /* \"#utility.yul\":7704:7767   */\n      tag_173\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":7694:7767   */\n      swap3\n      pop\n        /* \"#utility.yul\":7488:7777   */\n      pop\n        /* \"#utility.yul\":7844:7847   */\n      0xa0\n        /* \"#utility.yul\":7833:7842   */\n      dup8\n        /* \"#utility.yul\":7829:7848   */\n      add\n        /* \"#utility.yul\":7816:7849   */\n      calldataload\n        /* \"#utility.yul\":7876:7894   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7868:7874   */\n      dup2\n        /* \"#utility.yul\":7865:7895   */\n      gt\n        /* \"#utility.yul\":7862:7979   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":7898:7977   */\n      tag_290\n      tag_153\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":7862:7979   */\n    tag_289:\n        /* \"#utility.yul\":8003:8066   */\n      tag_291\n        /* \"#utility.yul\":8058:8065   */\n      dup10\n        /* \"#utility.yul\":8049:8055   */\n      dup3\n        /* \"#utility.yul\":8038:8047   */\n      dup11\n        /* \"#utility.yul\":8034:8056   */\n      add\n        /* \"#utility.yul\":8003:8066   */\n      tag_173\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":7993:8066   */\n      swap2\n      pop\n        /* \"#utility.yul\":7787:8076   */\n      pop\n        /* \"#utility.yul\":6126:8083   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":8089:8166   */\n    tag_174:\n        /* \"#utility.yul\":8126:8133   */\n      0x00\n        /* \"#utility.yul\":8155:8160   */\n      dup2\n        /* \"#utility.yul\":8144:8160   */\n      swap1\n      pop\n        /* \"#utility.yul\":8089:8166   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8172:8290   */\n    tag_175:\n        /* \"#utility.yul\":8259:8283   */\n      tag_294\n        /* \"#utility.yul\":8277:8282   */\n      dup2\n        /* \"#utility.yul\":8259:8283   */\n      tag_174\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":8254:8257   */\n      dup3\n        /* \"#utility.yul\":8247:8284   */\n      mstore\n        /* \"#utility.yul\":8172:8290   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8296:8518   */\n    tag_49:\n        /* \"#utility.yul\":8389:8393   */\n      0x00\n        /* \"#utility.yul\":8427:8429   */\n      0x20\n        /* \"#utility.yul\":8416:8425   */\n      dup3\n        /* \"#utility.yul\":8412:8430   */\n      add\n        /* \"#utility.yul\":8404:8430   */\n      swap1\n      pop\n        /* \"#utility.yul\":8440:8511   */\n      tag_296\n        /* \"#utility.yul\":8508:8509   */\n      0x00\n        /* \"#utility.yul\":8497:8506   */\n      dup4\n        /* \"#utility.yul\":8493:8510   */\n      add\n        /* \"#utility.yul\":8484:8490   */\n      dup5\n        /* \"#utility.yul\":8440:8511   */\n      tag_175\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":8296:8518   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8524:8693   */\n    tag_176:\n        /* \"#utility.yul\":8608:8619   */\n      0x00\n        /* \"#utility.yul\":8642:8648   */\n      dup3\n        /* \"#utility.yul\":8637:8640   */\n      dup3\n        /* \"#utility.yul\":8630:8649   */\n      mstore\n        /* \"#utility.yul\":8682:8686   */\n      0x20\n        /* \"#utility.yul\":8677:8680   */\n      dup3\n        /* \"#utility.yul\":8673:8687   */\n      add\n        /* \"#utility.yul\":8658:8687   */\n      swap1\n      pop\n        /* \"#utility.yul\":8524:8693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8699:8869   */\n    tag_177:\n        /* \"#utility.yul\":8839:8861   */\n      0x5175697a20616c72656164792073746172746564000000000000000000000000\n        /* \"#utility.yul\":8835:8836   */\n      0x00\n        /* \"#utility.yul\":8827:8833   */\n      dup3\n        /* \"#utility.yul\":8823:8837   */\n      add\n        /* \"#utility.yul\":8816:8862   */\n      mstore\n        /* \"#utility.yul\":8699:8869   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8875:9241   */\n    tag_178:\n        /* \"#utility.yul\":9017:9020   */\n      0x00\n        /* \"#utility.yul\":9038:9105   */\n      tag_300\n        /* \"#utility.yul\":9102:9104   */\n      0x14\n        /* \"#utility.yul\":9097:9100   */\n      dup4\n        /* \"#utility.yul\":9038:9105   */\n      tag_176\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":9031:9105   */\n      swap2\n      pop\n        /* \"#utility.yul\":9114:9207   */\n      tag_301\n        /* \"#utility.yul\":9203:9206   */\n      dup3\n        /* \"#utility.yul\":9114:9207   */\n      tag_177\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":9232:9234   */\n      0x20\n        /* \"#utility.yul\":9227:9230   */\n      dup3\n        /* \"#utility.yul\":9223:9235   */\n      add\n        /* \"#utility.yul\":9216:9235   */\n      swap1\n      pop\n        /* \"#utility.yul\":8875:9241   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9247:9666   */\n    tag_61:\n        /* \"#utility.yul\":9413:9417   */\n      0x00\n        /* \"#utility.yul\":9451:9453   */\n      0x20\n        /* \"#utility.yul\":9440:9449   */\n      dup3\n        /* \"#utility.yul\":9436:9454   */\n      add\n        /* \"#utility.yul\":9428:9454   */\n      swap1\n      pop\n        /* \"#utility.yul\":9500:9509   */\n      dup2\n        /* \"#utility.yul\":9494:9498   */\n      dup2\n        /* \"#utility.yul\":9490:9510   */\n      sub\n        /* \"#utility.yul\":9486:9487   */\n      0x00\n        /* \"#utility.yul\":9475:9484   */\n      dup4\n        /* \"#utility.yul\":9471:9488   */\n      add\n        /* \"#utility.yul\":9464:9511   */\n      mstore\n        /* \"#utility.yul\":9528:9659   */\n      tag_303\n        /* \"#utility.yul\":9654:9658   */\n      dup2\n        /* \"#utility.yul\":9528:9659   */\n      tag_178\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":9520:9659   */\n      swap1\n      pop\n        /* \"#utility.yul\":9247:9666   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9672:9838   */\n    tag_179:\n        /* \"#utility.yul\":9812:9830   */\n      0x5175697a206e6f74207374617274656400000000000000000000000000000000\n        /* \"#utility.yul\":9808:9809   */\n      0x00\n        /* \"#utility.yul\":9800:9806   */\n      dup3\n        /* \"#utility.yul\":9796:9810   */\n      add\n        /* \"#utility.yul\":9789:9831   */\n      mstore\n        /* \"#utility.yul\":9672:9838   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9844:10210   */\n    tag_180:\n        /* \"#utility.yul\":9986:9989   */\n      0x00\n        /* \"#utility.yul\":10007:10074   */\n      tag_306\n        /* \"#utility.yul\":10071:10073   */\n      0x10\n        /* \"#utility.yul\":10066:10069   */\n      dup4\n        /* \"#utility.yul\":10007:10074   */\n      tag_176\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":10000:10074   */\n      swap2\n      pop\n        /* \"#utility.yul\":10083:10176   */\n      tag_307\n        /* \"#utility.yul\":10172:10175   */\n      dup3\n        /* \"#utility.yul\":10083:10176   */\n      tag_179\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":10201:10203   */\n      0x20\n        /* \"#utility.yul\":10196:10199   */\n      dup3\n        /* \"#utility.yul\":10192:10204   */\n      add\n        /* \"#utility.yul\":10185:10204   */\n      swap1\n      pop\n        /* \"#utility.yul\":9844:10210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10216:10635   */\n    tag_80:\n        /* \"#utility.yul\":10382:10386   */\n      0x00\n        /* \"#utility.yul\":10420:10422   */\n      0x20\n        /* \"#utility.yul\":10409:10418   */\n      dup3\n        /* \"#utility.yul\":10405:10423   */\n      add\n        /* \"#utility.yul\":10397:10423   */\n      swap1\n      pop\n        /* \"#utility.yul\":10469:10478   */\n      dup2\n        /* \"#utility.yul\":10463:10467   */\n      dup2\n        /* \"#utility.yul\":10459:10479   */\n      sub\n        /* \"#utility.yul\":10455:10456   */\n      0x00\n        /* \"#utility.yul\":10444:10453   */\n      dup4\n        /* \"#utility.yul\":10440:10457   */\n      add\n        /* \"#utility.yul\":10433:10480   */\n      mstore\n        /* \"#utility.yul\":10497:10628   */\n      tag_309\n        /* \"#utility.yul\":10623:10627   */\n      dup2\n        /* \"#utility.yul\":10497:10628   */\n      tag_180\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":10489:10628   */\n      swap1\n      pop\n        /* \"#utility.yul\":10216:10635   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10641:10818   */\n    tag_181:\n        /* \"#utility.yul\":10781:10810   */\n      0x506c617965722068617320616c726561647920616e7377657265640000000000\n        /* \"#utility.yul\":10777:10778   */\n      0x00\n        /* \"#utility.yul\":10769:10775   */\n      dup3\n        /* \"#utility.yul\":10765:10779   */\n      add\n        /* \"#utility.yul\":10758:10811   */\n      mstore\n        /* \"#utility.yul\":10641:10818   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10824:11190   */\n    tag_182:\n        /* \"#utility.yul\":10966:10969   */\n      0x00\n        /* \"#utility.yul\":10987:11054   */\n      tag_312\n        /* \"#utility.yul\":11051:11053   */\n      0x1b\n        /* \"#utility.yul\":11046:11049   */\n      dup4\n        /* \"#utility.yul\":10987:11054   */\n      tag_176\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":10980:11054   */\n      swap2\n      pop\n        /* \"#utility.yul\":11063:11156   */\n      tag_313\n        /* \"#utility.yul\":11152:11155   */\n      dup3\n        /* \"#utility.yul\":11063:11156   */\n      tag_181\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":11181:11183   */\n      0x20\n        /* \"#utility.yul\":11176:11179   */\n      dup3\n        /* \"#utility.yul\":11172:11184   */\n      add\n        /* \"#utility.yul\":11165:11184   */\n      swap1\n      pop\n        /* \"#utility.yul\":10824:11190   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11196:11615   */\n    tag_84:\n        /* \"#utility.yul\":11362:11366   */\n      0x00\n        /* \"#utility.yul\":11400:11402   */\n      0x20\n        /* \"#utility.yul\":11389:11398   */\n      dup3\n        /* \"#utility.yul\":11385:11403   */\n      add\n        /* \"#utility.yul\":11377:11403   */\n      swap1\n      pop\n        /* \"#utility.yul\":11449:11458   */\n      dup2\n        /* \"#utility.yul\":11443:11447   */\n      dup2\n        /* \"#utility.yul\":11439:11459   */\n      sub\n        /* \"#utility.yul\":11435:11436   */\n      0x00\n        /* \"#utility.yul\":11424:11433   */\n      dup4\n        /* \"#utility.yul\":11420:11437   */\n      add\n        /* \"#utility.yul\":11413:11460   */\n      mstore\n        /* \"#utility.yul\":11477:11608   */\n      tag_315\n        /* \"#utility.yul\":11603:11607   */\n      dup2\n        /* \"#utility.yul\":11477:11608   */\n      tag_182\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":11469:11608   */\n      swap1\n      pop\n        /* \"#utility.yul\":11196:11615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11621:11801   */\n    tag_87:\n        /* \"#utility.yul\":11669:11746   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11666:11667   */\n      0x00\n        /* \"#utility.yul\":11659:11747   */\n      mstore\n        /* \"#utility.yul\":11766:11770   */\n      0x32\n        /* \"#utility.yul\":11763:11764   */\n      0x04\n        /* \"#utility.yul\":11756:11771   */\n      mstore\n        /* \"#utility.yul\":11790:11794   */\n      0x24\n        /* \"#utility.yul\":11787:11788   */\n      0x00\n        /* \"#utility.yul\":11780:11795   */\n      revert\n        /* \"#utility.yul\":11807:11906   */\n    tag_183:\n        /* \"#utility.yul\":11859:11865   */\n      0x00\n        /* \"#utility.yul\":11893:11898   */\n      dup2\n        /* \"#utility.yul\":11887:11899   */\n      mload\n        /* \"#utility.yul\":11877:11899   */\n      swap1\n      pop\n        /* \"#utility.yul\":11807:11906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11912:12060   */\n    tag_184:\n        /* \"#utility.yul\":12014:12025   */\n      0x00\n        /* \"#utility.yul\":12051:12054   */\n      dup2\n        /* \"#utility.yul\":12036:12054   */\n      swap1\n      pop\n        /* \"#utility.yul\":11912:12060   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12066:12312   */\n    tag_185:\n        /* \"#utility.yul\":12147:12148   */\n      0x00\n        /* \"#utility.yul\":12157:12270   */\n    tag_320:\n        /* \"#utility.yul\":12171:12177   */\n      dup4\n        /* \"#utility.yul\":12168:12169   */\n      dup2\n        /* \"#utility.yul\":12165:12178   */\n      lt\n        /* \"#utility.yul\":12157:12270   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":12256:12257   */\n      dup1\n        /* \"#utility.yul\":12251:12254   */\n      dup3\n        /* \"#utility.yul\":12247:12258   */\n      add\n        /* \"#utility.yul\":12241:12259   */\n      mload\n        /* \"#utility.yul\":12237:12238   */\n      dup2\n        /* \"#utility.yul\":12232:12235   */\n      dup5\n        /* \"#utility.yul\":12228:12239   */\n      add\n        /* \"#utility.yul\":12221:12260   */\n      mstore\n        /* \"#utility.yul\":12193:12195   */\n      0x20\n        /* \"#utility.yul\":12190:12191   */\n      dup2\n        /* \"#utility.yul\":12186:12196   */\n      add\n        /* \"#utility.yul\":12181:12196   */\n      swap1\n      pop\n        /* \"#utility.yul\":12157:12270   */\n      jump(tag_320)\n    tag_322:\n        /* \"#utility.yul\":12304:12305   */\n      0x00\n        /* \"#utility.yul\":12295:12301   */\n      dup5\n        /* \"#utility.yul\":12290:12293   */\n      dup5\n        /* \"#utility.yul\":12286:12302   */\n      add\n        /* \"#utility.yul\":12279:12306   */\n      mstore\n        /* \"#utility.yul\":12128:12312   */\n      pop\n        /* \"#utility.yul\":12066:12312   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12318:12708   */\n    tag_186:\n        /* \"#utility.yul\":12424:12427   */\n      0x00\n        /* \"#utility.yul\":12452:12491   */\n      tag_324\n        /* \"#utility.yul\":12485:12490   */\n      dup3\n        /* \"#utility.yul\":12452:12491   */\n      tag_183\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":12507:12596   */\n      tag_325\n        /* \"#utility.yul\":12589:12595   */\n      dup2\n        /* \"#utility.yul\":12584:12587   */\n      dup6\n        /* \"#utility.yul\":12507:12596   */\n      tag_184\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":12500:12596   */\n      swap4\n      pop\n        /* \"#utility.yul\":12605:12670   */\n      tag_326\n        /* \"#utility.yul\":12663:12669   */\n      dup2\n        /* \"#utility.yul\":12658:12661   */\n      dup6\n        /* \"#utility.yul\":12651:12655   */\n      0x20\n        /* \"#utility.yul\":12644:12649   */\n      dup7\n        /* \"#utility.yul\":12640:12656   */\n      add\n        /* \"#utility.yul\":12605:12670   */\n      tag_185\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":12695:12701   */\n      dup1\n        /* \"#utility.yul\":12690:12693   */\n      dup5\n        /* \"#utility.yul\":12686:12702   */\n      add\n        /* \"#utility.yul\":12679:12702   */\n      swap2\n      pop\n        /* \"#utility.yul\":12428:12708   */\n      pop\n        /* \"#utility.yul\":12318:12708   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12714:12989   */\n    tag_89:\n        /* \"#utility.yul\":12846:12849   */\n      0x00\n        /* \"#utility.yul\":12868:12963   */\n      tag_328\n        /* \"#utility.yul\":12959:12962   */\n      dup3\n        /* \"#utility.yul\":12950:12956   */\n      dup5\n        /* \"#utility.yul\":12868:12963   */\n      tag_186\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":12861:12963   */\n      swap2\n      pop\n        /* \"#utility.yul\":12980:12983   */\n      dup2\n        /* \"#utility.yul\":12973:12983   */\n      swap1\n      pop\n        /* \"#utility.yul\":12714:12989   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12995:13163   */\n    tag_187:\n        /* \"#utility.yul\":13135:13155   */\n      0x496e636f727265637420616e7377657220310000000000000000000000000000\n        /* \"#utility.yul\":13131:13132   */\n      0x00\n        /* \"#utility.yul\":13123:13129   */\n      dup3\n        /* \"#utility.yul\":13119:13133   */\n      add\n        /* \"#utility.yul\":13112:13156   */\n      mstore\n        /* \"#utility.yul\":12995:13163   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13169:13535   */\n    tag_188:\n        /* \"#utility.yul\":13311:13314   */\n      0x00\n        /* \"#utility.yul\":13332:13399   */\n      tag_331\n        /* \"#utility.yul\":13396:13398   */\n      0x12\n        /* \"#utility.yul\":13391:13394   */\n      dup4\n        /* \"#utility.yul\":13332:13399   */\n      tag_176\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":13325:13399   */\n      swap2\n      pop\n        /* \"#utility.yul\":13408:13501   */\n      tag_332\n        /* \"#utility.yul\":13497:13500   */\n      dup3\n        /* \"#utility.yul\":13408:13501   */\n      tag_187\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":13526:13528   */\n      0x20\n        /* \"#utility.yul\":13521:13524   */\n      dup3\n        /* \"#utility.yul\":13517:13529   */\n      add\n        /* \"#utility.yul\":13510:13529   */\n      swap1\n      pop\n        /* \"#utility.yul\":13169:13535   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13541:13960   */\n    tag_93:\n        /* \"#utility.yul\":13707:13711   */\n      0x00\n        /* \"#utility.yul\":13745:13747   */\n      0x20\n        /* \"#utility.yul\":13734:13743   */\n      dup3\n        /* \"#utility.yul\":13730:13748   */\n      add\n        /* \"#utility.yul\":13722:13748   */\n      swap1\n      pop\n        /* \"#utility.yul\":13794:13803   */\n      dup2\n        /* \"#utility.yul\":13788:13792   */\n      dup2\n        /* \"#utility.yul\":13784:13804   */\n      sub\n        /* \"#utility.yul\":13780:13781   */\n      0x00\n        /* \"#utility.yul\":13769:13778   */\n      dup4\n        /* \"#utility.yul\":13765:13782   */\n      add\n        /* \"#utility.yul\":13758:13805   */\n      mstore\n        /* \"#utility.yul\":13822:13953   */\n      tag_334\n        /* \"#utility.yul\":13948:13952   */\n      dup2\n        /* \"#utility.yul\":13822:13953   */\n      tag_188\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":13814:13953   */\n      swap1\n      pop\n        /* \"#utility.yul\":13541:13960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13966:14134   */\n    tag_189:\n        /* \"#utility.yul\":14106:14126   */\n      0x496e636f727265637420616e7377657220320000000000000000000000000000\n        /* \"#utility.yul\":14102:14103   */\n      0x00\n        /* \"#utility.yul\":14094:14100   */\n      dup3\n        /* \"#utility.yul\":14090:14104   */\n      add\n        /* \"#utility.yul\":14083:14127   */\n      mstore\n        /* \"#utility.yul\":13966:14134   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14140:14506   */\n    tag_190:\n        /* \"#utility.yul\":14282:14285   */\n      0x00\n        /* \"#utility.yul\":14303:14370   */\n      tag_337\n        /* \"#utility.yul\":14367:14369   */\n      0x12\n        /* \"#utility.yul\":14362:14365   */\n      dup4\n        /* \"#utility.yul\":14303:14370   */\n      tag_176\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":14296:14370   */\n      swap2\n      pop\n        /* \"#utility.yul\":14379:14472   */\n      tag_338\n        /* \"#utility.yul\":14468:14471   */\n      dup3\n        /* \"#utility.yul\":14379:14472   */\n      tag_189\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":14497:14499   */\n      0x20\n        /* \"#utility.yul\":14492:14495   */\n      dup3\n        /* \"#utility.yul\":14488:14500   */\n      add\n        /* \"#utility.yul\":14481:14500   */\n      swap1\n      pop\n        /* \"#utility.yul\":14140:14506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14512:14931   */\n    tag_100:\n        /* \"#utility.yul\":14678:14682   */\n      0x00\n        /* \"#utility.yul\":14716:14718   */\n      0x20\n        /* \"#utility.yul\":14705:14714   */\n      dup3\n        /* \"#utility.yul\":14701:14719   */\n      add\n        /* \"#utility.yul\":14693:14719   */\n      swap1\n      pop\n        /* \"#utility.yul\":14765:14774   */\n      dup2\n        /* \"#utility.yul\":14759:14763   */\n      dup2\n        /* \"#utility.yul\":14755:14775   */\n      sub\n        /* \"#utility.yul\":14751:14752   */\n      0x00\n        /* \"#utility.yul\":14740:14749   */\n      dup4\n        /* \"#utility.yul\":14736:14753   */\n      add\n        /* \"#utility.yul\":14729:14776   */\n      mstore\n        /* \"#utility.yul\":14793:14924   */\n      tag_340\n        /* \"#utility.yul\":14919:14923   */\n      dup2\n        /* \"#utility.yul\":14793:14924   */\n      tag_190\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":14785:14924   */\n      swap1\n      pop\n        /* \"#utility.yul\":14512:14931   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14937:15105   */\n    tag_191:\n        /* \"#utility.yul\":15077:15097   */\n      0x496e636f727265637420616e7377657220330000000000000000000000000000\n        /* \"#utility.yul\":15073:15074   */\n      0x00\n        /* \"#utility.yul\":15065:15071   */\n      dup3\n        /* \"#utility.yul\":15061:15075   */\n      add\n        /* \"#utility.yul\":15054:15098   */\n      mstore\n        /* \"#utility.yul\":14937:15105   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15111:15477   */\n    tag_192:\n        /* \"#utility.yul\":15253:15256   */\n      0x00\n        /* \"#utility.yul\":15274:15341   */\n      tag_343\n        /* \"#utility.yul\":15338:15340   */\n      0x12\n        /* \"#utility.yul\":15333:15336   */\n      dup4\n        /* \"#utility.yul\":15274:15341   */\n      tag_176\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":15267:15341   */\n      swap2\n      pop\n        /* \"#utility.yul\":15350:15443   */\n      tag_344\n        /* \"#utility.yul\":15439:15442   */\n      dup3\n        /* \"#utility.yul\":15350:15443   */\n      tag_191\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":15468:15470   */\n      0x20\n        /* \"#utility.yul\":15463:15466   */\n      dup3\n        /* \"#utility.yul\":15459:15471   */\n      add\n        /* \"#utility.yul\":15452:15471   */\n      swap1\n      pop\n        /* \"#utility.yul\":15111:15477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15483:15902   */\n    tag_107:\n        /* \"#utility.yul\":15649:15653   */\n      0x00\n        /* \"#utility.yul\":15687:15689   */\n      0x20\n        /* \"#utility.yul\":15676:15685   */\n      dup3\n        /* \"#utility.yul\":15672:15690   */\n      add\n        /* \"#utility.yul\":15664:15690   */\n      swap1\n      pop\n        /* \"#utility.yul\":15736:15745   */\n      dup2\n        /* \"#utility.yul\":15730:15734   */\n      dup2\n        /* \"#utility.yul\":15726:15746   */\n      sub\n        /* \"#utility.yul\":15722:15723   */\n      0x00\n        /* \"#utility.yul\":15711:15720   */\n      dup4\n        /* \"#utility.yul\":15707:15724   */\n      add\n        /* \"#utility.yul\":15700:15747   */\n      mstore\n        /* \"#utility.yul\":15764:15895   */\n      tag_346\n        /* \"#utility.yul\":15890:15894   */\n      dup2\n        /* \"#utility.yul\":15764:15895   */\n      tag_192\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":15756:15895   */\n      swap1\n      pop\n        /* \"#utility.yul\":15483:15902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15908:16076   */\n    tag_193:\n        /* \"#utility.yul\":16048:16068   */\n      0x496e636f727265637420616e7377657220340000000000000000000000000000\n        /* \"#utility.yul\":16044:16045   */\n      0x00\n        /* \"#utility.yul\":16036:16042   */\n      dup3\n        /* \"#utility.yul\":16032:16046   */\n      add\n        /* \"#utility.yul\":16025:16069   */\n      mstore\n        /* \"#utility.yul\":15908:16076   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16082:16448   */\n    tag_194:\n        /* \"#utility.yul\":16224:16227   */\n      0x00\n        /* \"#utility.yul\":16245:16312   */\n      tag_349\n        /* \"#utility.yul\":16309:16311   */\n      0x12\n        /* \"#utility.yul\":16304:16307   */\n      dup4\n        /* \"#utility.yul\":16245:16312   */\n      tag_176\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":16238:16312   */\n      swap2\n      pop\n        /* \"#utility.yul\":16321:16414   */\n      tag_350\n        /* \"#utility.yul\":16410:16413   */\n      dup3\n        /* \"#utility.yul\":16321:16414   */\n      tag_193\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":16439:16441   */\n      0x20\n        /* \"#utility.yul\":16434:16437   */\n      dup3\n        /* \"#utility.yul\":16430:16442   */\n      add\n        /* \"#utility.yul\":16423:16442   */\n      swap1\n      pop\n        /* \"#utility.yul\":16082:16448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16454:16873   */\n    tag_114:\n        /* \"#utility.yul\":16620:16624   */\n      0x00\n        /* \"#utility.yul\":16658:16660   */\n      0x20\n        /* \"#utility.yul\":16647:16656   */\n      dup3\n        /* \"#utility.yul\":16643:16661   */\n      add\n        /* \"#utility.yul\":16635:16661   */\n      swap1\n      pop\n        /* \"#utility.yul\":16707:16716   */\n      dup2\n        /* \"#utility.yul\":16701:16705   */\n      dup2\n        /* \"#utility.yul\":16697:16717   */\n      sub\n        /* \"#utility.yul\":16693:16694   */\n      0x00\n        /* \"#utility.yul\":16682:16691   */\n      dup4\n        /* \"#utility.yul\":16678:16695   */\n      add\n        /* \"#utility.yul\":16671:16718   */\n      mstore\n        /* \"#utility.yul\":16735:16866   */\n      tag_352\n        /* \"#utility.yul\":16861:16865   */\n      dup2\n        /* \"#utility.yul\":16735:16866   */\n      tag_194\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":16727:16866   */\n      swap1\n      pop\n        /* \"#utility.yul\":16454:16873   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16879:17047   */\n    tag_195:\n        /* \"#utility.yul\":17019:17039   */\n      0x496e636f727265637420616e7377657220350000000000000000000000000000\n        /* \"#utility.yul\":17015:17016   */\n      0x00\n        /* \"#utility.yul\":17007:17013   */\n      dup3\n        /* \"#utility.yul\":17003:17017   */\n      add\n        /* \"#utility.yul\":16996:17040   */\n      mstore\n        /* \"#utility.yul\":16879:17047   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17053:17419   */\n    tag_196:\n        /* \"#utility.yul\":17195:17198   */\n      0x00\n        /* \"#utility.yul\":17216:17283   */\n      tag_355\n        /* \"#utility.yul\":17280:17282   */\n      0x12\n        /* \"#utility.yul\":17275:17278   */\n      dup4\n        /* \"#utility.yul\":17216:17283   */\n      tag_176\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":17209:17283   */\n      swap2\n      pop\n        /* \"#utility.yul\":17292:17385   */\n      tag_356\n        /* \"#utility.yul\":17381:17384   */\n      dup3\n        /* \"#utility.yul\":17292:17385   */\n      tag_195\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":17410:17412   */\n      0x20\n        /* \"#utility.yul\":17405:17408   */\n      dup3\n        /* \"#utility.yul\":17401:17413   */\n      add\n        /* \"#utility.yul\":17394:17413   */\n      swap1\n      pop\n        /* \"#utility.yul\":17053:17419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17425:17844   */\n    tag_121:\n        /* \"#utility.yul\":17591:17595   */\n      0x00\n        /* \"#utility.yul\":17629:17631   */\n      0x20\n        /* \"#utility.yul\":17618:17627   */\n      dup3\n        /* \"#utility.yul\":17614:17632   */\n      add\n        /* \"#utility.yul\":17606:17632   */\n      swap1\n      pop\n        /* \"#utility.yul\":17678:17687   */\n      dup2\n        /* \"#utility.yul\":17672:17676   */\n      dup2\n        /* \"#utility.yul\":17668:17688   */\n      sub\n        /* \"#utility.yul\":17664:17665   */\n      0x00\n        /* \"#utility.yul\":17653:17662   */\n      dup4\n        /* \"#utility.yul\":17649:17666   */\n      add\n        /* \"#utility.yul\":17642:17689   */\n      mstore\n        /* \"#utility.yul\":17706:17837   */\n      tag_358\n        /* \"#utility.yul\":17832:17836   */\n      dup2\n        /* \"#utility.yul\":17706:17837   */\n      tag_196\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":17698:17837   */\n      swap1\n      pop\n        /* \"#utility.yul\":17425:17844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17850:18182   */\n    tag_123:\n        /* \"#utility.yul\":17971:17975   */\n      0x00\n        /* \"#utility.yul\":18009:18011   */\n      0x40\n        /* \"#utility.yul\":17998:18007   */\n      dup3\n        /* \"#utility.yul\":17994:18012   */\n      add\n        /* \"#utility.yul\":17986:18012   */\n      swap1\n      pop\n        /* \"#utility.yul\":18022:18093   */\n      tag_360\n        /* \"#utility.yul\":18090:18091   */\n      0x00\n        /* \"#utility.yul\":18079:18088   */\n      dup4\n        /* \"#utility.yul\":18075:18092   */\n      add\n        /* \"#utility.yul\":18066:18072   */\n      dup6\n        /* \"#utility.yul\":18022:18093   */\n      tag_159\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":18103:18175   */\n      tag_361\n        /* \"#utility.yul\":18171:18173   */\n      0x20\n        /* \"#utility.yul\":18160:18169   */\n      dup4\n        /* \"#utility.yul\":18156:18174   */\n      add\n        /* \"#utility.yul\":18147:18153   */\n      dup5\n        /* \"#utility.yul\":18103:18175   */\n      tag_175\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":17850:18182   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220191c59567c45c2c00bc9d7cdf4a654251ff50cfcf8c862bac1611fe5745e2fc264736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1419": {
									"entryPoint": null,
									"id": 1419,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_429": {
									"entryPoint": null,
									"id": 429,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_525": {
									"entryPoint": 316,
									"id": 525,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1893:12",
										"nodeType": "YulBlock",
										"src": "0:1893:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "759:80:12",
													"nodeType": "YulBlock",
													"src": "759:80:12",
													"statements": [
														{
															"nativeSrc": "769:22:12",
															"nodeType": "YulAssignment",
															"src": "769:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:12"
																},
																"nativeSrc": "778:13:12",
																"nodeType": "YulFunctionCall",
																"src": "778:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:12"
																},
																"nativeSrc": "800:33:12",
																"nodeType": "YulFunctionCall",
																"src": "800:33:12"
															},
															"nativeSrc": "800:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:12",
														"nodeType": "YulTypedName",
														"src": "737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:12",
														"nodeType": "YulTypedName",
														"src": "745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:12",
														"nodeType": "YulTypedName",
														"src": "753:5:12",
														"type": ""
													}
												],
												"src": "696:143:12"
											},
											{
												"body": {
													"nativeSrc": "939:413:12",
													"nodeType": "YulBlock",
													"src": "939:413:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:12",
																"nodeType": "YulBlock",
																"src": "985:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:12"
																			},
																			"nativeSrc": "987:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:12"
																		},
																		"nativeSrc": "987:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:12"
																		},
																		"nativeSrc": "956:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:12",
																		"nodeType": "YulLiteral",
																		"src": "981:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:12"
																},
																"nativeSrc": "952:32:12",
																"nodeType": "YulFunctionCall",
																"src": "952:32:12"
															},
															"nativeSrc": "949:119:12",
															"nodeType": "YulIf",
															"src": "949:119:12"
														},
														{
															"nativeSrc": "1078:128:12",
															"nodeType": "YulBlock",
															"src": "1078:128:12",
															"statements": [
																{
																	"nativeSrc": "1093:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:12"
																				},
																				"nativeSrc": "1164:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:12"
																		},
																		"nativeSrc": "1132:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:12",
															"nodeType": "YulBlock",
															"src": "1216:129:12",
															"statements": [
																{
																	"nativeSrc": "1231:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:12"
																				},
																				"nativeSrc": "1303:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:12"
																		},
																		"nativeSrc": "1271:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:12",
														"nodeType": "YulTypedName",
														"src": "901:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:12",
														"nodeType": "YulTypedName",
														"src": "912:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:12",
														"nodeType": "YulTypedName",
														"src": "924:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:12",
														"nodeType": "YulTypedName",
														"src": "932:6:12",
														"type": ""
													}
												],
												"src": "845:507:12"
											},
											{
												"body": {
													"nativeSrc": "1423:53:12",
													"nodeType": "YulBlock",
													"src": "1423:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:12"
																		},
																		"nativeSrc": "1445:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:12"
																},
																"nativeSrc": "1433:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:12"
															},
															"nativeSrc": "1433:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:12",
														"nodeType": "YulTypedName",
														"src": "1411:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:12",
														"nodeType": "YulTypedName",
														"src": "1418:3:12",
														"type": ""
													}
												],
												"src": "1358:118:12"
											},
											{
												"body": {
													"nativeSrc": "1580:124:12",
													"nodeType": "YulBlock",
													"src": "1580:124:12",
													"statements": [
														{
															"nativeSrc": "1590:26:12",
															"nodeType": "YulAssignment",
															"src": "1590:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:12"
																},
																"nativeSrc": "1598:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:12"
																		},
																		"nativeSrc": "1679:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:12"
																},
																"nativeSrc": "1626:71:12",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:12"
															},
															"nativeSrc": "1626:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:12",
														"nodeType": "YulTypedName",
														"src": "1552:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:12",
														"nodeType": "YulTypedName",
														"src": "1564:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:12",
														"nodeType": "YulTypedName",
														"src": "1575:4:12",
														"type": ""
													}
												],
												"src": "1482:222:12"
											},
											{
												"body": {
													"nativeSrc": "1738:152:12",
													"nodeType": "YulBlock",
													"src": "1738:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1755:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1755:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1758:77:12",
																		"nodeType": "YulLiteral",
																		"src": "1758:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1748:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1748:6:12"
																},
																"nativeSrc": "1748:88:12",
																"nodeType": "YulFunctionCall",
																"src": "1748:88:12"
															},
															"nativeSrc": "1748:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "1748:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1852:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1852:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1855:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1855:4:12",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1845:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1845:6:12"
																},
																"nativeSrc": "1845:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1845:15:12"
															},
															"nativeSrc": "1845:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1845:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1876:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1876:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1879:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1879:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1869:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1869:6:12"
																},
																"nativeSrc": "1869:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1869:15:12"
															},
															"nativeSrc": "1869:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1869:15:12"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "1710:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1710:180:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526706f05b59d3b200006003553480156200001c575f80fd5b506040516200183638038062001836833981810160405281019062000042919062000262565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b6575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000ad9190620002b8565b60405180910390fd5b620000c7816200013c60201b60201c565b508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f8060146101000a81548160ff021916908360028111156200012f576200012e620002d3565b5b0217905550505062000300565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200022c8262000201565b9050919050565b6200023e8162000220565b811462000249575f80fd5b50565b5f815190506200025c8162000233565b92915050565b5f80604083850312156200027b576200027a620001fd565b5b5f6200028a858286016200024c565b92505060206200029d858286016200024c565b9150509250929050565b620002b28162000220565b82525050565b5f602082019050620002cd5f830184620002a7565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b611528806200030e5f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c80639206815f116100645780639206815f14610120578063aa4339cb1461013e578063dfbf53ae1461015a578063f2fde38b14610178578063f7b2a7be146101945761009c565b8063087e88d0146100a05780634c3415e6146100be5780635b67bdb4146100c8578063715018a6146100f85780638da5cb5b14610102575b5f80fd5b6100a86101b2565b6040516100b59190610cd3565b60405180910390f35b6100c66101d7565b005b6100e260048036038101906100dd9190610d38565b6102ab565b6040516100ef9190610d7d565b60405180910390f35b6101006102c8565b005b61010a6102db565b6040516101179190610da5565b60405180910390f35b610128610302565b6040516101359190610e31565b60405180910390f35b61015860048036038101906101539190610f86565b610314565b005b610162610a5b565b60405161016f9190610da5565b60405180910390f35b610192600480360381019061018d9190610d38565b610a80565b005b61019c610b04565b6040516101a991906110b3565b60405180910390f35b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101df610b0a565b5f60028111156101f2576101f1610dbe565b5b5f60149054906101000a900460ff16600281111561021357610212610dbe565b5b14610253576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024a90611126565b60405180910390fd5b60015f60146101000a81548160ff0219169083600281111561027857610277610dbe565b5b02179055507fb042f1d4d3b82efc559238fc1e12537fcdb79cccef346a003202925d94ff313360405160405180910390a1565b6004602052805f5260405f205f915054906101000a900460ff1681565b6102d0610b0a565b6102d95f610b91565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60149054906101000a900460ff1681565b61031c610b0a565b600160028111156103305761032f610dbe565b5b5f60149054906101000a900460ff16600281111561035157610350610dbe565b5b14610391576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103889061118e565b60405180910390fd5b60045f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561041b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610412906111f6565b60405180910390fd5b5f6040518060a001604052806040518060400160405280600881526020017f436f72726563743100000000000000000000000000000000000000000000000081525081526020016040518060400160405280600881526020017f436f72726563743200000000000000000000000000000000000000000000000081525081526020016040518060400160405280600881526020017f436f72726563743300000000000000000000000000000000000000000000000081525081526020016040518060400160405280600881526020017f436f72726563743400000000000000000000000000000000000000000000000081525081526020016040518060400160405280600881526020017f436f7272656374350000000000000000000000000000000000000000000000008152508152509050805f6005811061056157610560611214565b5b602002015160405160200161057691906112ad565b604051602081830303815290604052805190602001208660405160200161059d91906112ad565b60405160208183030381529060405280519060200120146105f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ea9061130d565b60405180910390fd5b8060016005811061060757610606611214565b5b602002015160405160200161061c91906112ad565b604051602081830303815290604052805190602001208560405160200161064391906112ad565b6040516020818303038152906040528051906020012014610699576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069090611375565b60405180910390fd5b806002600581106106ad576106ac611214565b5b60200201516040516020016106c291906112ad565b60405160208183030381529060405280519060200120846040516020016106e991906112ad565b604051602081830303815290604052805190602001201461073f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610736906113dd565b60405180910390fd5b8060036005811061075357610752611214565b5b602002015160405160200161076891906112ad565b604051602081830303815290604052805190602001208360405160200161078f91906112ad565b60405160208183030381529060405280519060200120146107e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dc90611445565b60405180910390fd5b806004600581106107f9576107f8611214565b5b602002015160405160200161080e91906112ad565b604051602081830303815290604052805190602001208260405160200161083591906112ad565b604051602081830303815290604052805190602001201461088b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610882906114ad565b60405180910390fd5b8660025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160045f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1960025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003546040518363ffffffff1660e01b815260040161099f9291906114cb565b5f604051808303815f87803b1580156109b6575f80fd5b505af11580156109c8573d5f803e3d5ffd5b5050505060025f60146101000a81548160ff021916908360028111156109f1576109f0610dbe565b5b02179055507fe5f4afc88cb448bad8ab76d9ea0a66b123681b66f88c8f8aedd19526d742fad560025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600354604051610a4a9291906114cb565b60405180910390a150505050505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a88610b0a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610af8575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610aef9190610da5565b60405180910390fd5b610b0181610b91565b50565b60035481565b610b12610c52565b73ffffffffffffffffffffffffffffffffffffffff16610b306102db565b73ffffffffffffffffffffffffffffffffffffffff1614610b8f57610b53610c52565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b869190610da5565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610c9b610c96610c9184610c59565b610c78565b610c59565b9050919050565b5f610cac82610c81565b9050919050565b5f610cbd82610ca2565b9050919050565b610ccd81610cb3565b82525050565b5f602082019050610ce65f830184610cc4565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f610d0782610c59565b9050919050565b610d1781610cfd565b8114610d21575f80fd5b50565b5f81359050610d3281610d0e565b92915050565b5f60208284031215610d4d57610d4c610cf5565b5b5f610d5a84828501610d24565b91505092915050565b5f8115159050919050565b610d7781610d63565b82525050565b5f602082019050610d905f830184610d6e565b92915050565b610d9f81610cfd565b82525050565b5f602082019050610db85f830184610d96565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60038110610dfc57610dfb610dbe565b5b50565b5f819050610e0c82610deb565b919050565b5f610e1b82610dff565b9050919050565b610e2b81610e11565b82525050565b5f602082019050610e445f830184610e22565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610e9882610e52565b810181811067ffffffffffffffff82111715610eb757610eb6610e62565b5b80604052505050565b5f610ec9610cec565b9050610ed58282610e8f565b919050565b5f67ffffffffffffffff821115610ef457610ef3610e62565b5b610efd82610e52565b9050602081019050919050565b828183375f83830152505050565b5f610f2a610f2584610eda565b610ec0565b905082815260208101848484011115610f4657610f45610e4e565b5b610f51848285610f0a565b509392505050565b5f82601f830112610f6d57610f6c610e4a565b5b8135610f7d848260208601610f18565b91505092915050565b5f805f805f8060c08789031215610fa057610f9f610cf5565b5b5f610fad89828a01610d24565b965050602087013567ffffffffffffffff811115610fce57610fcd610cf9565b5b610fda89828a01610f59565b955050604087013567ffffffffffffffff811115610ffb57610ffa610cf9565b5b61100789828a01610f59565b945050606087013567ffffffffffffffff81111561102857611027610cf9565b5b61103489828a01610f59565b935050608087013567ffffffffffffffff81111561105557611054610cf9565b5b61106189828a01610f59565b92505060a087013567ffffffffffffffff81111561108257611081610cf9565b5b61108e89828a01610f59565b9150509295509295509295565b5f819050919050565b6110ad8161109b565b82525050565b5f6020820190506110c65f8301846110a4565b92915050565b5f82825260208201905092915050565b7f5175697a20616c726561647920737461727465640000000000000000000000005f82015250565b5f6111106014836110cc565b915061111b826110dc565b602082019050919050565b5f6020820190508181035f83015261113d81611104565b9050919050565b7f5175697a206e6f742073746172746564000000000000000000000000000000005f82015250565b5f6111786010836110cc565b915061118382611144565b602082019050919050565b5f6020820190508181035f8301526111a58161116c565b9050919050565b7f506c617965722068617320616c726561647920616e73776572656400000000005f82015250565b5f6111e0601b836110cc565b91506111eb826111ac565b602082019050919050565b5f6020820190508181035f83015261120d816111d4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b5f81905092915050565b5f5b83811015611272578082015181840152602081019050611257565b5f8484015250505050565b5f61128782611241565b611291818561124b565b93506112a1818560208601611255565b80840191505092915050565b5f6112b8828461127d565b915081905092915050565b7f496e636f727265637420616e73776572203100000000000000000000000000005f82015250565b5f6112f76012836110cc565b9150611302826112c3565b602082019050919050565b5f6020820190508181035f830152611324816112eb565b9050919050565b7f496e636f727265637420616e73776572203200000000000000000000000000005f82015250565b5f61135f6012836110cc565b915061136a8261132b565b602082019050919050565b5f6020820190508181035f83015261138c81611353565b9050919050565b7f496e636f727265637420616e73776572203300000000000000000000000000005f82015250565b5f6113c76012836110cc565b91506113d282611393565b602082019050919050565b5f6020820190508181035f8301526113f4816113bb565b9050919050565b7f496e636f727265637420616e73776572203400000000000000000000000000005f82015250565b5f61142f6012836110cc565b915061143a826113fb565b602082019050919050565b5f6020820190508181035f83015261145c81611423565b9050919050565b7f496e636f727265637420616e73776572203500000000000000000000000000005f82015250565b5f6114976012836110cc565b91506114a282611463565b602082019050919050565b5f6020820190508181035f8301526114c48161148b565b9050919050565b5f6040820190506114de5f830185610d96565b6114eb60208301846110a4565b939250505056fea2646970667358221220191c59567c45c2c00bc9d7cdf4a654251ff50cfcf8c862bac1611fe5745e2fc264736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0x6F05B59D3B20000 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1836 CODESIZE SUB DUP1 PUSH3 0x1836 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x42 SWAP2 SWAP1 PUSH3 0x262 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xAD SWAP2 SWAP1 PUSH3 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xC7 DUP2 PUSH3 0x13C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x12F JUMPI PUSH3 0x12E PUSH3 0x2D3 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x300 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x22C DUP3 PUSH3 0x201 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x23E DUP2 PUSH3 0x220 JUMP JUMPDEST DUP2 EQ PUSH3 0x249 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x25C DUP2 PUSH3 0x233 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x27B JUMPI PUSH3 0x27A PUSH3 0x1FD JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x28A DUP6 DUP3 DUP7 ADD PUSH3 0x24C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x29D DUP6 DUP3 DUP7 ADD PUSH3 0x24C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B2 DUP2 PUSH3 0x220 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2CD PUSH0 DUP4 ADD DUP5 PUSH3 0x2A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1528 DUP1 PUSH3 0x30E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9206815F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9206815F EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xAA4339CB EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x194 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x87E88D0 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x4C3415E6 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x5B67BDB4 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x102 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x1D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10A PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x153 SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST PUSH2 0x314 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0xA5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0xA80 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0xB0A JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F2 JUMPI PUSH2 0x1F1 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x213 JUMPI PUSH2 0x212 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24A SWAP1 PUSH2 0x1126 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x278 JUMPI PUSH2 0x277 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0xB042F1D4D3B82EFC559238FC1E12537FCDB79CCCEF346A003202925D94FF3133 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x2D9 PUSH0 PUSH2 0xB91 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x31C PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x330 JUMPI PUSH2 0x32F PUSH2 0xDBE JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x351 JUMPI PUSH2 0x350 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x391 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x388 SWAP1 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x412 SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F727265637431000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F727265637432000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F727265637433000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F727265637434000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F727265637435000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP SWAP1 POP DUP1 PUSH0 PUSH1 0x5 DUP2 LT PUSH2 0x561 JUMPI PUSH2 0x560 PUSH2 0x1214 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x5F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP1 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x5 DUP2 LT PUSH2 0x607 JUMPI PUSH2 0x606 PUSH2 0x1214 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x643 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x699 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x690 SWAP1 PUSH2 0x1375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x5 DUP2 LT PUSH2 0x6AD JUMPI PUSH2 0x6AC PUSH2 0x1214 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x736 SWAP1 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x5 DUP2 LT PUSH2 0x753 JUMPI PUSH2 0x752 PUSH2 0x1214 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x768 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x78F SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x7E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DC SWAP1 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x5 DUP2 LT PUSH2 0x7F9 JUMPI PUSH2 0x7F8 PUSH2 0x1214 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x80E SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x882 SWAP1 PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP3 SWAP2 SWAP1 PUSH2 0x14CB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9F1 JUMPI PUSH2 0x9F0 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0xE5F4AFC88CB448BAD8AB76D9EA0A66B123681B66F88C8F8AEDD19526D742FAD5 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH2 0xA4A SWAP3 SWAP2 SWAP1 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA88 PUSH2 0xB0A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEF SWAP2 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xB91 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB12 PUSH2 0xC52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB30 PUSH2 0x2DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB8F JUMPI PUSH2 0xB53 PUSH2 0xC52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB86 SWAP2 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC9B PUSH2 0xC96 PUSH2 0xC91 DUP5 PUSH2 0xC59 JUMP JUMPDEST PUSH2 0xC78 JUMP JUMPDEST PUSH2 0xC59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCAC DUP3 PUSH2 0xC81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCBD DUP3 PUSH2 0xCA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCCD DUP2 PUSH2 0xCB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE6 PUSH0 DUP4 ADD DUP5 PUSH2 0xCC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xD07 DUP3 PUSH2 0xC59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD17 DUP2 PUSH2 0xCFD JUMP JUMPDEST DUP2 EQ PUSH2 0xD21 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD32 DUP2 PUSH2 0xD0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD4D JUMPI PUSH2 0xD4C PUSH2 0xCF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD5A DUP5 DUP3 DUP6 ADD PUSH2 0xD24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD77 DUP2 PUSH2 0xD63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD90 PUSH0 DUP4 ADD DUP5 PUSH2 0xD6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD9F DUP2 PUSH2 0xCFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB8 PUSH0 DUP4 ADD DUP5 PUSH2 0xD96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xDFC JUMPI PUSH2 0xDFB PUSH2 0xDBE JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0xE0C DUP3 PUSH2 0xDEB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE1B DUP3 PUSH2 0xDFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE2B DUP2 PUSH2 0xE11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE44 PUSH0 DUP4 ADD DUP5 PUSH2 0xE22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xE98 DUP3 PUSH2 0xE52 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xEB7 JUMPI PUSH2 0xEB6 PUSH2 0xE62 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEC9 PUSH2 0xCEC JUMP JUMPDEST SWAP1 POP PUSH2 0xED5 DUP3 DUP3 PUSH2 0xE8F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xEF4 JUMPI PUSH2 0xEF3 PUSH2 0xE62 JUMP JUMPDEST JUMPDEST PUSH2 0xEFD DUP3 PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF2A PUSH2 0xF25 DUP5 PUSH2 0xEDA JUMP JUMPDEST PUSH2 0xEC0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xF46 JUMPI PUSH2 0xF45 PUSH2 0xE4E JUMP JUMPDEST JUMPDEST PUSH2 0xF51 DUP5 DUP3 DUP6 PUSH2 0xF0A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF6D JUMPI PUSH2 0xF6C PUSH2 0xE4A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF7D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xFA0 JUMPI PUSH2 0xF9F PUSH2 0xCF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFAD DUP10 DUP3 DUP11 ADD PUSH2 0xD24 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFCE JUMPI PUSH2 0xFCD PUSH2 0xCF9 JUMP JUMPDEST JUMPDEST PUSH2 0xFDA DUP10 DUP3 DUP11 ADD PUSH2 0xF59 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFFB JUMPI PUSH2 0xFFA PUSH2 0xCF9 JUMP JUMPDEST JUMPDEST PUSH2 0x1007 DUP10 DUP3 DUP11 ADD PUSH2 0xF59 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1028 JUMPI PUSH2 0x1027 PUSH2 0xCF9 JUMP JUMPDEST JUMPDEST PUSH2 0x1034 DUP10 DUP3 DUP11 ADD PUSH2 0xF59 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1055 JUMPI PUSH2 0x1054 PUSH2 0xCF9 JUMP JUMPDEST JUMPDEST PUSH2 0x1061 DUP10 DUP3 DUP11 ADD PUSH2 0xF59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1082 JUMPI PUSH2 0x1081 PUSH2 0xCF9 JUMP JUMPDEST JUMPDEST PUSH2 0x108E DUP10 DUP3 DUP11 ADD PUSH2 0xF59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10AD DUP2 PUSH2 0x109B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10C6 PUSH0 DUP4 ADD DUP5 PUSH2 0x10A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5175697A20616C72656164792073746172746564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1110 PUSH1 0x14 DUP4 PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP PUSH2 0x111B DUP3 PUSH2 0x10DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x113D DUP2 PUSH2 0x1104 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5175697A206E6F74207374617274656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1178 PUSH1 0x10 DUP4 PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1183 DUP3 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11A5 DUP2 PUSH2 0x116C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C617965722068617320616C726561647920616E7377657265640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11E0 PUSH1 0x1B DUP4 PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP PUSH2 0x11EB DUP3 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x120D DUP2 PUSH2 0x11D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1272 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1257 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1287 DUP3 PUSH2 0x1241 JUMP JUMPDEST PUSH2 0x1291 DUP2 DUP6 PUSH2 0x124B JUMP JUMPDEST SWAP4 POP PUSH2 0x12A1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1255 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12B8 DUP3 DUP5 PUSH2 0x127D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E636F727265637420616E7377657220310000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12F7 PUSH1 0x12 DUP4 PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1302 DUP3 PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1324 DUP2 PUSH2 0x12EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420616E7377657220320000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x135F PUSH1 0x12 DUP4 PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP PUSH2 0x136A DUP3 PUSH2 0x132B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x138C DUP2 PUSH2 0x1353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420616E7377657220330000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13C7 PUSH1 0x12 DUP4 PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP PUSH2 0x13D2 DUP3 PUSH2 0x1393 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13F4 DUP2 PUSH2 0x13BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420616E7377657220340000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x142F PUSH1 0x12 DUP4 PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP PUSH2 0x143A DUP3 PUSH2 0x13FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x145C DUP2 PUSH2 0x1423 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420616E7377657220350000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1497 PUSH1 0x12 DUP4 PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP PUSH2 0x14A2 DUP3 PUSH2 0x1463 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14C4 DUP2 PUSH2 0x148B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14DE PUSH0 DUP4 ADD DUP6 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0x14EB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT SHR MSIZE JUMP PUSH29 0x45C2C00BC9D7CDF4A654251FF50CFCF8C862BAC1611FE5745E2FC26473 PUSH16 0x6C634300081700330000000000000000 ",
							"sourceMap": "140:2315:10:-:0;;;355:9;325:39;;773:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;840:12;1297:1:2;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;887:15:10::1;865:8;;:38;;;;;;;;;;;;;;;;;;926:20;914:9:::0;::::1;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;773:181:::0;;140:2315;;2912:187:2;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;1710:180::-;1758:77;1755:1;1748:88;1855:4;1852:1;1845:15;1879:4;1876:1;1869:15;140:2315:10;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_463": {
									"entryPoint": 2826,
									"id": 463,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1294": {
									"entryPoint": 3154,
									"id": 1294,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_525": {
									"entryPoint": 2961,
									"id": 525,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@acsToken_1356": {
									"entryPoint": 434,
									"id": 1356,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@endQuiz_1598": {
									"entryPoint": 788,
									"id": 1598,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@hasAnswered_1365": {
									"entryPoint": 683,
									"id": 1365,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_446": {
									"entryPoint": 731,
									"id": 446,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@quizState_1353": {
									"entryPoint": 770,
									"id": 1353,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_477": {
									"entryPoint": 712,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardAmount_1361": {
									"entryPoint": 2820,
									"id": 1361,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startQuiz_1435": {
									"entryPoint": 471,
									"id": 1435,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_505": {
									"entryPoint": 2688,
									"id": 505,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@winner_1358": {
									"entryPoint": 2651,
									"id": 1358,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 3864,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 3929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 3974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_AshokuCoin_$1651_to_t_address_fromStack": {
									"entryPoint": 3268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_QuizState_$1350_to_t_uint8_fromStack": {
									"entryPoint": 3618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3a576880600c047ca9851e6f261b487ffa5f3a81013948b0c7c1a1460e555eb5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5340bde7db8ae904c90cdf5d9f62cdff34386ee2216c16409523907d46f72aa0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6113f27c66be9fe3c34f86efb147343546eef327965cd9666d90ebff6f883d80_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68e9596cd0a7b9f571bf50ecf7466a10151c68711345cab90d69efe6597bbe63_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6e8112adc87c1e5a5bdffba84ab292ce541ed4ba337eacc65ef17b25239e16d0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74d31cd5a0f981d114c8b7b13b997b7f4104d83ecf021469195c2e6fe273e612_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bbdbe33ec55f5fd3ff65c62ebfc5c8c611b57e63d612b7f8a86521ceeeabac23_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_be0700e5bdf2f4a3f99c0f46642cfa260d65dd8db325c0f55f4146b120a077d0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5323,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AshokuCoin_$1651__to_t_address__fromStack_reversed": {
									"entryPoint": 3283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_QuizState_$1350__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3a576880600c047ca9851e6f261b487ffa5f3a81013948b0c7c1a1460e555eb5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5340bde7db8ae904c90cdf5d9f62cdff34386ee2216c16409523907d46f72aa0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6113f27c66be9fe3c34f86efb147343546eef327965cd9666d90ebff6f883d80__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68e9596cd0a7b9f571bf50ecf7466a10151c68711345cab90d69efe6597bbe63__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6e8112adc87c1e5a5bdffba84ab292ce541ed4ba337eacc65ef17b25239e16d0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74d31cd5a0f981d114c8b7b13b997b7f4104d83ecf021469195c2e6fe273e612__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bbdbe33ec55f5fd3ff65c62ebfc5c8c611b57e63d612b7f8a86521ceeeabac23__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_be0700e5bdf2f4a3f99c0f46642cfa260d65dd8db325c0f55f4146b120a077d0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 3308,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 3802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_QuizState_$1350": {
									"entryPoint": 3583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_AshokuCoin_$1651_to_t_address": {
									"entryPoint": 3251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_QuizState_$1350_to_t_uint8": {
									"entryPoint": 3601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 3850,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4693,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 3727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 3192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 3518,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4628,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3682,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3658,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 3662,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3321,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3317,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_3a576880600c047ca9851e6f261b487ffa5f3a81013948b0c7c1a1460e555eb5": {
									"entryPoint": 5011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5340bde7db8ae904c90cdf5d9f62cdff34386ee2216c16409523907d46f72aa0": {
									"entryPoint": 4803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6113f27c66be9fe3c34f86efb147343546eef327965cd9666d90ebff6f883d80": {
									"entryPoint": 4420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68e9596cd0a7b9f571bf50ecf7466a10151c68711345cab90d69efe6597bbe63": {
									"entryPoint": 5115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6e8112adc87c1e5a5bdffba84ab292ce541ed4ba337eacc65ef17b25239e16d0": {
									"entryPoint": 5219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_74d31cd5a0f981d114c8b7b13b997b7f4104d83ecf021469195c2e6fe273e612": {
									"entryPoint": 4316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bbdbe33ec55f5fd3ff65c62ebfc5c8c611b57e63d612b7f8a86521ceeeabac23": {
									"entryPoint": 4524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_be0700e5bdf2f4a3f99c0f46642cfa260d65dd8db325c0f55f4146b120a077d0": {
									"entryPoint": 4907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_QuizState_$1350": {
									"entryPoint": 3563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18185:12",
										"nodeType": "YulBlock",
										"src": "0:18185:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:12",
													"nodeType": "YulBlock",
													"src": "52:81:12",
													"statements": [
														{
															"nativeSrc": "62:65:12",
															"nodeType": "YulAssignment",
															"src": "62:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:12",
																		"nodeType": "YulLiteral",
																		"src": "84:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:12"
																},
																"nativeSrc": "73:54:12",
																"nodeType": "YulFunctionCall",
																"src": "73:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:12",
														"nodeType": "YulTypedName",
														"src": "34:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:12",
														"nodeType": "YulTypedName",
														"src": "44:7:12",
														"type": ""
													}
												],
												"src": "7:126:12"
											},
											{
												"body": {
													"nativeSrc": "171:28:12",
													"nodeType": "YulBlock",
													"src": "171:28:12",
													"statements": [
														{
															"nativeSrc": "181:12:12",
															"nodeType": "YulAssignment",
															"src": "181:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:12",
																"nodeType": "YulIdentifier",
																"src": "188:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:12",
														"nodeType": "YulTypedName",
														"src": "157:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:12",
														"nodeType": "YulTypedName",
														"src": "167:3:12",
														"type": ""
													}
												],
												"src": "139:60:12"
											},
											{
												"body": {
													"nativeSrc": "265:82:12",
													"nodeType": "YulBlock",
													"src": "265:82:12",
													"statements": [
														{
															"nativeSrc": "275:66:12",
															"nodeType": "YulAssignment",
															"src": "275:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:12"
																				},
																				"nativeSrc": "315:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:12"
																		},
																		"nativeSrc": "306:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:12"
																},
																"nativeSrc": "288:53:12",
																"nodeType": "YulFunctionCall",
																"src": "288:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:12",
														"nodeType": "YulTypedName",
														"src": "245:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:12",
														"nodeType": "YulTypedName",
														"src": "255:9:12",
														"type": ""
													}
												],
												"src": "205:142:12"
											},
											{
												"body": {
													"nativeSrc": "413:66:12",
													"nodeType": "YulBlock",
													"src": "413:66:12",
													"statements": [
														{
															"nativeSrc": "423:50:12",
															"nodeType": "YulAssignment",
															"src": "423:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:12"
																},
																"nativeSrc": "436:37:12",
																"nodeType": "YulFunctionCall",
																"src": "436:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:12",
														"nodeType": "YulTypedName",
														"src": "393:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:12",
														"nodeType": "YulTypedName",
														"src": "403:9:12",
														"type": ""
													}
												],
												"src": "353:126:12"
											},
											{
												"body": {
													"nativeSrc": "564:66:12",
													"nodeType": "YulBlock",
													"src": "564:66:12",
													"statements": [
														{
															"nativeSrc": "574:50:12",
															"nodeType": "YulAssignment",
															"src": "574:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "618:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "618:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "587:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "587:30:12"
																},
																"nativeSrc": "587:37:12",
																"nodeType": "YulFunctionCall",
																"src": "587:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "574:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "574:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_AshokuCoin_$1651_to_t_address",
												"nativeSrc": "485:145:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "544:5:12",
														"nodeType": "YulTypedName",
														"src": "544:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "554:9:12",
														"nodeType": "YulTypedName",
														"src": "554:9:12",
														"type": ""
													}
												],
												"src": "485:145:12"
											},
											{
												"body": {
													"nativeSrc": "720:85:12",
													"nodeType": "YulBlock",
													"src": "720:85:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "737:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "737:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "792:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "792:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_AshokuCoin_$1651_to_t_address",
																			"nativeSrc": "742:49:12",
																			"nodeType": "YulIdentifier",
																			"src": "742:49:12"
																		},
																		"nativeSrc": "742:56:12",
																		"nodeType": "YulFunctionCall",
																		"src": "742:56:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "730:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "730:6:12"
																},
																"nativeSrc": "730:69:12",
																"nodeType": "YulFunctionCall",
																"src": "730:69:12"
															},
															"nativeSrc": "730:69:12",
															"nodeType": "YulExpressionStatement",
															"src": "730:69:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_AshokuCoin_$1651_to_t_address_fromStack",
												"nativeSrc": "636:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "708:5:12",
														"nodeType": "YulTypedName",
														"src": "708:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "715:3:12",
														"nodeType": "YulTypedName",
														"src": "715:3:12",
														"type": ""
													}
												],
												"src": "636:169:12"
											},
											{
												"body": {
													"nativeSrc": "928:143:12",
													"nodeType": "YulBlock",
													"src": "928:143:12",
													"statements": [
														{
															"nativeSrc": "938:26:12",
															"nodeType": "YulAssignment",
															"src": "938:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "950:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "950:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "961:2:12",
																		"nodeType": "YulLiteral",
																		"src": "961:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "946:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "946:3:12"
																},
																"nativeSrc": "946:18:12",
																"nodeType": "YulFunctionCall",
																"src": "946:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "938:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "938:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1037:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1037:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1050:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1050:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1061:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1061:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1046:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1046:3:12"
																		},
																		"nativeSrc": "1046:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1046:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_AshokuCoin_$1651_to_t_address_fromStack",
																	"nativeSrc": "974:62:12",
																	"nodeType": "YulIdentifier",
																	"src": "974:62:12"
																},
																"nativeSrc": "974:90:12",
																"nodeType": "YulFunctionCall",
																"src": "974:90:12"
															},
															"nativeSrc": "974:90:12",
															"nodeType": "YulExpressionStatement",
															"src": "974:90:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AshokuCoin_$1651__to_t_address__fromStack_reversed",
												"nativeSrc": "811:260:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "900:9:12",
														"nodeType": "YulTypedName",
														"src": "900:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "912:6:12",
														"nodeType": "YulTypedName",
														"src": "912:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "923:4:12",
														"nodeType": "YulTypedName",
														"src": "923:4:12",
														"type": ""
													}
												],
												"src": "811:260:12"
											},
											{
												"body": {
													"nativeSrc": "1117:35:12",
													"nodeType": "YulBlock",
													"src": "1117:35:12",
													"statements": [
														{
															"nativeSrc": "1127:19:12",
															"nodeType": "YulAssignment",
															"src": "1127:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1143:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1143:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1137:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1137:5:12"
																},
																"nativeSrc": "1137:9:12",
																"nodeType": "YulFunctionCall",
																"src": "1137:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1127:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1077:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1110:6:12",
														"nodeType": "YulTypedName",
														"src": "1110:6:12",
														"type": ""
													}
												],
												"src": "1077:75:12"
											},
											{
												"body": {
													"nativeSrc": "1247:28:12",
													"nodeType": "YulBlock",
													"src": "1247:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1264:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1264:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1267:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1267:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1257:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1257:6:12"
																},
																"nativeSrc": "1257:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1257:12:12"
															},
															"nativeSrc": "1257:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1257:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1158:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1158:117:12"
											},
											{
												"body": {
													"nativeSrc": "1370:28:12",
													"nodeType": "YulBlock",
													"src": "1370:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1387:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1387:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1390:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1390:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1380:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:12"
																},
																"nativeSrc": "1380:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1380:12:12"
															},
															"nativeSrc": "1380:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1380:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1281:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1281:117:12"
											},
											{
												"body": {
													"nativeSrc": "1449:51:12",
													"nodeType": "YulBlock",
													"src": "1449:51:12",
													"statements": [
														{
															"nativeSrc": "1459:35:12",
															"nodeType": "YulAssignment",
															"src": "1459:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1488:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1488:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1470:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1470:17:12"
																},
																"nativeSrc": "1470:24:12",
																"nodeType": "YulFunctionCall",
																"src": "1470:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1459:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1459:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1404:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1431:5:12",
														"nodeType": "YulTypedName",
														"src": "1431:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1441:7:12",
														"nodeType": "YulTypedName",
														"src": "1441:7:12",
														"type": ""
													}
												],
												"src": "1404:96:12"
											},
											{
												"body": {
													"nativeSrc": "1549:79:12",
													"nodeType": "YulBlock",
													"src": "1549:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1606:16:12",
																"nodeType": "YulBlock",
																"src": "1606:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1615:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1615:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1618:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1618:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1608:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1608:6:12"
																			},
																			"nativeSrc": "1608:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1608:12:12"
																		},
																		"nativeSrc": "1608:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1608:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1572:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1572:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1597:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1597:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1579:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1579:17:12"
																				},
																				"nativeSrc": "1579:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1579:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1569:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1569:2:12"
																		},
																		"nativeSrc": "1569:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1569:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1562:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1562:6:12"
																},
																"nativeSrc": "1562:43:12",
																"nodeType": "YulFunctionCall",
																"src": "1562:43:12"
															},
															"nativeSrc": "1559:63:12",
															"nodeType": "YulIf",
															"src": "1559:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1506:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1542:5:12",
														"nodeType": "YulTypedName",
														"src": "1542:5:12",
														"type": ""
													}
												],
												"src": "1506:122:12"
											},
											{
												"body": {
													"nativeSrc": "1686:87:12",
													"nodeType": "YulBlock",
													"src": "1686:87:12",
													"statements": [
														{
															"nativeSrc": "1696:29:12",
															"nodeType": "YulAssignment",
															"src": "1696:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1718:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1718:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1705:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1705:12:12"
																},
																"nativeSrc": "1705:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1705:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1696:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1696:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1761:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1761:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1734:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1734:26:12"
																},
																"nativeSrc": "1734:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1734:33:12"
															},
															"nativeSrc": "1734:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1734:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1634:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1664:6:12",
														"nodeType": "YulTypedName",
														"src": "1664:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1672:3:12",
														"nodeType": "YulTypedName",
														"src": "1672:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1680:5:12",
														"nodeType": "YulTypedName",
														"src": "1680:5:12",
														"type": ""
													}
												],
												"src": "1634:139:12"
											},
											{
												"body": {
													"nativeSrc": "1845:263:12",
													"nodeType": "YulBlock",
													"src": "1845:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1891:83:12",
																"nodeType": "YulBlock",
																"src": "1891:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1893:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1893:77:12"
																			},
																			"nativeSrc": "1893:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1893:79:12"
																		},
																		"nativeSrc": "1893:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1893:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1866:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1866:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1875:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1875:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1862:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1862:3:12"
																		},
																		"nativeSrc": "1862:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1862:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1887:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1887:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1858:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1858:3:12"
																},
																"nativeSrc": "1858:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1858:32:12"
															},
															"nativeSrc": "1855:119:12",
															"nodeType": "YulIf",
															"src": "1855:119:12"
														},
														{
															"nativeSrc": "1984:117:12",
															"nodeType": "YulBlock",
															"src": "1984:117:12",
															"statements": [
																{
																	"nativeSrc": "1999:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1999:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2013:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2013:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2003:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2003:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2028:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2028:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2063:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2063:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2074:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2074:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2059:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2059:3:12"
																				},
																				"nativeSrc": "2059:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2059:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2083:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2083:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2038:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2038:20:12"
																		},
																		"nativeSrc": "2038:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2038:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2028:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2028:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1779:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1815:9:12",
														"nodeType": "YulTypedName",
														"src": "1815:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1826:7:12",
														"nodeType": "YulTypedName",
														"src": "1826:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1838:6:12",
														"nodeType": "YulTypedName",
														"src": "1838:6:12",
														"type": ""
													}
												],
												"src": "1779:329:12"
											},
											{
												"body": {
													"nativeSrc": "2156:48:12",
													"nodeType": "YulBlock",
													"src": "2156:48:12",
													"statements": [
														{
															"nativeSrc": "2166:32:12",
															"nodeType": "YulAssignment",
															"src": "2166:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2191:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2191:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2184:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2184:6:12"
																		},
																		"nativeSrc": "2184:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2184:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2177:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2177:6:12"
																},
																"nativeSrc": "2177:21:12",
																"nodeType": "YulFunctionCall",
																"src": "2177:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2166:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2166:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2114:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2138:5:12",
														"nodeType": "YulTypedName",
														"src": "2138:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2148:7:12",
														"nodeType": "YulTypedName",
														"src": "2148:7:12",
														"type": ""
													}
												],
												"src": "2114:90:12"
											},
											{
												"body": {
													"nativeSrc": "2269:50:12",
													"nodeType": "YulBlock",
													"src": "2269:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2286:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2286:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2306:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2306:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2291:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "2291:14:12"
																		},
																		"nativeSrc": "2291:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2291:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2279:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:12"
																},
																"nativeSrc": "2279:34:12",
																"nodeType": "YulFunctionCall",
																"src": "2279:34:12"
															},
															"nativeSrc": "2279:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "2279:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2210:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2257:5:12",
														"nodeType": "YulTypedName",
														"src": "2257:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2264:3:12",
														"nodeType": "YulTypedName",
														"src": "2264:3:12",
														"type": ""
													}
												],
												"src": "2210:109:12"
											},
											{
												"body": {
													"nativeSrc": "2417:118:12",
													"nodeType": "YulBlock",
													"src": "2417:118:12",
													"statements": [
														{
															"nativeSrc": "2427:26:12",
															"nodeType": "YulAssignment",
															"src": "2427:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2439:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2439:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2450:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2450:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2435:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2435:3:12"
																},
																"nativeSrc": "2435:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2435:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2427:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2427:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2501:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2501:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2514:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2514:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2525:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2525:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2510:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2510:3:12"
																		},
																		"nativeSrc": "2510:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2510:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2463:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "2463:37:12"
																},
																"nativeSrc": "2463:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2463:65:12"
															},
															"nativeSrc": "2463:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2463:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2325:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2389:9:12",
														"nodeType": "YulTypedName",
														"src": "2389:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2401:6:12",
														"nodeType": "YulTypedName",
														"src": "2401:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2412:4:12",
														"nodeType": "YulTypedName",
														"src": "2412:4:12",
														"type": ""
													}
												],
												"src": "2325:210:12"
											},
											{
												"body": {
													"nativeSrc": "2606:53:12",
													"nodeType": "YulBlock",
													"src": "2606:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2623:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2623:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2646:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2646:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2628:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "2628:17:12"
																		},
																		"nativeSrc": "2628:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2628:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2616:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2616:6:12"
																},
																"nativeSrc": "2616:37:12",
																"nodeType": "YulFunctionCall",
																"src": "2616:37:12"
															},
															"nativeSrc": "2616:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "2616:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2541:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2594:5:12",
														"nodeType": "YulTypedName",
														"src": "2594:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2601:3:12",
														"nodeType": "YulTypedName",
														"src": "2601:3:12",
														"type": ""
													}
												],
												"src": "2541:118:12"
											},
											{
												"body": {
													"nativeSrc": "2763:124:12",
													"nodeType": "YulBlock",
													"src": "2763:124:12",
													"statements": [
														{
															"nativeSrc": "2773:26:12",
															"nodeType": "YulAssignment",
															"src": "2773:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2785:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2785:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2796:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2796:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2781:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2781:3:12"
																},
																"nativeSrc": "2781:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2781:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2773:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2773:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2853:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2853:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2866:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2866:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2877:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2877:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2862:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2862:3:12"
																		},
																		"nativeSrc": "2862:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2862:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2809:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2809:43:12"
																},
																"nativeSrc": "2809:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2809:71:12"
															},
															"nativeSrc": "2809:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "2809:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2665:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2735:9:12",
														"nodeType": "YulTypedName",
														"src": "2735:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2747:6:12",
														"nodeType": "YulTypedName",
														"src": "2747:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2758:4:12",
														"nodeType": "YulTypedName",
														"src": "2758:4:12",
														"type": ""
													}
												],
												"src": "2665:222:12"
											},
											{
												"body": {
													"nativeSrc": "2921:152:12",
													"nodeType": "YulBlock",
													"src": "2921:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2938:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2938:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2941:77:12",
																		"nodeType": "YulLiteral",
																		"src": "2941:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2931:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2931:6:12"
																},
																"nativeSrc": "2931:88:12",
																"nodeType": "YulFunctionCall",
																"src": "2931:88:12"
															},
															"nativeSrc": "2931:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "2931:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3035:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3035:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3038:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3038:4:12",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3028:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3028:6:12"
																},
																"nativeSrc": "3028:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3028:15:12"
															},
															"nativeSrc": "3028:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "3028:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3059:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3059:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3062:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3062:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3052:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3052:6:12"
																},
																"nativeSrc": "3052:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3052:15:12"
															},
															"nativeSrc": "3052:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "3052:15:12"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "2893:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "2893:180:12"
											},
											{
												"body": {
													"nativeSrc": "3136:62:12",
													"nodeType": "YulBlock",
													"src": "3136:62:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3170:22:12",
																"nodeType": "YulBlock",
																"src": "3170:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "3172:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "3172:16:12"
																			},
																			"nativeSrc": "3172:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3172:18:12"
																		},
																		"nativeSrc": "3172:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3172:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3159:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3159:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3166:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3166:1:12",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3156:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3156:2:12"
																		},
																		"nativeSrc": "3156:12:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3156:12:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3149:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3149:6:12"
																},
																"nativeSrc": "3149:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3149:20:12"
															},
															"nativeSrc": "3146:46:12",
															"nodeType": "YulIf",
															"src": "3146:46:12"
														}
													]
												},
												"name": "validator_assert_t_enum$_QuizState_$1350",
												"nativeSrc": "3079:119:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3129:5:12",
														"nodeType": "YulTypedName",
														"src": "3129:5:12",
														"type": ""
													}
												],
												"src": "3079:119:12"
											},
											{
												"body": {
													"nativeSrc": "3263:80:12",
													"nodeType": "YulBlock",
													"src": "3263:80:12",
													"statements": [
														{
															"nativeSrc": "3273:16:12",
															"nodeType": "YulAssignment",
															"src": "3273:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "3284:5:12",
																"nodeType": "YulIdentifier",
																"src": "3284:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3273:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3273:7:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3331:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3331:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_QuizState_$1350",
																	"nativeSrc": "3290:40:12",
																	"nodeType": "YulIdentifier",
																	"src": "3290:40:12"
																},
																"nativeSrc": "3290:47:12",
																"nodeType": "YulFunctionCall",
																"src": "3290:47:12"
															},
															"nativeSrc": "3290:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "3290:47:12"
														}
													]
												},
												"name": "cleanup_t_enum$_QuizState_$1350",
												"nativeSrc": "3204:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3245:5:12",
														"nodeType": "YulTypedName",
														"src": "3245:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3255:7:12",
														"nodeType": "YulTypedName",
														"src": "3255:7:12",
														"type": ""
													}
												],
												"src": "3204:139:12"
											},
											{
												"body": {
													"nativeSrc": "3421:67:12",
													"nodeType": "YulBlock",
													"src": "3421:67:12",
													"statements": [
														{
															"nativeSrc": "3431:51:12",
															"nodeType": "YulAssignment",
															"src": "3431:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3476:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3476:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_QuizState_$1350",
																	"nativeSrc": "3444:31:12",
																	"nodeType": "YulIdentifier",
																	"src": "3444:31:12"
																},
																"nativeSrc": "3444:38:12",
																"nodeType": "YulFunctionCall",
																"src": "3444:38:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3431:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "3431:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_QuizState_$1350_to_t_uint8",
												"nativeSrc": "3349:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3401:5:12",
														"nodeType": "YulTypedName",
														"src": "3401:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3411:9:12",
														"nodeType": "YulTypedName",
														"src": "3411:9:12",
														"type": ""
													}
												],
												"src": "3349:139:12"
											},
											{
												"body": {
													"nativeSrc": "3571:78:12",
													"nodeType": "YulBlock",
													"src": "3571:78:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3588:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3588:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3636:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3636:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_QuizState_$1350_to_t_uint8",
																			"nativeSrc": "3593:42:12",
																			"nodeType": "YulIdentifier",
																			"src": "3593:42:12"
																		},
																		"nativeSrc": "3593:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3593:49:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3581:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3581:6:12"
																},
																"nativeSrc": "3581:62:12",
																"nodeType": "YulFunctionCall",
																"src": "3581:62:12"
															},
															"nativeSrc": "3581:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "3581:62:12"
														}
													]
												},
												"name": "abi_encode_t_enum$_QuizState_$1350_to_t_uint8_fromStack",
												"nativeSrc": "3494:155:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3559:5:12",
														"nodeType": "YulTypedName",
														"src": "3559:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3566:3:12",
														"nodeType": "YulTypedName",
														"src": "3566:3:12",
														"type": ""
													}
												],
												"src": "3494:155:12"
											},
											{
												"body": {
													"nativeSrc": "3765:136:12",
													"nodeType": "YulBlock",
													"src": "3765:136:12",
													"statements": [
														{
															"nativeSrc": "3775:26:12",
															"nodeType": "YulAssignment",
															"src": "3775:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3787:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3787:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3798:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3798:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3783:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3783:3:12"
																},
																"nativeSrc": "3783:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3783:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3775:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3775:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3867:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3867:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3880:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3880:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3891:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3891:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3876:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3876:3:12"
																		},
																		"nativeSrc": "3876:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3876:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_QuizState_$1350_to_t_uint8_fromStack",
																	"nativeSrc": "3811:55:12",
																	"nodeType": "YulIdentifier",
																	"src": "3811:55:12"
																},
																"nativeSrc": "3811:83:12",
																"nodeType": "YulFunctionCall",
																"src": "3811:83:12"
															},
															"nativeSrc": "3811:83:12",
															"nodeType": "YulExpressionStatement",
															"src": "3811:83:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_QuizState_$1350__to_t_uint8__fromStack_reversed",
												"nativeSrc": "3655:246:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3737:9:12",
														"nodeType": "YulTypedName",
														"src": "3737:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3749:6:12",
														"nodeType": "YulTypedName",
														"src": "3749:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3760:4:12",
														"nodeType": "YulTypedName",
														"src": "3760:4:12",
														"type": ""
													}
												],
												"src": "3655:246:12"
											},
											{
												"body": {
													"nativeSrc": "3996:28:12",
													"nodeType": "YulBlock",
													"src": "3996:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4013:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4013:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4016:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4016:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4006:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4006:6:12"
																},
																"nativeSrc": "4006:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4006:12:12"
															},
															"nativeSrc": "4006:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "4006:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "3907:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "3907:117:12"
											},
											{
												"body": {
													"nativeSrc": "4119:28:12",
													"nodeType": "YulBlock",
													"src": "4119:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4136:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4136:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4139:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4139:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4129:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4129:6:12"
																},
																"nativeSrc": "4129:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4129:12:12"
															},
															"nativeSrc": "4129:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "4129:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "4030:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4030:117:12"
											},
											{
												"body": {
													"nativeSrc": "4201:54:12",
													"nodeType": "YulBlock",
													"src": "4201:54:12",
													"statements": [
														{
															"nativeSrc": "4211:38:12",
															"nodeType": "YulAssignment",
															"src": "4211:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4229:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4229:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4236:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4236:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4225:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4225:3:12"
																		},
																		"nativeSrc": "4225:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4225:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4245:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4245:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4241:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4241:3:12"
																		},
																		"nativeSrc": "4241:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4241:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4221:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4221:3:12"
																},
																"nativeSrc": "4221:28:12",
																"nodeType": "YulFunctionCall",
																"src": "4221:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4211:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4211:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "4153:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4184:5:12",
														"nodeType": "YulTypedName",
														"src": "4184:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4194:6:12",
														"nodeType": "YulTypedName",
														"src": "4194:6:12",
														"type": ""
													}
												],
												"src": "4153:102:12"
											},
											{
												"body": {
													"nativeSrc": "4289:152:12",
													"nodeType": "YulBlock",
													"src": "4289:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4306:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4306:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4309:77:12",
																		"nodeType": "YulLiteral",
																		"src": "4309:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4299:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4299:6:12"
																},
																"nativeSrc": "4299:88:12",
																"nodeType": "YulFunctionCall",
																"src": "4299:88:12"
															},
															"nativeSrc": "4299:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "4299:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4403:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4403:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4406:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4406:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4396:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:12"
																},
																"nativeSrc": "4396:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4396:15:12"
															},
															"nativeSrc": "4396:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4396:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4427:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4427:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4430:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4430:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4420:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4420:6:12"
																},
																"nativeSrc": "4420:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4420:15:12"
															},
															"nativeSrc": "4420:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4420:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4261:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4261:180:12"
											},
											{
												"body": {
													"nativeSrc": "4490:238:12",
													"nodeType": "YulBlock",
													"src": "4490:238:12",
													"statements": [
														{
															"nativeSrc": "4500:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4500:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4522:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4522:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "4552:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4552:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4530:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "4530:21:12"
																		},
																		"nativeSrc": "4530:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4530:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4518:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4518:3:12"
																},
																"nativeSrc": "4518:40:12",
																"nodeType": "YulFunctionCall",
																"src": "4518:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4504:10:12",
																	"nodeType": "YulTypedName",
																	"src": "4504:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4669:22:12",
																"nodeType": "YulBlock",
																"src": "4669:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4671:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4671:16:12"
																			},
																			"nativeSrc": "4671:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4671:18:12"
																		},
																		"nativeSrc": "4671:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4671:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4612:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "4612:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4624:18:12",
																				"nodeType": "YulLiteral",
																				"src": "4624:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4609:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4609:2:12"
																		},
																		"nativeSrc": "4609:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4609:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4648:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "4648:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4660:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4660:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4645:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4645:2:12"
																		},
																		"nativeSrc": "4645:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4645:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4606:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4606:2:12"
																},
																"nativeSrc": "4606:62:12",
																"nodeType": "YulFunctionCall",
																"src": "4606:62:12"
															},
															"nativeSrc": "4603:88:12",
															"nodeType": "YulIf",
															"src": "4603:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4707:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4707:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4711:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "4711:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4700:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4700:6:12"
																},
																"nativeSrc": "4700:22:12",
																"nodeType": "YulFunctionCall",
																"src": "4700:22:12"
															},
															"nativeSrc": "4700:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "4700:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "4447:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4476:6:12",
														"nodeType": "YulTypedName",
														"src": "4476:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "4484:4:12",
														"nodeType": "YulTypedName",
														"src": "4484:4:12",
														"type": ""
													}
												],
												"src": "4447:281:12"
											},
											{
												"body": {
													"nativeSrc": "4775:88:12",
													"nodeType": "YulBlock",
													"src": "4775:88:12",
													"statements": [
														{
															"nativeSrc": "4785:30:12",
															"nodeType": "YulAssignment",
															"src": "4785:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "4795:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4795:18:12"
																},
																"nativeSrc": "4795:20:12",
																"nodeType": "YulFunctionCall",
																"src": "4795:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4785:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4785:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4844:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4844:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "4852:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4852:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "4824:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "4824:19:12"
																},
																"nativeSrc": "4824:33:12",
																"nodeType": "YulFunctionCall",
																"src": "4824:33:12"
															},
															"nativeSrc": "4824:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "4824:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "4734:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "4759:4:12",
														"nodeType": "YulTypedName",
														"src": "4759:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "4768:6:12",
														"nodeType": "YulTypedName",
														"src": "4768:6:12",
														"type": ""
													}
												],
												"src": "4734:129:12"
											},
											{
												"body": {
													"nativeSrc": "4936:241:12",
													"nodeType": "YulBlock",
													"src": "4936:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5041:22:12",
																"nodeType": "YulBlock",
																"src": "5041:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5043:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5043:16:12"
																			},
																			"nativeSrc": "5043:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5043:18:12"
																		},
																		"nativeSrc": "5043:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5043:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5013:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5013:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5021:18:12",
																		"nodeType": "YulLiteral",
																		"src": "5021:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5010:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5010:2:12"
																},
																"nativeSrc": "5010:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5010:30:12"
															},
															"nativeSrc": "5007:56:12",
															"nodeType": "YulIf",
															"src": "5007:56:12"
														},
														{
															"nativeSrc": "5073:37:12",
															"nodeType": "YulAssignment",
															"src": "5073:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5103:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5103:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "5081:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "5081:21:12"
																},
																"nativeSrc": "5081:29:12",
																"nodeType": "YulFunctionCall",
																"src": "5081:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5073:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5073:4:12"
																}
															]
														},
														{
															"nativeSrc": "5147:23:12",
															"nodeType": "YulAssignment",
															"src": "5147:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5159:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5159:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5165:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5165:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5155:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5155:3:12"
																},
																"nativeSrc": "5155:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5155:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5147:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5147:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "4869:308:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "4920:6:12",
														"nodeType": "YulTypedName",
														"src": "4920:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "4931:4:12",
														"nodeType": "YulTypedName",
														"src": "4931:4:12",
														"type": ""
													}
												],
												"src": "4869:308:12"
											},
											{
												"body": {
													"nativeSrc": "5247:82:12",
													"nodeType": "YulBlock",
													"src": "5247:82:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5270:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5270:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5275:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5275:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5280:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5280:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5257:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5257:12:12"
																},
																"nativeSrc": "5257:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5257:30:12"
															},
															"nativeSrc": "5257:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5257:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5307:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5307:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5312:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5312:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5303:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5303:3:12"
																		},
																		"nativeSrc": "5303:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5303:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5321:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5321:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5296:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5296:6:12"
																},
																"nativeSrc": "5296:27:12",
																"nodeType": "YulFunctionCall",
																"src": "5296:27:12"
															},
															"nativeSrc": "5296:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "5296:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "5183:146:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5229:3:12",
														"nodeType": "YulTypedName",
														"src": "5229:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5234:3:12",
														"nodeType": "YulTypedName",
														"src": "5234:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5239:6:12",
														"nodeType": "YulTypedName",
														"src": "5239:6:12",
														"type": ""
													}
												],
												"src": "5183:146:12"
											},
											{
												"body": {
													"nativeSrc": "5419:341:12",
													"nodeType": "YulBlock",
													"src": "5419:341:12",
													"statements": [
														{
															"nativeSrc": "5429:75:12",
															"nodeType": "YulAssignment",
															"src": "5429:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5496:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5496:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "5454:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "5454:41:12"
																		},
																		"nativeSrc": "5454:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5454:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5438:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "5438:15:12"
																},
																"nativeSrc": "5438:66:12",
																"nodeType": "YulFunctionCall",
																"src": "5438:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5429:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5429:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5520:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5520:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5527:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5527:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5513:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5513:6:12"
																},
																"nativeSrc": "5513:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5513:21:12"
															},
															"nativeSrc": "5513:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5513:21:12"
														},
														{
															"nativeSrc": "5543:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5543:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5558:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5558:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5565:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5565:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5554:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5554:3:12"
																},
																"nativeSrc": "5554:16:12",
																"nodeType": "YulFunctionCall",
																"src": "5554:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "5547:3:12",
																	"nodeType": "YulTypedName",
																	"src": "5547:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5608:83:12",
																"nodeType": "YulBlock",
																"src": "5608:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "5610:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5610:77:12"
																			},
																			"nativeSrc": "5610:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5610:79:12"
																		},
																		"nativeSrc": "5610:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5610:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "5589:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5589:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5594:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5594:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5585:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5585:3:12"
																		},
																		"nativeSrc": "5585:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5585:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5603:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5603:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5582:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5582:2:12"
																},
																"nativeSrc": "5582:25:12",
																"nodeType": "YulFunctionCall",
																"src": "5582:25:12"
															},
															"nativeSrc": "5579:112:12",
															"nodeType": "YulIf",
															"src": "5579:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5737:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5737:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "5742:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5742:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5747:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5747:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "5700:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "5700:36:12"
																},
																"nativeSrc": "5700:54:12",
																"nodeType": "YulFunctionCall",
																"src": "5700:54:12"
															},
															"nativeSrc": "5700:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "5700:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "5335:425:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5392:3:12",
														"nodeType": "YulTypedName",
														"src": "5392:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5397:6:12",
														"nodeType": "YulTypedName",
														"src": "5397:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5405:3:12",
														"nodeType": "YulTypedName",
														"src": "5405:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5413:5:12",
														"nodeType": "YulTypedName",
														"src": "5413:5:12",
														"type": ""
													}
												],
												"src": "5335:425:12"
											},
											{
												"body": {
													"nativeSrc": "5842:278:12",
													"nodeType": "YulBlock",
													"src": "5842:278:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5891:83:12",
																"nodeType": "YulBlock",
																"src": "5891:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5893:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5893:77:12"
																			},
																			"nativeSrc": "5893:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5893:79:12"
																		},
																		"nativeSrc": "5893:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5893:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5870:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5870:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5878:4:12",
																						"nodeType": "YulLiteral",
																						"src": "5878:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5866:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5866:3:12"
																				},
																				"nativeSrc": "5866:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5866:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5885:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5885:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5862:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5862:3:12"
																		},
																		"nativeSrc": "5862:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5862:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5855:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5855:6:12"
																},
																"nativeSrc": "5855:35:12",
																"nodeType": "YulFunctionCall",
																"src": "5855:35:12"
															},
															"nativeSrc": "5852:122:12",
															"nodeType": "YulIf",
															"src": "5852:122:12"
														},
														{
															"nativeSrc": "5983:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5983:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6010:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6010:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5997:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5997:12:12"
																},
																"nativeSrc": "5997:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5997:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5987:6:12",
																	"nodeType": "YulTypedName",
																	"src": "5987:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6026:88:12",
															"nodeType": "YulAssignment",
															"src": "6026:88:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6087:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6087:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6095:4:12",
																				"nodeType": "YulLiteral",
																				"src": "6095:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6083:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6083:3:12"
																		},
																		"nativeSrc": "6083:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6083:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6102:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6102:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6110:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6110:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "6035:47:12",
																	"nodeType": "YulIdentifier",
																	"src": "6035:47:12"
																},
																"nativeSrc": "6035:79:12",
																"nodeType": "YulFunctionCall",
																"src": "6035:79:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6026:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6026:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "5780:340:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5820:6:12",
														"nodeType": "YulTypedName",
														"src": "5820:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5828:3:12",
														"nodeType": "YulTypedName",
														"src": "5828:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5836:5:12",
														"nodeType": "YulTypedName",
														"src": "5836:5:12",
														"type": ""
													}
												],
												"src": "5780:340:12"
											},
											{
												"body": {
													"nativeSrc": "6327:1756:12",
													"nodeType": "YulBlock",
													"src": "6327:1756:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6374:83:12",
																"nodeType": "YulBlock",
																"src": "6374:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6376:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6376:77:12"
																			},
																			"nativeSrc": "6376:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6376:79:12"
																		},
																		"nativeSrc": "6376:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6376:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6348:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6348:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6357:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6357:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6344:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6344:3:12"
																		},
																		"nativeSrc": "6344:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6344:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6369:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6369:3:12",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6340:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6340:3:12"
																},
																"nativeSrc": "6340:33:12",
																"nodeType": "YulFunctionCall",
																"src": "6340:33:12"
															},
															"nativeSrc": "6337:120:12",
															"nodeType": "YulIf",
															"src": "6337:120:12"
														},
														{
															"nativeSrc": "6467:117:12",
															"nodeType": "YulBlock",
															"src": "6467:117:12",
															"statements": [
																{
																	"nativeSrc": "6482:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6482:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6496:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6496:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6486:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6486:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6511:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6511:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6546:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6546:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6557:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6557:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6542:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6542:3:12"
																				},
																				"nativeSrc": "6542:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6542:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6566:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6566:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6521:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6521:20:12"
																		},
																		"nativeSrc": "6521:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6521:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6511:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6511:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6594:288:12",
															"nodeType": "YulBlock",
															"src": "6594:288:12",
															"statements": [
																{
																	"nativeSrc": "6609:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6609:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6640:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6640:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6651:2:12",
																						"nodeType": "YulLiteral",
																						"src": "6651:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6636:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6636:3:12"
																				},
																				"nativeSrc": "6636:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6636:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6623:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "6623:12:12"
																		},
																		"nativeSrc": "6623:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6623:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6613:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6613:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6702:83:12",
																		"nodeType": "YulBlock",
																		"src": "6702:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6704:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "6704:77:12"
																					},
																					"nativeSrc": "6704:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6704:79:12"
																				},
																				"nativeSrc": "6704:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "6704:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6674:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6674:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6682:18:12",
																				"nodeType": "YulLiteral",
																				"src": "6682:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6671:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "6671:2:12"
																		},
																		"nativeSrc": "6671:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6671:30:12"
																	},
																	"nativeSrc": "6668:117:12",
																	"nodeType": "YulIf",
																	"src": "6668:117:12"
																},
																{
																	"nativeSrc": "6799:73:12",
																	"nodeType": "YulAssignment",
																	"src": "6799:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6844:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6844:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6855:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6855:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6840:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6840:3:12"
																				},
																				"nativeSrc": "6840:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6840:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6864:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6864:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "6809:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "6809:30:12"
																		},
																		"nativeSrc": "6809:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6809:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6799:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6799:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6892:288:12",
															"nodeType": "YulBlock",
															"src": "6892:288:12",
															"statements": [
																{
																	"nativeSrc": "6907:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6907:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6938:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6938:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6949:2:12",
																						"nodeType": "YulLiteral",
																						"src": "6949:2:12",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6934:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6934:3:12"
																				},
																				"nativeSrc": "6934:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6934:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6921:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "6921:12:12"
																		},
																		"nativeSrc": "6921:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6921:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6911:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6911:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7000:83:12",
																		"nodeType": "YulBlock",
																		"src": "7000:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7002:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "7002:77:12"
																					},
																					"nativeSrc": "7002:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7002:79:12"
																				},
																				"nativeSrc": "7002:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "7002:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6972:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6972:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6980:18:12",
																				"nodeType": "YulLiteral",
																				"src": "6980:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6969:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "6969:2:12"
																		},
																		"nativeSrc": "6969:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6969:30:12"
																	},
																	"nativeSrc": "6966:117:12",
																	"nodeType": "YulIf",
																	"src": "6966:117:12"
																},
																{
																	"nativeSrc": "7097:73:12",
																	"nodeType": "YulAssignment",
																	"src": "7097:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7142:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7142:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7153:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7153:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7138:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7138:3:12"
																				},
																				"nativeSrc": "7138:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7138:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7162:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7162:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7107:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "7107:30:12"
																		},
																		"nativeSrc": "7107:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7107:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7097:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7097:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7190:288:12",
															"nodeType": "YulBlock",
															"src": "7190:288:12",
															"statements": [
																{
																	"nativeSrc": "7205:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7205:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7236:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7236:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7247:2:12",
																						"nodeType": "YulLiteral",
																						"src": "7247:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7232:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7232:3:12"
																				},
																				"nativeSrc": "7232:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7232:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7219:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "7219:12:12"
																		},
																		"nativeSrc": "7219:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7219:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7209:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7209:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7298:83:12",
																		"nodeType": "YulBlock",
																		"src": "7298:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7300:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "7300:77:12"
																					},
																					"nativeSrc": "7300:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7300:79:12"
																				},
																				"nativeSrc": "7300:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "7300:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7270:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7270:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7278:18:12",
																				"nodeType": "YulLiteral",
																				"src": "7278:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7267:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7267:2:12"
																		},
																		"nativeSrc": "7267:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7267:30:12"
																	},
																	"nativeSrc": "7264:117:12",
																	"nodeType": "YulIf",
																	"src": "7264:117:12"
																},
																{
																	"nativeSrc": "7395:73:12",
																	"nodeType": "YulAssignment",
																	"src": "7395:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7440:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7440:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7451:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7451:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7436:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7436:3:12"
																				},
																				"nativeSrc": "7436:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7436:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7460:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7460:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7405:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "7405:30:12"
																		},
																		"nativeSrc": "7405:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7405:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "7395:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7395:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7488:289:12",
															"nodeType": "YulBlock",
															"src": "7488:289:12",
															"statements": [
																{
																	"nativeSrc": "7503:47:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7503:47:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7534:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7534:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7545:3:12",
																						"nodeType": "YulLiteral",
																						"src": "7545:3:12",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7530:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7530:3:12"
																				},
																				"nativeSrc": "7530:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7530:19:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7517:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "7517:12:12"
																		},
																		"nativeSrc": "7517:33:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7517:33:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7507:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7507:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7597:83:12",
																		"nodeType": "YulBlock",
																		"src": "7597:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7599:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "7599:77:12"
																					},
																					"nativeSrc": "7599:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7599:79:12"
																				},
																				"nativeSrc": "7599:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "7599:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7569:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7569:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7577:18:12",
																				"nodeType": "YulLiteral",
																				"src": "7577:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7566:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7566:2:12"
																		},
																		"nativeSrc": "7566:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7566:30:12"
																	},
																	"nativeSrc": "7563:117:12",
																	"nodeType": "YulIf",
																	"src": "7563:117:12"
																},
																{
																	"nativeSrc": "7694:73:12",
																	"nodeType": "YulAssignment",
																	"src": "7694:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7739:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7739:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7750:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7750:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7735:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7735:3:12"
																				},
																				"nativeSrc": "7735:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7735:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7759:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7759:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7704:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "7704:30:12"
																		},
																		"nativeSrc": "7704:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7704:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "7694:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7694:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7787:289:12",
															"nodeType": "YulBlock",
															"src": "7787:289:12",
															"statements": [
																{
																	"nativeSrc": "7802:47:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7802:47:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7833:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7833:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7844:3:12",
																						"nodeType": "YulLiteral",
																						"src": "7844:3:12",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7829:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7829:3:12"
																				},
																				"nativeSrc": "7829:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7829:19:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7816:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "7816:12:12"
																		},
																		"nativeSrc": "7816:33:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7816:33:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7806:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7806:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7896:83:12",
																		"nodeType": "YulBlock",
																		"src": "7896:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7898:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "7898:77:12"
																					},
																					"nativeSrc": "7898:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7898:79:12"
																				},
																				"nativeSrc": "7898:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "7898:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7868:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7868:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7876:18:12",
																				"nodeType": "YulLiteral",
																				"src": "7876:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7865:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7865:2:12"
																		},
																		"nativeSrc": "7865:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7865:30:12"
																	},
																	"nativeSrc": "7862:117:12",
																	"nodeType": "YulIf",
																	"src": "7862:117:12"
																},
																{
																	"nativeSrc": "7993:73:12",
																	"nodeType": "YulAssignment",
																	"src": "7993:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8038:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8038:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8049:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8049:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8034:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8034:3:12"
																				},
																				"nativeSrc": "8034:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8034:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8058:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8058:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8003:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "8003:30:12"
																		},
																		"nativeSrc": "8003:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8003:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "7993:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7993:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr",
												"nativeSrc": "6126:1957:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6257:9:12",
														"nodeType": "YulTypedName",
														"src": "6257:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6268:7:12",
														"nodeType": "YulTypedName",
														"src": "6268:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6280:6:12",
														"nodeType": "YulTypedName",
														"src": "6280:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6288:6:12",
														"nodeType": "YulTypedName",
														"src": "6288:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6296:6:12",
														"nodeType": "YulTypedName",
														"src": "6296:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6304:6:12",
														"nodeType": "YulTypedName",
														"src": "6304:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6312:6:12",
														"nodeType": "YulTypedName",
														"src": "6312:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "6320:6:12",
														"nodeType": "YulTypedName",
														"src": "6320:6:12",
														"type": ""
													}
												],
												"src": "6126:1957:12"
											},
											{
												"body": {
													"nativeSrc": "8134:32:12",
													"nodeType": "YulBlock",
													"src": "8134:32:12",
													"statements": [
														{
															"nativeSrc": "8144:16:12",
															"nodeType": "YulAssignment",
															"src": "8144:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "8155:5:12",
																"nodeType": "YulIdentifier",
																"src": "8155:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8144:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "8144:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "8089:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8116:5:12",
														"nodeType": "YulTypedName",
														"src": "8116:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8126:7:12",
														"nodeType": "YulTypedName",
														"src": "8126:7:12",
														"type": ""
													}
												],
												"src": "8089:77:12"
											},
											{
												"body": {
													"nativeSrc": "8237:53:12",
													"nodeType": "YulBlock",
													"src": "8237:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8254:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8254:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8277:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "8277:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8259:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "8259:17:12"
																		},
																		"nativeSrc": "8259:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8259:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8247:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8247:6:12"
																},
																"nativeSrc": "8247:37:12",
																"nodeType": "YulFunctionCall",
																"src": "8247:37:12"
															},
															"nativeSrc": "8247:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "8247:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8172:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8225:5:12",
														"nodeType": "YulTypedName",
														"src": "8225:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8232:3:12",
														"nodeType": "YulTypedName",
														"src": "8232:3:12",
														"type": ""
													}
												],
												"src": "8172:118:12"
											},
											{
												"body": {
													"nativeSrc": "8394:124:12",
													"nodeType": "YulBlock",
													"src": "8394:124:12",
													"statements": [
														{
															"nativeSrc": "8404:26:12",
															"nodeType": "YulAssignment",
															"src": "8404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8412:3:12"
																},
																"nativeSrc": "8412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8484:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8484:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8497:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8497:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8508:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8508:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8493:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8493:3:12"
																		},
																		"nativeSrc": "8493:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8493:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8440:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "8440:43:12"
																},
																"nativeSrc": "8440:71:12",
																"nodeType": "YulFunctionCall",
																"src": "8440:71:12"
															},
															"nativeSrc": "8440:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "8440:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8296:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8366:9:12",
														"nodeType": "YulTypedName",
														"src": "8366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8378:6:12",
														"nodeType": "YulTypedName",
														"src": "8378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8389:4:12",
														"nodeType": "YulTypedName",
														"src": "8389:4:12",
														"type": ""
													}
												],
												"src": "8296:222:12"
											},
											{
												"body": {
													"nativeSrc": "8620:73:12",
													"nodeType": "YulBlock",
													"src": "8620:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8637:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8637:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8642:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8642:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8630:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8630:6:12"
																},
																"nativeSrc": "8630:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8630:19:12"
															},
															"nativeSrc": "8630:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "8630:19:12"
														},
														{
															"nativeSrc": "8658:29:12",
															"nodeType": "YulAssignment",
															"src": "8658:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8677:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8677:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8682:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8682:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8673:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8673:3:12"
																},
																"nativeSrc": "8673:14:12",
																"nodeType": "YulFunctionCall",
																"src": "8673:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8658:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "8658:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8524:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8592:3:12",
														"nodeType": "YulTypedName",
														"src": "8592:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8597:6:12",
														"nodeType": "YulTypedName",
														"src": "8597:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8608:11:12",
														"nodeType": "YulTypedName",
														"src": "8608:11:12",
														"type": ""
													}
												],
												"src": "8524:169:12"
											},
											{
												"body": {
													"nativeSrc": "8805:64:12",
													"nodeType": "YulBlock",
													"src": "8805:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8827:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8827:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8835:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8835:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8823:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8823:3:12"
																		},
																		"nativeSrc": "8823:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8823:14:12"
																	},
																	{
																		"hexValue": "5175697a20616c72656164792073746172746564",
																		"kind": "string",
																		"nativeSrc": "8839:22:12",
																		"nodeType": "YulLiteral",
																		"src": "8839:22:12",
																		"type": "",
																		"value": "Quiz already started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8816:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8816:6:12"
																},
																"nativeSrc": "8816:46:12",
																"nodeType": "YulFunctionCall",
																"src": "8816:46:12"
															},
															"nativeSrc": "8816:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "8816:46:12"
														}
													]
												},
												"name": "store_literal_in_memory_74d31cd5a0f981d114c8b7b13b997b7f4104d83ecf021469195c2e6fe273e612",
												"nativeSrc": "8699:170:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8797:6:12",
														"nodeType": "YulTypedName",
														"src": "8797:6:12",
														"type": ""
													}
												],
												"src": "8699:170:12"
											},
											{
												"body": {
													"nativeSrc": "9021:220:12",
													"nodeType": "YulBlock",
													"src": "9021:220:12",
													"statements": [
														{
															"nativeSrc": "9031:74:12",
															"nodeType": "YulAssignment",
															"src": "9031:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9097:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9097:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9102:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9102:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9038:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "9038:58:12"
																},
																"nativeSrc": "9038:67:12",
																"nodeType": "YulFunctionCall",
																"src": "9038:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9031:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9031:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9203:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9203:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74d31cd5a0f981d114c8b7b13b997b7f4104d83ecf021469195c2e6fe273e612",
																	"nativeSrc": "9114:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "9114:88:12"
																},
																"nativeSrc": "9114:93:12",
																"nodeType": "YulFunctionCall",
																"src": "9114:93:12"
															},
															"nativeSrc": "9114:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "9114:93:12"
														},
														{
															"nativeSrc": "9216:19:12",
															"nodeType": "YulAssignment",
															"src": "9216:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9227:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9227:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9232:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9232:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9223:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9223:3:12"
																},
																"nativeSrc": "9223:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9223:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9216:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9216:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74d31cd5a0f981d114c8b7b13b997b7f4104d83ecf021469195c2e6fe273e612_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8875:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9009:3:12",
														"nodeType": "YulTypedName",
														"src": "9009:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9017:3:12",
														"nodeType": "YulTypedName",
														"src": "9017:3:12",
														"type": ""
													}
												],
												"src": "8875:366:12"
											},
											{
												"body": {
													"nativeSrc": "9418:248:12",
													"nodeType": "YulBlock",
													"src": "9418:248:12",
													"statements": [
														{
															"nativeSrc": "9428:26:12",
															"nodeType": "YulAssignment",
															"src": "9428:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9440:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9440:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9451:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9451:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9436:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9436:3:12"
																},
																"nativeSrc": "9436:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9436:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9428:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9428:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9475:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9475:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9486:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9486:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9471:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9471:3:12"
																		},
																		"nativeSrc": "9471:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9471:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9494:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "9494:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9500:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9500:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9490:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9490:3:12"
																		},
																		"nativeSrc": "9490:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9490:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9464:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9464:6:12"
																},
																"nativeSrc": "9464:47:12",
																"nodeType": "YulFunctionCall",
																"src": "9464:47:12"
															},
															"nativeSrc": "9464:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "9464:47:12"
														},
														{
															"nativeSrc": "9520:139:12",
															"nodeType": "YulAssignment",
															"src": "9520:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9654:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9654:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74d31cd5a0f981d114c8b7b13b997b7f4104d83ecf021469195c2e6fe273e612_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9528:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "9528:124:12"
																},
																"nativeSrc": "9528:131:12",
																"nodeType": "YulFunctionCall",
																"src": "9528:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9520:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9520:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74d31cd5a0f981d114c8b7b13b997b7f4104d83ecf021469195c2e6fe273e612__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9247:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9398:9:12",
														"nodeType": "YulTypedName",
														"src": "9398:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9413:4:12",
														"nodeType": "YulTypedName",
														"src": "9413:4:12",
														"type": ""
													}
												],
												"src": "9247:419:12"
											},
											{
												"body": {
													"nativeSrc": "9778:60:12",
													"nodeType": "YulBlock",
													"src": "9778:60:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9800:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9800:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9808:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9808:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9796:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9796:3:12"
																		},
																		"nativeSrc": "9796:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9796:14:12"
																	},
																	{
																		"hexValue": "5175697a206e6f742073746172746564",
																		"kind": "string",
																		"nativeSrc": "9812:18:12",
																		"nodeType": "YulLiteral",
																		"src": "9812:18:12",
																		"type": "",
																		"value": "Quiz not started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9789:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9789:6:12"
																},
																"nativeSrc": "9789:42:12",
																"nodeType": "YulFunctionCall",
																"src": "9789:42:12"
															},
															"nativeSrc": "9789:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "9789:42:12"
														}
													]
												},
												"name": "store_literal_in_memory_6113f27c66be9fe3c34f86efb147343546eef327965cd9666d90ebff6f883d80",
												"nativeSrc": "9672:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9770:6:12",
														"nodeType": "YulTypedName",
														"src": "9770:6:12",
														"type": ""
													}
												],
												"src": "9672:166:12"
											},
											{
												"body": {
													"nativeSrc": "9990:220:12",
													"nodeType": "YulBlock",
													"src": "9990:220:12",
													"statements": [
														{
															"nativeSrc": "10000:74:12",
															"nodeType": "YulAssignment",
															"src": "10000:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10066:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10066:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10071:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10071:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10007:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "10007:58:12"
																},
																"nativeSrc": "10007:67:12",
																"nodeType": "YulFunctionCall",
																"src": "10007:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10000:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10000:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10172:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10172:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6113f27c66be9fe3c34f86efb147343546eef327965cd9666d90ebff6f883d80",
																	"nativeSrc": "10083:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "10083:88:12"
																},
																"nativeSrc": "10083:93:12",
																"nodeType": "YulFunctionCall",
																"src": "10083:93:12"
															},
															"nativeSrc": "10083:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "10083:93:12"
														},
														{
															"nativeSrc": "10185:19:12",
															"nodeType": "YulAssignment",
															"src": "10185:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10196:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10196:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10201:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10201:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10192:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10192:3:12"
																},
																"nativeSrc": "10192:12:12",
																"nodeType": "YulFunctionCall",
																"src": "10192:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10185:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10185:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6113f27c66be9fe3c34f86efb147343546eef327965cd9666d90ebff6f883d80_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9844:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9978:3:12",
														"nodeType": "YulTypedName",
														"src": "9978:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9986:3:12",
														"nodeType": "YulTypedName",
														"src": "9986:3:12",
														"type": ""
													}
												],
												"src": "9844:366:12"
											},
											{
												"body": {
													"nativeSrc": "10387:248:12",
													"nodeType": "YulBlock",
													"src": "10387:248:12",
													"statements": [
														{
															"nativeSrc": "10397:26:12",
															"nodeType": "YulAssignment",
															"src": "10397:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10409:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10409:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10420:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10420:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10405:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10405:3:12"
																},
																"nativeSrc": "10405:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10405:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10397:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10397:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10444:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10444:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10455:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10455:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10440:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10440:3:12"
																		},
																		"nativeSrc": "10440:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10440:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10463:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10463:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10469:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10469:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10459:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10459:3:12"
																		},
																		"nativeSrc": "10459:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10459:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10433:6:12"
																},
																"nativeSrc": "10433:47:12",
																"nodeType": "YulFunctionCall",
																"src": "10433:47:12"
															},
															"nativeSrc": "10433:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "10433:47:12"
														},
														{
															"nativeSrc": "10489:139:12",
															"nodeType": "YulAssignment",
															"src": "10489:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10623:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10623:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6113f27c66be9fe3c34f86efb147343546eef327965cd9666d90ebff6f883d80_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10497:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "10497:124:12"
																},
																"nativeSrc": "10497:131:12",
																"nodeType": "YulFunctionCall",
																"src": "10497:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10489:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10489:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6113f27c66be9fe3c34f86efb147343546eef327965cd9666d90ebff6f883d80__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10216:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10367:9:12",
														"nodeType": "YulTypedName",
														"src": "10367:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10382:4:12",
														"nodeType": "YulTypedName",
														"src": "10382:4:12",
														"type": ""
													}
												],
												"src": "10216:419:12"
											},
											{
												"body": {
													"nativeSrc": "10747:71:12",
													"nodeType": "YulBlock",
													"src": "10747:71:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10769:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10769:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10777:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10777:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10765:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10765:3:12"
																		},
																		"nativeSrc": "10765:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10765:14:12"
																	},
																	{
																		"hexValue": "506c617965722068617320616c726561647920616e737765726564",
																		"kind": "string",
																		"nativeSrc": "10781:29:12",
																		"nodeType": "YulLiteral",
																		"src": "10781:29:12",
																		"type": "",
																		"value": "Player has already answered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10758:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10758:6:12"
																},
																"nativeSrc": "10758:53:12",
																"nodeType": "YulFunctionCall",
																"src": "10758:53:12"
															},
															"nativeSrc": "10758:53:12",
															"nodeType": "YulExpressionStatement",
															"src": "10758:53:12"
														}
													]
												},
												"name": "store_literal_in_memory_bbdbe33ec55f5fd3ff65c62ebfc5c8c611b57e63d612b7f8a86521ceeeabac23",
												"nativeSrc": "10641:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10739:6:12",
														"nodeType": "YulTypedName",
														"src": "10739:6:12",
														"type": ""
													}
												],
												"src": "10641:177:12"
											},
											{
												"body": {
													"nativeSrc": "10970:220:12",
													"nodeType": "YulBlock",
													"src": "10970:220:12",
													"statements": [
														{
															"nativeSrc": "10980:74:12",
															"nodeType": "YulAssignment",
															"src": "10980:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11046:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11046:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11051:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11051:2:12",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10987:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "10987:58:12"
																},
																"nativeSrc": "10987:67:12",
																"nodeType": "YulFunctionCall",
																"src": "10987:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10980:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10980:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11152:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11152:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bbdbe33ec55f5fd3ff65c62ebfc5c8c611b57e63d612b7f8a86521ceeeabac23",
																	"nativeSrc": "11063:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "11063:88:12"
																},
																"nativeSrc": "11063:93:12",
																"nodeType": "YulFunctionCall",
																"src": "11063:93:12"
															},
															"nativeSrc": "11063:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "11063:93:12"
														},
														{
															"nativeSrc": "11165:19:12",
															"nodeType": "YulAssignment",
															"src": "11165:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11176:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11176:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11181:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11181:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11172:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11172:3:12"
																},
																"nativeSrc": "11172:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11172:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11165:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11165:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bbdbe33ec55f5fd3ff65c62ebfc5c8c611b57e63d612b7f8a86521ceeeabac23_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10824:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10958:3:12",
														"nodeType": "YulTypedName",
														"src": "10958:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10966:3:12",
														"nodeType": "YulTypedName",
														"src": "10966:3:12",
														"type": ""
													}
												],
												"src": "10824:366:12"
											},
											{
												"body": {
													"nativeSrc": "11367:248:12",
													"nodeType": "YulBlock",
													"src": "11367:248:12",
													"statements": [
														{
															"nativeSrc": "11377:26:12",
															"nodeType": "YulAssignment",
															"src": "11377:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11389:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11389:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11400:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11400:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11385:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11385:3:12"
																},
																"nativeSrc": "11385:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11385:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11377:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11377:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11424:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11424:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11435:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11435:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11420:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11420:3:12"
																		},
																		"nativeSrc": "11420:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11420:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11443:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11443:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11449:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11449:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11439:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11439:3:12"
																		},
																		"nativeSrc": "11439:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11439:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11413:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11413:6:12"
																},
																"nativeSrc": "11413:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11413:47:12"
															},
															"nativeSrc": "11413:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11413:47:12"
														},
														{
															"nativeSrc": "11469:139:12",
															"nodeType": "YulAssignment",
															"src": "11469:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11603:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11603:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bbdbe33ec55f5fd3ff65c62ebfc5c8c611b57e63d612b7f8a86521ceeeabac23_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11477:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11477:124:12"
																},
																"nativeSrc": "11477:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11477:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11469:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11469:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bbdbe33ec55f5fd3ff65c62ebfc5c8c611b57e63d612b7f8a86521ceeeabac23__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11196:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11347:9:12",
														"nodeType": "YulTypedName",
														"src": "11347:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11362:4:12",
														"nodeType": "YulTypedName",
														"src": "11362:4:12",
														"type": ""
													}
												],
												"src": "11196:419:12"
											},
											{
												"body": {
													"nativeSrc": "11649:152:12",
													"nodeType": "YulBlock",
													"src": "11649:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11666:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11666:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11669:77:12",
																		"nodeType": "YulLiteral",
																		"src": "11669:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11659:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11659:6:12"
																},
																"nativeSrc": "11659:88:12",
																"nodeType": "YulFunctionCall",
																"src": "11659:88:12"
															},
															"nativeSrc": "11659:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "11659:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11763:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11763:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11766:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11766:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11756:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11756:6:12"
																},
																"nativeSrc": "11756:15:12",
																"nodeType": "YulFunctionCall",
																"src": "11756:15:12"
															},
															"nativeSrc": "11756:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "11756:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11787:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11787:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11790:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11790:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11780:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11780:6:12"
																},
																"nativeSrc": "11780:15:12",
																"nodeType": "YulFunctionCall",
																"src": "11780:15:12"
															},
															"nativeSrc": "11780:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "11780:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "11621:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "11621:180:12"
											},
											{
												"body": {
													"nativeSrc": "11866:40:12",
													"nodeType": "YulBlock",
													"src": "11866:40:12",
													"statements": [
														{
															"nativeSrc": "11877:22:12",
															"nodeType": "YulAssignment",
															"src": "11877:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11893:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "11893:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11887:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11887:5:12"
																},
																"nativeSrc": "11887:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11887:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11877:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11877:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "11807:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11849:5:12",
														"nodeType": "YulTypedName",
														"src": "11849:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11859:6:12",
														"nodeType": "YulTypedName",
														"src": "11859:6:12",
														"type": ""
													}
												],
												"src": "11807:99:12"
											},
											{
												"body": {
													"nativeSrc": "12026:34:12",
													"nodeType": "YulBlock",
													"src": "12026:34:12",
													"statements": [
														{
															"nativeSrc": "12036:18:12",
															"nodeType": "YulAssignment",
															"src": "12036:18:12",
															"value": {
																"name": "pos",
																"nativeSrc": "12051:3:12",
																"nodeType": "YulIdentifier",
																"src": "12051:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12036:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "12036:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11912:148:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11998:3:12",
														"nodeType": "YulTypedName",
														"src": "11998:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12003:6:12",
														"nodeType": "YulTypedName",
														"src": "12003:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12014:11:12",
														"nodeType": "YulTypedName",
														"src": "12014:11:12",
														"type": ""
													}
												],
												"src": "11912:148:12"
											},
											{
												"body": {
													"nativeSrc": "12128:184:12",
													"nodeType": "YulBlock",
													"src": "12128:184:12",
													"statements": [
														{
															"nativeSrc": "12138:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12138:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "12147:1:12",
																"nodeType": "YulLiteral",
																"src": "12147:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "12142:1:12",
																	"nodeType": "YulTypedName",
																	"src": "12142:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12207:63:12",
																"nodeType": "YulBlock",
																"src": "12207:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "12232:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "12232:3:12"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "12237:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "12237:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "12228:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "12228:3:12"
																					},
																					"nativeSrc": "12228:11:12",
																					"nodeType": "YulFunctionCall",
																					"src": "12228:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "12251:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "12251:3:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "12256:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "12256:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12247:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "12247:3:12"
																							},
																							"nativeSrc": "12247:11:12",
																							"nodeType": "YulFunctionCall",
																							"src": "12247:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "12241:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "12241:5:12"
																					},
																					"nativeSrc": "12241:18:12",
																					"nodeType": "YulFunctionCall",
																					"src": "12241:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12221:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12221:6:12"
																			},
																			"nativeSrc": "12221:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12221:39:12"
																		},
																		"nativeSrc": "12221:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12221:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "12168:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12168:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12171:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12171:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12165:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12165:2:12"
																},
																"nativeSrc": "12165:13:12",
																"nodeType": "YulFunctionCall",
																"src": "12165:13:12"
															},
															"nativeSrc": "12157:113:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12179:19:12",
																"nodeType": "YulBlock",
																"src": "12179:19:12",
																"statements": [
																	{
																		"nativeSrc": "12181:15:12",
																		"nodeType": "YulAssignment",
																		"src": "12181:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "12190:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "12190:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12193:2:12",
																					"nodeType": "YulLiteral",
																					"src": "12193:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12186:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12186:3:12"
																			},
																			"nativeSrc": "12186:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12186:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "12181:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "12181:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12161:3:12",
																"nodeType": "YulBlock",
																"src": "12161:3:12",
																"statements": []
															},
															"src": "12157:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "12290:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12290:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12295:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12295:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12286:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12286:3:12"
																		},
																		"nativeSrc": "12286:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12286:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12304:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12304:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12279:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12279:6:12"
																},
																"nativeSrc": "12279:27:12",
																"nodeType": "YulFunctionCall",
																"src": "12279:27:12"
															},
															"nativeSrc": "12279:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "12279:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "12066:246:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12110:3:12",
														"nodeType": "YulTypedName",
														"src": "12110:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "12115:3:12",
														"nodeType": "YulTypedName",
														"src": "12115:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12120:6:12",
														"nodeType": "YulTypedName",
														"src": "12120:6:12",
														"type": ""
													}
												],
												"src": "12066:246:12"
											},
											{
												"body": {
													"nativeSrc": "12428:280:12",
													"nodeType": "YulBlock",
													"src": "12428:280:12",
													"statements": [
														{
															"nativeSrc": "12438:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12438:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12485:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12485:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "12452:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "12452:32:12"
																},
																"nativeSrc": "12452:39:12",
																"nodeType": "YulFunctionCall",
																"src": "12452:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12442:6:12",
																	"nodeType": "YulTypedName",
																	"src": "12442:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12500:96:12",
															"nodeType": "YulAssignment",
															"src": "12500:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12584:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12584:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12589:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12589:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12507:76:12",
																	"nodeType": "YulIdentifier",
																	"src": "12507:76:12"
																},
																"nativeSrc": "12507:89:12",
																"nodeType": "YulFunctionCall",
																"src": "12507:89:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12500:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12500:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12644:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "12644:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12651:4:12",
																				"nodeType": "YulLiteral",
																				"src": "12651:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12640:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12640:3:12"
																		},
																		"nativeSrc": "12640:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12640:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12658:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12658:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12663:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12663:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12605:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "12605:34:12"
																},
																"nativeSrc": "12605:65:12",
																"nodeType": "YulFunctionCall",
																"src": "12605:65:12"
															},
															"nativeSrc": "12605:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "12605:65:12"
														},
														{
															"nativeSrc": "12679:23:12",
															"nodeType": "YulAssignment",
															"src": "12679:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12690:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12690:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12695:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12695:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12686:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12686:3:12"
																},
																"nativeSrc": "12686:16:12",
																"nodeType": "YulFunctionCall",
																"src": "12686:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12679:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12679:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12318:390:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12409:5:12",
														"nodeType": "YulTypedName",
														"src": "12409:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12416:3:12",
														"nodeType": "YulTypedName",
														"src": "12416:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12424:3:12",
														"nodeType": "YulTypedName",
														"src": "12424:3:12",
														"type": ""
													}
												],
												"src": "12318:390:12"
											},
											{
												"body": {
													"nativeSrc": "12850:139:12",
													"nodeType": "YulBlock",
													"src": "12850:139:12",
													"statements": [
														{
															"nativeSrc": "12861:102:12",
															"nodeType": "YulAssignment",
															"src": "12861:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12950:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12950:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12959:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12959:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12868:81:12",
																	"nodeType": "YulIdentifier",
																	"src": "12868:81:12"
																},
																"nativeSrc": "12868:95:12",
																"nodeType": "YulFunctionCall",
																"src": "12868:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12861:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12861:3:12"
																}
															]
														},
														{
															"nativeSrc": "12973:10:12",
															"nodeType": "YulAssignment",
															"src": "12973:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "12980:3:12",
																"nodeType": "YulIdentifier",
																"src": "12980:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12973:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12973:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12714:275:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12829:3:12",
														"nodeType": "YulTypedName",
														"src": "12829:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12835:6:12",
														"nodeType": "YulTypedName",
														"src": "12835:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12846:3:12",
														"nodeType": "YulTypedName",
														"src": "12846:3:12",
														"type": ""
													}
												],
												"src": "12714:275:12"
											},
											{
												"body": {
													"nativeSrc": "13101:62:12",
													"nodeType": "YulBlock",
													"src": "13101:62:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13123:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13123:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13131:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13131:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13119:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13119:3:12"
																		},
																		"nativeSrc": "13119:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13119:14:12"
																	},
																	{
																		"hexValue": "496e636f727265637420616e737765722031",
																		"kind": "string",
																		"nativeSrc": "13135:20:12",
																		"nodeType": "YulLiteral",
																		"src": "13135:20:12",
																		"type": "",
																		"value": "Incorrect answer 1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13112:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13112:6:12"
																},
																"nativeSrc": "13112:44:12",
																"nodeType": "YulFunctionCall",
																"src": "13112:44:12"
															},
															"nativeSrc": "13112:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "13112:44:12"
														}
													]
												},
												"name": "store_literal_in_memory_5340bde7db8ae904c90cdf5d9f62cdff34386ee2216c16409523907d46f72aa0",
												"nativeSrc": "12995:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13093:6:12",
														"nodeType": "YulTypedName",
														"src": "13093:6:12",
														"type": ""
													}
												],
												"src": "12995:168:12"
											},
											{
												"body": {
													"nativeSrc": "13315:220:12",
													"nodeType": "YulBlock",
													"src": "13315:220:12",
													"statements": [
														{
															"nativeSrc": "13325:74:12",
															"nodeType": "YulAssignment",
															"src": "13325:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13391:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13391:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13396:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13396:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13332:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "13332:58:12"
																},
																"nativeSrc": "13332:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13332:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13325:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13325:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13497:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13497:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5340bde7db8ae904c90cdf5d9f62cdff34386ee2216c16409523907d46f72aa0",
																	"nativeSrc": "13408:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13408:88:12"
																},
																"nativeSrc": "13408:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13408:93:12"
															},
															"nativeSrc": "13408:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13408:93:12"
														},
														{
															"nativeSrc": "13510:19:12",
															"nodeType": "YulAssignment",
															"src": "13510:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13521:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13521:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13526:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13526:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13517:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13517:3:12"
																},
																"nativeSrc": "13517:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13517:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13510:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13510:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5340bde7db8ae904c90cdf5d9f62cdff34386ee2216c16409523907d46f72aa0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13169:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13303:3:12",
														"nodeType": "YulTypedName",
														"src": "13303:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13311:3:12",
														"nodeType": "YulTypedName",
														"src": "13311:3:12",
														"type": ""
													}
												],
												"src": "13169:366:12"
											},
											{
												"body": {
													"nativeSrc": "13712:248:12",
													"nodeType": "YulBlock",
													"src": "13712:248:12",
													"statements": [
														{
															"nativeSrc": "13722:26:12",
															"nodeType": "YulAssignment",
															"src": "13722:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13734:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13734:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13745:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13745:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13730:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13730:3:12"
																},
																"nativeSrc": "13730:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13730:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13722:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13722:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13769:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13769:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13780:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13780:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13765:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13765:3:12"
																		},
																		"nativeSrc": "13765:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13765:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13788:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13788:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13794:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13794:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13784:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13784:3:12"
																		},
																		"nativeSrc": "13784:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13784:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13758:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13758:6:12"
																},
																"nativeSrc": "13758:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13758:47:12"
															},
															"nativeSrc": "13758:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13758:47:12"
														},
														{
															"nativeSrc": "13814:139:12",
															"nodeType": "YulAssignment",
															"src": "13814:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13948:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13948:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5340bde7db8ae904c90cdf5d9f62cdff34386ee2216c16409523907d46f72aa0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13822:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13822:124:12"
																},
																"nativeSrc": "13822:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13822:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13814:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13814:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5340bde7db8ae904c90cdf5d9f62cdff34386ee2216c16409523907d46f72aa0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13541:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13692:9:12",
														"nodeType": "YulTypedName",
														"src": "13692:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13707:4:12",
														"nodeType": "YulTypedName",
														"src": "13707:4:12",
														"type": ""
													}
												],
												"src": "13541:419:12"
											},
											{
												"body": {
													"nativeSrc": "14072:62:12",
													"nodeType": "YulBlock",
													"src": "14072:62:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14094:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14094:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14102:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14102:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14090:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14090:3:12"
																		},
																		"nativeSrc": "14090:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14090:14:12"
																	},
																	{
																		"hexValue": "496e636f727265637420616e737765722032",
																		"kind": "string",
																		"nativeSrc": "14106:20:12",
																		"nodeType": "YulLiteral",
																		"src": "14106:20:12",
																		"type": "",
																		"value": "Incorrect answer 2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14083:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14083:6:12"
																},
																"nativeSrc": "14083:44:12",
																"nodeType": "YulFunctionCall",
																"src": "14083:44:12"
															},
															"nativeSrc": "14083:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "14083:44:12"
														}
													]
												},
												"name": "store_literal_in_memory_be0700e5bdf2f4a3f99c0f46642cfa260d65dd8db325c0f55f4146b120a077d0",
												"nativeSrc": "13966:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14064:6:12",
														"nodeType": "YulTypedName",
														"src": "14064:6:12",
														"type": ""
													}
												],
												"src": "13966:168:12"
											},
											{
												"body": {
													"nativeSrc": "14286:220:12",
													"nodeType": "YulBlock",
													"src": "14286:220:12",
													"statements": [
														{
															"nativeSrc": "14296:74:12",
															"nodeType": "YulAssignment",
															"src": "14296:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14362:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14362:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14367:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14367:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14303:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14303:58:12"
																},
																"nativeSrc": "14303:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14303:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14296:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14296:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14468:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14468:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_be0700e5bdf2f4a3f99c0f46642cfa260d65dd8db325c0f55f4146b120a077d0",
																	"nativeSrc": "14379:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14379:88:12"
																},
																"nativeSrc": "14379:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14379:93:12"
															},
															"nativeSrc": "14379:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14379:93:12"
														},
														{
															"nativeSrc": "14481:19:12",
															"nodeType": "YulAssignment",
															"src": "14481:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14492:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14492:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14497:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14497:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14488:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14488:3:12"
																},
																"nativeSrc": "14488:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14488:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14481:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14481:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_be0700e5bdf2f4a3f99c0f46642cfa260d65dd8db325c0f55f4146b120a077d0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14140:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14274:3:12",
														"nodeType": "YulTypedName",
														"src": "14274:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14282:3:12",
														"nodeType": "YulTypedName",
														"src": "14282:3:12",
														"type": ""
													}
												],
												"src": "14140:366:12"
											},
											{
												"body": {
													"nativeSrc": "14683:248:12",
													"nodeType": "YulBlock",
													"src": "14683:248:12",
													"statements": [
														{
															"nativeSrc": "14693:26:12",
															"nodeType": "YulAssignment",
															"src": "14693:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14705:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14705:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14716:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14716:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14701:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14701:3:12"
																},
																"nativeSrc": "14701:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14701:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14693:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14693:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14740:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14740:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14751:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14751:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14736:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14736:3:12"
																		},
																		"nativeSrc": "14736:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14736:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14759:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14759:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14765:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14765:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14755:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14755:3:12"
																		},
																		"nativeSrc": "14755:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14755:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14729:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14729:6:12"
																},
																"nativeSrc": "14729:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14729:47:12"
															},
															"nativeSrc": "14729:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14729:47:12"
														},
														{
															"nativeSrc": "14785:139:12",
															"nodeType": "YulAssignment",
															"src": "14785:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14919:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14919:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_be0700e5bdf2f4a3f99c0f46642cfa260d65dd8db325c0f55f4146b120a077d0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14793:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14793:124:12"
																},
																"nativeSrc": "14793:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14793:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14785:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14785:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_be0700e5bdf2f4a3f99c0f46642cfa260d65dd8db325c0f55f4146b120a077d0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14512:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14663:9:12",
														"nodeType": "YulTypedName",
														"src": "14663:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14678:4:12",
														"nodeType": "YulTypedName",
														"src": "14678:4:12",
														"type": ""
													}
												],
												"src": "14512:419:12"
											},
											{
												"body": {
													"nativeSrc": "15043:62:12",
													"nodeType": "YulBlock",
													"src": "15043:62:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15065:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15065:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15073:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15073:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15061:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15061:3:12"
																		},
																		"nativeSrc": "15061:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15061:14:12"
																	},
																	{
																		"hexValue": "496e636f727265637420616e737765722033",
																		"kind": "string",
																		"nativeSrc": "15077:20:12",
																		"nodeType": "YulLiteral",
																		"src": "15077:20:12",
																		"type": "",
																		"value": "Incorrect answer 3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15054:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15054:6:12"
																},
																"nativeSrc": "15054:44:12",
																"nodeType": "YulFunctionCall",
																"src": "15054:44:12"
															},
															"nativeSrc": "15054:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "15054:44:12"
														}
													]
												},
												"name": "store_literal_in_memory_3a576880600c047ca9851e6f261b487ffa5f3a81013948b0c7c1a1460e555eb5",
												"nativeSrc": "14937:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15035:6:12",
														"nodeType": "YulTypedName",
														"src": "15035:6:12",
														"type": ""
													}
												],
												"src": "14937:168:12"
											},
											{
												"body": {
													"nativeSrc": "15257:220:12",
													"nodeType": "YulBlock",
													"src": "15257:220:12",
													"statements": [
														{
															"nativeSrc": "15267:74:12",
															"nodeType": "YulAssignment",
															"src": "15267:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15333:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15333:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15338:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15338:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15274:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "15274:58:12"
																},
																"nativeSrc": "15274:67:12",
																"nodeType": "YulFunctionCall",
																"src": "15274:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15267:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15267:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15439:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15439:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3a576880600c047ca9851e6f261b487ffa5f3a81013948b0c7c1a1460e555eb5",
																	"nativeSrc": "15350:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "15350:88:12"
																},
																"nativeSrc": "15350:93:12",
																"nodeType": "YulFunctionCall",
																"src": "15350:93:12"
															},
															"nativeSrc": "15350:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "15350:93:12"
														},
														{
															"nativeSrc": "15452:19:12",
															"nodeType": "YulAssignment",
															"src": "15452:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15463:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15463:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15468:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15468:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15459:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15459:3:12"
																},
																"nativeSrc": "15459:12:12",
																"nodeType": "YulFunctionCall",
																"src": "15459:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15452:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15452:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3a576880600c047ca9851e6f261b487ffa5f3a81013948b0c7c1a1460e555eb5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15111:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15245:3:12",
														"nodeType": "YulTypedName",
														"src": "15245:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15253:3:12",
														"nodeType": "YulTypedName",
														"src": "15253:3:12",
														"type": ""
													}
												],
												"src": "15111:366:12"
											},
											{
												"body": {
													"nativeSrc": "15654:248:12",
													"nodeType": "YulBlock",
													"src": "15654:248:12",
													"statements": [
														{
															"nativeSrc": "15664:26:12",
															"nodeType": "YulAssignment",
															"src": "15664:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15676:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15676:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15687:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15687:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15672:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15672:3:12"
																},
																"nativeSrc": "15672:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15672:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15664:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15664:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15711:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15711:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15722:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15722:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15707:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15707:3:12"
																		},
																		"nativeSrc": "15707:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15707:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15730:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15730:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15736:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15736:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15726:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15726:3:12"
																		},
																		"nativeSrc": "15726:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15726:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15700:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15700:6:12"
																},
																"nativeSrc": "15700:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15700:47:12"
															},
															"nativeSrc": "15700:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15700:47:12"
														},
														{
															"nativeSrc": "15756:139:12",
															"nodeType": "YulAssignment",
															"src": "15756:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15890:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15890:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3a576880600c047ca9851e6f261b487ffa5f3a81013948b0c7c1a1460e555eb5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15764:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "15764:124:12"
																},
																"nativeSrc": "15764:131:12",
																"nodeType": "YulFunctionCall",
																"src": "15764:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15756:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15756:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3a576880600c047ca9851e6f261b487ffa5f3a81013948b0c7c1a1460e555eb5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15483:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15634:9:12",
														"nodeType": "YulTypedName",
														"src": "15634:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15649:4:12",
														"nodeType": "YulTypedName",
														"src": "15649:4:12",
														"type": ""
													}
												],
												"src": "15483:419:12"
											},
											{
												"body": {
													"nativeSrc": "16014:62:12",
													"nodeType": "YulBlock",
													"src": "16014:62:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16036:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16036:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16044:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16044:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16032:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16032:3:12"
																		},
																		"nativeSrc": "16032:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16032:14:12"
																	},
																	{
																		"hexValue": "496e636f727265637420616e737765722034",
																		"kind": "string",
																		"nativeSrc": "16048:20:12",
																		"nodeType": "YulLiteral",
																		"src": "16048:20:12",
																		"type": "",
																		"value": "Incorrect answer 4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16025:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16025:6:12"
																},
																"nativeSrc": "16025:44:12",
																"nodeType": "YulFunctionCall",
																"src": "16025:44:12"
															},
															"nativeSrc": "16025:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "16025:44:12"
														}
													]
												},
												"name": "store_literal_in_memory_68e9596cd0a7b9f571bf50ecf7466a10151c68711345cab90d69efe6597bbe63",
												"nativeSrc": "15908:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16006:6:12",
														"nodeType": "YulTypedName",
														"src": "16006:6:12",
														"type": ""
													}
												],
												"src": "15908:168:12"
											},
											{
												"body": {
													"nativeSrc": "16228:220:12",
													"nodeType": "YulBlock",
													"src": "16228:220:12",
													"statements": [
														{
															"nativeSrc": "16238:74:12",
															"nodeType": "YulAssignment",
															"src": "16238:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16304:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16304:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16309:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16309:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16245:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "16245:58:12"
																},
																"nativeSrc": "16245:67:12",
																"nodeType": "YulFunctionCall",
																"src": "16245:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16238:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16238:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16410:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16410:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68e9596cd0a7b9f571bf50ecf7466a10151c68711345cab90d69efe6597bbe63",
																	"nativeSrc": "16321:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "16321:88:12"
																},
																"nativeSrc": "16321:93:12",
																"nodeType": "YulFunctionCall",
																"src": "16321:93:12"
															},
															"nativeSrc": "16321:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "16321:93:12"
														},
														{
															"nativeSrc": "16423:19:12",
															"nodeType": "YulAssignment",
															"src": "16423:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16434:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16434:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16439:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16439:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16430:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16430:3:12"
																},
																"nativeSrc": "16430:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16430:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16423:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16423:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68e9596cd0a7b9f571bf50ecf7466a10151c68711345cab90d69efe6597bbe63_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16082:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16216:3:12",
														"nodeType": "YulTypedName",
														"src": "16216:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16224:3:12",
														"nodeType": "YulTypedName",
														"src": "16224:3:12",
														"type": ""
													}
												],
												"src": "16082:366:12"
											},
											{
												"body": {
													"nativeSrc": "16625:248:12",
													"nodeType": "YulBlock",
													"src": "16625:248:12",
													"statements": [
														{
															"nativeSrc": "16635:26:12",
															"nodeType": "YulAssignment",
															"src": "16635:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16647:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16647:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16658:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16658:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16643:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16643:3:12"
																},
																"nativeSrc": "16643:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16643:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16635:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16635:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16682:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16682:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16693:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16693:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16678:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16678:3:12"
																		},
																		"nativeSrc": "16678:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16678:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16701:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16701:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16707:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16707:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16697:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16697:3:12"
																		},
																		"nativeSrc": "16697:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16697:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16671:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16671:6:12"
																},
																"nativeSrc": "16671:47:12",
																"nodeType": "YulFunctionCall",
																"src": "16671:47:12"
															},
															"nativeSrc": "16671:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "16671:47:12"
														},
														{
															"nativeSrc": "16727:139:12",
															"nodeType": "YulAssignment",
															"src": "16727:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16861:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16861:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68e9596cd0a7b9f571bf50ecf7466a10151c68711345cab90d69efe6597bbe63_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16735:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "16735:124:12"
																},
																"nativeSrc": "16735:131:12",
																"nodeType": "YulFunctionCall",
																"src": "16735:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16727:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16727:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68e9596cd0a7b9f571bf50ecf7466a10151c68711345cab90d69efe6597bbe63__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16454:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16605:9:12",
														"nodeType": "YulTypedName",
														"src": "16605:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16620:4:12",
														"nodeType": "YulTypedName",
														"src": "16620:4:12",
														"type": ""
													}
												],
												"src": "16454:419:12"
											},
											{
												"body": {
													"nativeSrc": "16985:62:12",
													"nodeType": "YulBlock",
													"src": "16985:62:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17007:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17007:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17015:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17015:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17003:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17003:3:12"
																		},
																		"nativeSrc": "17003:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17003:14:12"
																	},
																	{
																		"hexValue": "496e636f727265637420616e737765722035",
																		"kind": "string",
																		"nativeSrc": "17019:20:12",
																		"nodeType": "YulLiteral",
																		"src": "17019:20:12",
																		"type": "",
																		"value": "Incorrect answer 5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16996:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16996:6:12"
																},
																"nativeSrc": "16996:44:12",
																"nodeType": "YulFunctionCall",
																"src": "16996:44:12"
															},
															"nativeSrc": "16996:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "16996:44:12"
														}
													]
												},
												"name": "store_literal_in_memory_6e8112adc87c1e5a5bdffba84ab292ce541ed4ba337eacc65ef17b25239e16d0",
												"nativeSrc": "16879:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16977:6:12",
														"nodeType": "YulTypedName",
														"src": "16977:6:12",
														"type": ""
													}
												],
												"src": "16879:168:12"
											},
											{
												"body": {
													"nativeSrc": "17199:220:12",
													"nodeType": "YulBlock",
													"src": "17199:220:12",
													"statements": [
														{
															"nativeSrc": "17209:74:12",
															"nodeType": "YulAssignment",
															"src": "17209:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17275:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17275:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17280:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17280:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17216:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "17216:58:12"
																},
																"nativeSrc": "17216:67:12",
																"nodeType": "YulFunctionCall",
																"src": "17216:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17209:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17209:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17381:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17381:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6e8112adc87c1e5a5bdffba84ab292ce541ed4ba337eacc65ef17b25239e16d0",
																	"nativeSrc": "17292:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "17292:88:12"
																},
																"nativeSrc": "17292:93:12",
																"nodeType": "YulFunctionCall",
																"src": "17292:93:12"
															},
															"nativeSrc": "17292:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "17292:93:12"
														},
														{
															"nativeSrc": "17394:19:12",
															"nodeType": "YulAssignment",
															"src": "17394:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17405:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17405:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17410:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17410:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17401:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17401:3:12"
																},
																"nativeSrc": "17401:12:12",
																"nodeType": "YulFunctionCall",
																"src": "17401:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17394:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17394:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6e8112adc87c1e5a5bdffba84ab292ce541ed4ba337eacc65ef17b25239e16d0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17053:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17187:3:12",
														"nodeType": "YulTypedName",
														"src": "17187:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17195:3:12",
														"nodeType": "YulTypedName",
														"src": "17195:3:12",
														"type": ""
													}
												],
												"src": "17053:366:12"
											},
											{
												"body": {
													"nativeSrc": "17596:248:12",
													"nodeType": "YulBlock",
													"src": "17596:248:12",
													"statements": [
														{
															"nativeSrc": "17606:26:12",
															"nodeType": "YulAssignment",
															"src": "17606:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17618:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17618:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17629:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17629:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17614:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17614:3:12"
																},
																"nativeSrc": "17614:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17614:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17606:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17606:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17653:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17653:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17664:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17664:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17649:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17649:3:12"
																		},
																		"nativeSrc": "17649:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17649:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17672:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "17672:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17678:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17678:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17668:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17668:3:12"
																		},
																		"nativeSrc": "17668:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17668:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17642:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17642:6:12"
																},
																"nativeSrc": "17642:47:12",
																"nodeType": "YulFunctionCall",
																"src": "17642:47:12"
															},
															"nativeSrc": "17642:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "17642:47:12"
														},
														{
															"nativeSrc": "17698:139:12",
															"nodeType": "YulAssignment",
															"src": "17698:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17832:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17832:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6e8112adc87c1e5a5bdffba84ab292ce541ed4ba337eacc65ef17b25239e16d0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17706:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "17706:124:12"
																},
																"nativeSrc": "17706:131:12",
																"nodeType": "YulFunctionCall",
																"src": "17706:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17698:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17698:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e8112adc87c1e5a5bdffba84ab292ce541ed4ba337eacc65ef17b25239e16d0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17425:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17576:9:12",
														"nodeType": "YulTypedName",
														"src": "17576:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17591:4:12",
														"nodeType": "YulTypedName",
														"src": "17591:4:12",
														"type": ""
													}
												],
												"src": "17425:419:12"
											},
											{
												"body": {
													"nativeSrc": "17976:206:12",
													"nodeType": "YulBlock",
													"src": "17976:206:12",
													"statements": [
														{
															"nativeSrc": "17986:26:12",
															"nodeType": "YulAssignment",
															"src": "17986:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17998:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17998:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18009:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18009:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17994:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17994:3:12"
																},
																"nativeSrc": "17994:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17994:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17986:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17986:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18066:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18066:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18079:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18079:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18090:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18090:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18075:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18075:3:12"
																		},
																		"nativeSrc": "18075:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18075:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18022:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18022:43:12"
																},
																"nativeSrc": "18022:71:12",
																"nodeType": "YulFunctionCall",
																"src": "18022:71:12"
															},
															"nativeSrc": "18022:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "18022:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18147:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18147:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18160:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18160:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18171:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18171:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18156:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18156:3:12"
																		},
																		"nativeSrc": "18156:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18156:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18103:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18103:43:12"
																},
																"nativeSrc": "18103:72:12",
																"nodeType": "YulFunctionCall",
																"src": "18103:72:12"
															},
															"nativeSrc": "18103:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "18103:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17850:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17940:9:12",
														"nodeType": "YulTypedName",
														"src": "17940:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17952:6:12",
														"nodeType": "YulTypedName",
														"src": "17952:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17960:6:12",
														"nodeType": "YulTypedName",
														"src": "17960:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17971:4:12",
														"nodeType": "YulTypedName",
														"src": "17971:4:12",
														"type": ""
													}
												],
												"src": "17850:332:12"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AshokuCoin_$1651_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AshokuCoin_$1651_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AshokuCoin_$1651_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AshokuCoin_$1651__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AshokuCoin_$1651_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_QuizState_$1350(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_QuizState_$1350(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_QuizState_$1350(value)\n    }\n\n    function convert_t_enum$_QuizState_$1350_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_QuizState_$1350(value)\n    }\n\n    function abi_encode_t_enum$_QuizState_$1350_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_QuizState_$1350_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_QuizState_$1350__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_QuizState_$1350_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_74d31cd5a0f981d114c8b7b13b997b7f4104d83ecf021469195c2e6fe273e612(memPtr) {\n\n        mstore(add(memPtr, 0), \"Quiz already started\")\n\n    }\n\n    function abi_encode_t_stringliteral_74d31cd5a0f981d114c8b7b13b997b7f4104d83ecf021469195c2e6fe273e612_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_74d31cd5a0f981d114c8b7b13b997b7f4104d83ecf021469195c2e6fe273e612(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74d31cd5a0f981d114c8b7b13b997b7f4104d83ecf021469195c2e6fe273e612__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74d31cd5a0f981d114c8b7b13b997b7f4104d83ecf021469195c2e6fe273e612_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6113f27c66be9fe3c34f86efb147343546eef327965cd9666d90ebff6f883d80(memPtr) {\n\n        mstore(add(memPtr, 0), \"Quiz not started\")\n\n    }\n\n    function abi_encode_t_stringliteral_6113f27c66be9fe3c34f86efb147343546eef327965cd9666d90ebff6f883d80_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_6113f27c66be9fe3c34f86efb147343546eef327965cd9666d90ebff6f883d80(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6113f27c66be9fe3c34f86efb147343546eef327965cd9666d90ebff6f883d80__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6113f27c66be9fe3c34f86efb147343546eef327965cd9666d90ebff6f883d80_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bbdbe33ec55f5fd3ff65c62ebfc5c8c611b57e63d612b7f8a86521ceeeabac23(memPtr) {\n\n        mstore(add(memPtr, 0), \"Player has already answered\")\n\n    }\n\n    function abi_encode_t_stringliteral_bbdbe33ec55f5fd3ff65c62ebfc5c8c611b57e63d612b7f8a86521ceeeabac23_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_bbdbe33ec55f5fd3ff65c62ebfc5c8c611b57e63d612b7f8a86521ceeeabac23(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bbdbe33ec55f5fd3ff65c62ebfc5c8c611b57e63d612b7f8a86521ceeeabac23__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bbdbe33ec55f5fd3ff65c62ebfc5c8c611b57e63d612b7f8a86521ceeeabac23_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_5340bde7db8ae904c90cdf5d9f62cdff34386ee2216c16409523907d46f72aa0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect answer 1\")\n\n    }\n\n    function abi_encode_t_stringliteral_5340bde7db8ae904c90cdf5d9f62cdff34386ee2216c16409523907d46f72aa0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_5340bde7db8ae904c90cdf5d9f62cdff34386ee2216c16409523907d46f72aa0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5340bde7db8ae904c90cdf5d9f62cdff34386ee2216c16409523907d46f72aa0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5340bde7db8ae904c90cdf5d9f62cdff34386ee2216c16409523907d46f72aa0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_be0700e5bdf2f4a3f99c0f46642cfa260d65dd8db325c0f55f4146b120a077d0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect answer 2\")\n\n    }\n\n    function abi_encode_t_stringliteral_be0700e5bdf2f4a3f99c0f46642cfa260d65dd8db325c0f55f4146b120a077d0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_be0700e5bdf2f4a3f99c0f46642cfa260d65dd8db325c0f55f4146b120a077d0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_be0700e5bdf2f4a3f99c0f46642cfa260d65dd8db325c0f55f4146b120a077d0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_be0700e5bdf2f4a3f99c0f46642cfa260d65dd8db325c0f55f4146b120a077d0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3a576880600c047ca9851e6f261b487ffa5f3a81013948b0c7c1a1460e555eb5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect answer 3\")\n\n    }\n\n    function abi_encode_t_stringliteral_3a576880600c047ca9851e6f261b487ffa5f3a81013948b0c7c1a1460e555eb5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_3a576880600c047ca9851e6f261b487ffa5f3a81013948b0c7c1a1460e555eb5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3a576880600c047ca9851e6f261b487ffa5f3a81013948b0c7c1a1460e555eb5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3a576880600c047ca9851e6f261b487ffa5f3a81013948b0c7c1a1460e555eb5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68e9596cd0a7b9f571bf50ecf7466a10151c68711345cab90d69efe6597bbe63(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect answer 4\")\n\n    }\n\n    function abi_encode_t_stringliteral_68e9596cd0a7b9f571bf50ecf7466a10151c68711345cab90d69efe6597bbe63_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_68e9596cd0a7b9f571bf50ecf7466a10151c68711345cab90d69efe6597bbe63(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68e9596cd0a7b9f571bf50ecf7466a10151c68711345cab90d69efe6597bbe63__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68e9596cd0a7b9f571bf50ecf7466a10151c68711345cab90d69efe6597bbe63_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6e8112adc87c1e5a5bdffba84ab292ce541ed4ba337eacc65ef17b25239e16d0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect answer 5\")\n\n    }\n\n    function abi_encode_t_stringliteral_6e8112adc87c1e5a5bdffba84ab292ce541ed4ba337eacc65ef17b25239e16d0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_6e8112adc87c1e5a5bdffba84ab292ce541ed4ba337eacc65ef17b25239e16d0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e8112adc87c1e5a5bdffba84ab292ce541ed4ba337eacc65ef17b25239e16d0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e8112adc87c1e5a5bdffba84ab292ce541ed4ba337eacc65ef17b25239e16d0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9206815F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9206815F EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xAA4339CB EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x194 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x87E88D0 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x4C3415E6 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x5B67BDB4 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x102 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x1D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10A PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x153 SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST PUSH2 0x314 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0xA5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0xA80 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0xB0A JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F2 JUMPI PUSH2 0x1F1 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x213 JUMPI PUSH2 0x212 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24A SWAP1 PUSH2 0x1126 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x278 JUMPI PUSH2 0x277 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0xB042F1D4D3B82EFC559238FC1E12537FCDB79CCCEF346A003202925D94FF3133 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x2D9 PUSH0 PUSH2 0xB91 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x31C PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x330 JUMPI PUSH2 0x32F PUSH2 0xDBE JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x351 JUMPI PUSH2 0x350 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x391 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x388 SWAP1 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x412 SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F727265637431000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F727265637432000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F727265637433000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F727265637434000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F727265637435000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP SWAP1 POP DUP1 PUSH0 PUSH1 0x5 DUP2 LT PUSH2 0x561 JUMPI PUSH2 0x560 PUSH2 0x1214 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x5F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP1 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x5 DUP2 LT PUSH2 0x607 JUMPI PUSH2 0x606 PUSH2 0x1214 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x643 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x699 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x690 SWAP1 PUSH2 0x1375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x5 DUP2 LT PUSH2 0x6AD JUMPI PUSH2 0x6AC PUSH2 0x1214 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x736 SWAP1 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x5 DUP2 LT PUSH2 0x753 JUMPI PUSH2 0x752 PUSH2 0x1214 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x768 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x78F SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x7E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DC SWAP1 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x5 DUP2 LT PUSH2 0x7F9 JUMPI PUSH2 0x7F8 PUSH2 0x1214 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x80E SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x882 SWAP1 PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP3 SWAP2 SWAP1 PUSH2 0x14CB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9F1 JUMPI PUSH2 0x9F0 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0xE5F4AFC88CB448BAD8AB76D9EA0A66B123681B66F88C8F8AEDD19526D742FAD5 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH2 0xA4A SWAP3 SWAP2 SWAP1 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA88 PUSH2 0xB0A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEF SWAP2 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xB91 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB12 PUSH2 0xC52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB30 PUSH2 0x2DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB8F JUMPI PUSH2 0xB53 PUSH2 0xC52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB86 SWAP2 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC9B PUSH2 0xC96 PUSH2 0xC91 DUP5 PUSH2 0xC59 JUMP JUMPDEST PUSH2 0xC78 JUMP JUMPDEST PUSH2 0xC59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCAC DUP3 PUSH2 0xC81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCBD DUP3 PUSH2 0xCA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCCD DUP2 PUSH2 0xCB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE6 PUSH0 DUP4 ADD DUP5 PUSH2 0xCC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xD07 DUP3 PUSH2 0xC59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD17 DUP2 PUSH2 0xCFD JUMP JUMPDEST DUP2 EQ PUSH2 0xD21 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD32 DUP2 PUSH2 0xD0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD4D JUMPI PUSH2 0xD4C PUSH2 0xCF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD5A DUP5 DUP3 DUP6 ADD PUSH2 0xD24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD77 DUP2 PUSH2 0xD63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD90 PUSH0 DUP4 ADD DUP5 PUSH2 0xD6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD9F DUP2 PUSH2 0xCFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB8 PUSH0 DUP4 ADD DUP5 PUSH2 0xD96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xDFC JUMPI PUSH2 0xDFB PUSH2 0xDBE JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0xE0C DUP3 PUSH2 0xDEB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE1B DUP3 PUSH2 0xDFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE2B DUP2 PUSH2 0xE11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE44 PUSH0 DUP4 ADD DUP5 PUSH2 0xE22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xE98 DUP3 PUSH2 0xE52 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xEB7 JUMPI PUSH2 0xEB6 PUSH2 0xE62 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEC9 PUSH2 0xCEC JUMP JUMPDEST SWAP1 POP PUSH2 0xED5 DUP3 DUP3 PUSH2 0xE8F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xEF4 JUMPI PUSH2 0xEF3 PUSH2 0xE62 JUMP JUMPDEST JUMPDEST PUSH2 0xEFD DUP3 PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF2A PUSH2 0xF25 DUP5 PUSH2 0xEDA JUMP JUMPDEST PUSH2 0xEC0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xF46 JUMPI PUSH2 0xF45 PUSH2 0xE4E JUMP JUMPDEST JUMPDEST PUSH2 0xF51 DUP5 DUP3 DUP6 PUSH2 0xF0A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF6D JUMPI PUSH2 0xF6C PUSH2 0xE4A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF7D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xFA0 JUMPI PUSH2 0xF9F PUSH2 0xCF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFAD DUP10 DUP3 DUP11 ADD PUSH2 0xD24 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFCE JUMPI PUSH2 0xFCD PUSH2 0xCF9 JUMP JUMPDEST JUMPDEST PUSH2 0xFDA DUP10 DUP3 DUP11 ADD PUSH2 0xF59 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFFB JUMPI PUSH2 0xFFA PUSH2 0xCF9 JUMP JUMPDEST JUMPDEST PUSH2 0x1007 DUP10 DUP3 DUP11 ADD PUSH2 0xF59 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1028 JUMPI PUSH2 0x1027 PUSH2 0xCF9 JUMP JUMPDEST JUMPDEST PUSH2 0x1034 DUP10 DUP3 DUP11 ADD PUSH2 0xF59 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1055 JUMPI PUSH2 0x1054 PUSH2 0xCF9 JUMP JUMPDEST JUMPDEST PUSH2 0x1061 DUP10 DUP3 DUP11 ADD PUSH2 0xF59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1082 JUMPI PUSH2 0x1081 PUSH2 0xCF9 JUMP JUMPDEST JUMPDEST PUSH2 0x108E DUP10 DUP3 DUP11 ADD PUSH2 0xF59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10AD DUP2 PUSH2 0x109B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10C6 PUSH0 DUP4 ADD DUP5 PUSH2 0x10A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5175697A20616C72656164792073746172746564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1110 PUSH1 0x14 DUP4 PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP PUSH2 0x111B DUP3 PUSH2 0x10DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x113D DUP2 PUSH2 0x1104 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5175697A206E6F74207374617274656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1178 PUSH1 0x10 DUP4 PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1183 DUP3 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11A5 DUP2 PUSH2 0x116C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C617965722068617320616C726561647920616E7377657265640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11E0 PUSH1 0x1B DUP4 PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP PUSH2 0x11EB DUP3 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x120D DUP2 PUSH2 0x11D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1272 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1257 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1287 DUP3 PUSH2 0x1241 JUMP JUMPDEST PUSH2 0x1291 DUP2 DUP6 PUSH2 0x124B JUMP JUMPDEST SWAP4 POP PUSH2 0x12A1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1255 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12B8 DUP3 DUP5 PUSH2 0x127D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E636F727265637420616E7377657220310000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12F7 PUSH1 0x12 DUP4 PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1302 DUP3 PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1324 DUP2 PUSH2 0x12EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420616E7377657220320000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x135F PUSH1 0x12 DUP4 PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP PUSH2 0x136A DUP3 PUSH2 0x132B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x138C DUP2 PUSH2 0x1353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420616E7377657220330000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13C7 PUSH1 0x12 DUP4 PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP PUSH2 0x13D2 DUP3 PUSH2 0x1393 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13F4 DUP2 PUSH2 0x13BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420616E7377657220340000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x142F PUSH1 0x12 DUP4 PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP PUSH2 0x143A DUP3 PUSH2 0x13FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x145C DUP2 PUSH2 0x1423 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420616E7377657220350000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1497 PUSH1 0x12 DUP4 PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP PUSH2 0x14A2 DUP3 PUSH2 0x1463 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14C4 DUP2 PUSH2 0x148B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14DE PUSH0 DUP4 ADD DUP6 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0x14EB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT SHR MSIZE JUMP PUSH29 0x45C2C00BC9D7CDF4A654251FF50CFCF8C862BAC1611FE5745E2FC26473 PUSH16 0x6C634300081700330000000000000000 ",
							"sourceMap": "140:2315:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;262:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;962:136;;;:::i;:::-;;373:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:2;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;227:26:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1106:1346;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;297:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;325:39:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;262:26;;;;;;;;;;;;;:::o;962:136::-;1531:13:2;:11;:13::i;:::-;700:20:10::1;687:33;;;;;;;;:::i;:::-;;:9;;;;;;;;;;;:33;;;;;;;;:::i;:::-;;;679:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1044:17:::2;1032:9;;:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1077:13;;;;;;;;;;962:136::o:0;373:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;227:26:10:-;;;;;;;;;;;;;:::o;1106:1346::-;1531:13:2;:11;:13::i;:::-;572:17:10::1;559:30;;;;;;;;:::i;:::-;;:9;;;;;;;;;;;:30;;;;;;;;:::i;:::-;;;551:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1309:11:::2;:19;1321:6;1309:19;;;;;;;;;;;;;;;;;;;;;;;;;1308:20;1300:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1451:31;:94;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;::::0;::::2;;::::0;::::2;;1633:14;1648:1;1633:17;;;;;;;:::i;:::-;;;;;;1616:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;1606:46;;;;;;1593:7;1576:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;1566:36;;;;;;:86;1558:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;1761:14;1776:1;1761:17;;;;;;;:::i;:::-;;;;;;1744:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;1734:46;;;;;;1721:7;1704:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;1694:36;;;;;;:86;1686:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;1889:14;1904:1;1889:17;;;;;;;:::i;:::-;;;;;;1872:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;1862:46;;;;;;1849:7;1832:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;1822:36;;;;;;:86;1814:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;2017:14;2032:1;2017:17;;;;;;;:::i;:::-;;;;;;2000:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;1990:46;;;;;;1977:7;1960:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;1950:36;;;;;;:86;1942:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;2145:14;2160:1;2145:17;;;;;;;:::i;:::-;;;;;;2128:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;2118:46;;;;;;2105:7;2088:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;2078:36;;;;;;:86;2070:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;2209:6;2200;;:15;;;;;;;;;;;;;;;;;;2248:4;2226:11;:19;2238:6;2226:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;2320:8;;;;;;;;;;;:13;;;2334:6;;;;;;;;;;;2342:12;;2320:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;2380:15;2368:9;;:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2413:31;2423:6;;;;;;;;;;;2431:12;;2413:31;;;;;;;:::i;:::-;;;;;;;;1289:1163;1106:1346:::0;;;;;;:::o;297:21::-;;;;;;;;;;;;;:::o;2543:215:2:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;325:39:10:-;;;;:::o;1796:162:2:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;7:126:12:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:145::-;554:9;587:37;618:5;587:37;:::i;:::-;574:50;;485:145;;;:::o;636:169::-;742:56;792:5;742:56;:::i;:::-;737:3;730:69;636:169;;:::o;811:260::-;923:4;961:2;950:9;946:18;938:26;;974:90;1061:1;1050:9;1046:17;1037:6;974:90;:::i;:::-;811:260;;;;:::o;1077:75::-;1110:6;1143:2;1137:9;1127:19;;1077:75;:::o;1158:117::-;1267:1;1264;1257:12;1281:117;1390:1;1387;1380:12;1404:96;1441:7;1470:24;1488:5;1470:24;:::i;:::-;1459:35;;1404:96;;;:::o;1506:122::-;1579:24;1597:5;1579:24;:::i;:::-;1572:5;1569:35;1559:63;;1618:1;1615;1608:12;1559:63;1506:122;:::o;1634:139::-;1680:5;1718:6;1705:20;1696:29;;1734:33;1761:5;1734:33;:::i;:::-;1634:139;;;;:::o;1779:329::-;1838:6;1887:2;1875:9;1866:7;1862:23;1858:32;1855:119;;;1893:79;;:::i;:::-;1855:119;2013:1;2038:53;2083:7;2074:6;2063:9;2059:22;2038:53;:::i;:::-;2028:63;;1984:117;1779:329;;;;:::o;2114:90::-;2148:7;2191:5;2184:13;2177:21;2166:32;;2114:90;;;:::o;2210:109::-;2291:21;2306:5;2291:21;:::i;:::-;2286:3;2279:34;2210:109;;:::o;2325:210::-;2412:4;2450:2;2439:9;2435:18;2427:26;;2463:65;2525:1;2514:9;2510:17;2501:6;2463:65;:::i;:::-;2325:210;;;;:::o;2541:118::-;2628:24;2646:5;2628:24;:::i;:::-;2623:3;2616:37;2541:118;;:::o;2665:222::-;2758:4;2796:2;2785:9;2781:18;2773:26;;2809:71;2877:1;2866:9;2862:17;2853:6;2809:71;:::i;:::-;2665:222;;;;:::o;2893:180::-;2941:77;2938:1;2931:88;3038:4;3035:1;3028:15;3062:4;3059:1;3052:15;3079:119;3166:1;3159:5;3156:12;3146:46;;3172:18;;:::i;:::-;3146:46;3079:119;:::o;3204:139::-;3255:7;3284:5;3273:16;;3290:47;3331:5;3290:47;:::i;:::-;3204:139;;;:::o;3349:::-;3411:9;3444:38;3476:5;3444:38;:::i;:::-;3431:51;;3349:139;;;:::o;3494:155::-;3593:49;3636:5;3593:49;:::i;:::-;3588:3;3581:62;3494:155;;:::o;3655:246::-;3760:4;3798:2;3787:9;3783:18;3775:26;;3811:83;3891:1;3880:9;3876:17;3867:6;3811:83;:::i;:::-;3655:246;;;;:::o;3907:117::-;4016:1;4013;4006:12;4030:117;4139:1;4136;4129:12;4153:102;4194:6;4245:2;4241:7;4236:2;4229:5;4225:14;4221:28;4211:38;;4153:102;;;:::o;4261:180::-;4309:77;4306:1;4299:88;4406:4;4403:1;4396:15;4430:4;4427:1;4420:15;4447:281;4530:27;4552:4;4530:27;:::i;:::-;4522:6;4518:40;4660:6;4648:10;4645:22;4624:18;4612:10;4609:34;4606:62;4603:88;;;4671:18;;:::i;:::-;4603:88;4711:10;4707:2;4700:22;4490:238;4447:281;;:::o;4734:129::-;4768:6;4795:20;;:::i;:::-;4785:30;;4824:33;4852:4;4844:6;4824:33;:::i;:::-;4734:129;;;:::o;4869:308::-;4931:4;5021:18;5013:6;5010:30;5007:56;;;5043:18;;:::i;:::-;5007:56;5081:29;5103:6;5081:29;:::i;:::-;5073:37;;5165:4;5159;5155:15;5147:23;;4869:308;;;:::o;5183:146::-;5280:6;5275:3;5270;5257:30;5321:1;5312:6;5307:3;5303:16;5296:27;5183:146;;;:::o;5335:425::-;5413:5;5438:66;5454:49;5496:6;5454:49;:::i;:::-;5438:66;:::i;:::-;5429:75;;5527:6;5520:5;5513:21;5565:4;5558:5;5554:16;5603:3;5594:6;5589:3;5585:16;5582:25;5579:112;;;5610:79;;:::i;:::-;5579:112;5700:54;5747:6;5742:3;5737;5700:54;:::i;:::-;5419:341;5335:425;;;;;:::o;5780:340::-;5836:5;5885:3;5878:4;5870:6;5866:17;5862:27;5852:122;;5893:79;;:::i;:::-;5852:122;6010:6;5997:20;6035:79;6110:3;6102:6;6095:4;6087:6;6083:17;6035:79;:::i;:::-;6026:88;;5842:278;5780:340;;;;:::o;6126:1957::-;6280:6;6288;6296;6304;6312;6320;6369:3;6357:9;6348:7;6344:23;6340:33;6337:120;;;6376:79;;:::i;:::-;6337:120;6496:1;6521:53;6566:7;6557:6;6546:9;6542:22;6521:53;:::i;:::-;6511:63;;6467:117;6651:2;6640:9;6636:18;6623:32;6682:18;6674:6;6671:30;6668:117;;;6704:79;;:::i;:::-;6668:117;6809:63;6864:7;6855:6;6844:9;6840:22;6809:63;:::i;:::-;6799:73;;6594:288;6949:2;6938:9;6934:18;6921:32;6980:18;6972:6;6969:30;6966:117;;;7002:79;;:::i;:::-;6966:117;7107:63;7162:7;7153:6;7142:9;7138:22;7107:63;:::i;:::-;7097:73;;6892:288;7247:2;7236:9;7232:18;7219:32;7278:18;7270:6;7267:30;7264:117;;;7300:79;;:::i;:::-;7264:117;7405:63;7460:7;7451:6;7440:9;7436:22;7405:63;:::i;:::-;7395:73;;7190:288;7545:3;7534:9;7530:19;7517:33;7577:18;7569:6;7566:30;7563:117;;;7599:79;;:::i;:::-;7563:117;7704:63;7759:7;7750:6;7739:9;7735:22;7704:63;:::i;:::-;7694:73;;7488:289;7844:3;7833:9;7829:19;7816:33;7876:18;7868:6;7865:30;7862:117;;;7898:79;;:::i;:::-;7862:117;8003:63;8058:7;8049:6;8038:9;8034:22;8003:63;:::i;:::-;7993:73;;7787:289;6126:1957;;;;;;;;:::o;8089:77::-;8126:7;8155:5;8144:16;;8089:77;;;:::o;8172:118::-;8259:24;8277:5;8259:24;:::i;:::-;8254:3;8247:37;8172:118;;:::o;8296:222::-;8389:4;8427:2;8416:9;8412:18;8404:26;;8440:71;8508:1;8497:9;8493:17;8484:6;8440:71;:::i;:::-;8296:222;;;;:::o;8524:169::-;8608:11;8642:6;8637:3;8630:19;8682:4;8677:3;8673:14;8658:29;;8524:169;;;;:::o;8699:170::-;8839:22;8835:1;8827:6;8823:14;8816:46;8699:170;:::o;8875:366::-;9017:3;9038:67;9102:2;9097:3;9038:67;:::i;:::-;9031:74;;9114:93;9203:3;9114:93;:::i;:::-;9232:2;9227:3;9223:12;9216:19;;8875:366;;;:::o;9247:419::-;9413:4;9451:2;9440:9;9436:18;9428:26;;9500:9;9494:4;9490:20;9486:1;9475:9;9471:17;9464:47;9528:131;9654:4;9528:131;:::i;:::-;9520:139;;9247:419;;;:::o;9672:166::-;9812:18;9808:1;9800:6;9796:14;9789:42;9672:166;:::o;9844:366::-;9986:3;10007:67;10071:2;10066:3;10007:67;:::i;:::-;10000:74;;10083:93;10172:3;10083:93;:::i;:::-;10201:2;10196:3;10192:12;10185:19;;9844:366;;;:::o;10216:419::-;10382:4;10420:2;10409:9;10405:18;10397:26;;10469:9;10463:4;10459:20;10455:1;10444:9;10440:17;10433:47;10497:131;10623:4;10497:131;:::i;:::-;10489:139;;10216:419;;;:::o;10641:177::-;10781:29;10777:1;10769:6;10765:14;10758:53;10641:177;:::o;10824:366::-;10966:3;10987:67;11051:2;11046:3;10987:67;:::i;:::-;10980:74;;11063:93;11152:3;11063:93;:::i;:::-;11181:2;11176:3;11172:12;11165:19;;10824:366;;;:::o;11196:419::-;11362:4;11400:2;11389:9;11385:18;11377:26;;11449:9;11443:4;11439:20;11435:1;11424:9;11420:17;11413:47;11477:131;11603:4;11477:131;:::i;:::-;11469:139;;11196:419;;;:::o;11621:180::-;11669:77;11666:1;11659:88;11766:4;11763:1;11756:15;11790:4;11787:1;11780:15;11807:99;11859:6;11893:5;11887:12;11877:22;;11807:99;;;:::o;11912:148::-;12014:11;12051:3;12036:18;;11912:148;;;;:::o;12066:246::-;12147:1;12157:113;12171:6;12168:1;12165:13;12157:113;;;12256:1;12251:3;12247:11;12241:18;12237:1;12232:3;12228:11;12221:39;12193:2;12190:1;12186:10;12181:15;;12157:113;;;12304:1;12295:6;12290:3;12286:16;12279:27;12128:184;12066:246;;;:::o;12318:390::-;12424:3;12452:39;12485:5;12452:39;:::i;:::-;12507:89;12589:6;12584:3;12507:89;:::i;:::-;12500:96;;12605:65;12663:6;12658:3;12651:4;12644:5;12640:16;12605:65;:::i;:::-;12695:6;12690:3;12686:16;12679:23;;12428:280;12318:390;;;;:::o;12714:275::-;12846:3;12868:95;12959:3;12950:6;12868:95;:::i;:::-;12861:102;;12980:3;12973:10;;12714:275;;;;:::o;12995:168::-;13135:20;13131:1;13123:6;13119:14;13112:44;12995:168;:::o;13169:366::-;13311:3;13332:67;13396:2;13391:3;13332:67;:::i;:::-;13325:74;;13408:93;13497:3;13408:93;:::i;:::-;13526:2;13521:3;13517:12;13510:19;;13169:366;;;:::o;13541:419::-;13707:4;13745:2;13734:9;13730:18;13722:26;;13794:9;13788:4;13784:20;13780:1;13769:9;13765:17;13758:47;13822:131;13948:4;13822:131;:::i;:::-;13814:139;;13541:419;;;:::o;13966:168::-;14106:20;14102:1;14094:6;14090:14;14083:44;13966:168;:::o;14140:366::-;14282:3;14303:67;14367:2;14362:3;14303:67;:::i;:::-;14296:74;;14379:93;14468:3;14379:93;:::i;:::-;14497:2;14492:3;14488:12;14481:19;;14140:366;;;:::o;14512:419::-;14678:4;14716:2;14705:9;14701:18;14693:26;;14765:9;14759:4;14755:20;14751:1;14740:9;14736:17;14729:47;14793:131;14919:4;14793:131;:::i;:::-;14785:139;;14512:419;;;:::o;14937:168::-;15077:20;15073:1;15065:6;15061:14;15054:44;14937:168;:::o;15111:366::-;15253:3;15274:67;15338:2;15333:3;15274:67;:::i;:::-;15267:74;;15350:93;15439:3;15350:93;:::i;:::-;15468:2;15463:3;15459:12;15452:19;;15111:366;;;:::o;15483:419::-;15649:4;15687:2;15676:9;15672:18;15664:26;;15736:9;15730:4;15726:20;15722:1;15711:9;15707:17;15700:47;15764:131;15890:4;15764:131;:::i;:::-;15756:139;;15483:419;;;:::o;15908:168::-;16048:20;16044:1;16036:6;16032:14;16025:44;15908:168;:::o;16082:366::-;16224:3;16245:67;16309:2;16304:3;16245:67;:::i;:::-;16238:74;;16321:93;16410:3;16321:93;:::i;:::-;16439:2;16434:3;16430:12;16423:19;;16082:366;;;:::o;16454:419::-;16620:4;16658:2;16647:9;16643:18;16635:26;;16707:9;16701:4;16697:20;16693:1;16682:9;16678:17;16671:47;16735:131;16861:4;16735:131;:::i;:::-;16727:139;;16454:419;;;:::o;16879:168::-;17019:20;17015:1;17007:6;17003:14;16996:44;16879:168;:::o;17053:366::-;17195:3;17216:67;17280:2;17275:3;17216:67;:::i;:::-;17209:74;;17292:93;17381:3;17292:93;:::i;:::-;17410:2;17405:3;17401:12;17394:19;;17053:366;;;:::o;17425:419::-;17591:4;17629:2;17618:9;17614:18;17606:26;;17678:9;17672:4;17668:20;17664:1;17653:9;17649:17;17642:47;17706:131;17832:4;17706:131;:::i;:::-;17698:139;;17425:419;;;:::o;17850:332::-;17971:4;18009:2;17998:9;17994:18;17986:26;;18022:71;18090:1;18079:9;18075:17;18066:6;18022:71;:::i;:::-;18103:72;18171:2;18160:9;18156:18;18147:6;18103:72;:::i;:::-;17850:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1083200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acsToken()": "infinite",
								"endQuiz(address,string,string,string,string,string)": "infinite",
								"hasAnswered(address)": "2878",
								"owner()": "2604",
								"quizState()": "2604",
								"renounceOwnership()": "infinite",
								"rewardAmount()": "2513",
								"startQuiz()": "infinite",
								"transferOwnership(address)": "infinite",
								"winner()": "2552"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 140,
									"end": 2455,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 140,
									"end": 2455,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 140,
									"end": 2455,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 355,
									"end": 364,
									"name": "PUSH",
									"source": 10,
									"value": "6F05B59D3B20000"
								},
								{
									"begin": 325,
									"end": 364,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 325,
									"end": 364,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 954,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 954,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 954,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 773,
									"end": 954,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 773,
									"end": 954,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 773,
									"end": 954,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 773,
									"end": 954,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 773,
									"end": 954,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 840,
									"end": 852,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 887,
									"end": 902,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 865,
									"end": 873,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 865,
									"end": 873,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 865,
									"end": 903,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 865,
									"end": 903,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 865,
									"end": 903,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 865,
									"end": 903,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 865,
									"end": 903,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 865,
									"end": 903,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 865,
									"end": 903,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 865,
									"end": 903,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 865,
									"end": 903,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 865,
									"end": 903,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 865,
									"end": 903,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 865,
									"end": 903,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 865,
									"end": 903,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 865,
									"end": 903,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 865,
									"end": 903,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 865,
									"end": 903,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 865,
									"end": 903,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 865,
									"end": 903,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 926,
									"end": 946,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 914,
									"end": 923,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 914,
									"end": 923,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 914,
									"end": 946,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 914,
									"end": 946,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 773,
									"end": 954,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 140,
									"end": 2455,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 140,
									"end": 2455,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1710,
									"end": 1890,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 1710,
									"end": 1890,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1758,
									"end": 1835,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1836,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1855,
									"end": 1859,
									"name": "PUSH",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1852,
									"end": 1853,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1845,
									"end": 1860,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1879,
									"end": 1883,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1876,
									"end": 1877,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1884,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 140,
									"end": 2455,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 140,
									"end": 2455,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 140,
									"end": 2455,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 2455,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 140,
									"end": 2455,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 2455,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 2455,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 140,
									"end": 2455,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 2455,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220191c59567c45c2c00bc9d7cdf4a654251ff50cfcf8c862bac1611fe5745e2fc264736f6c63430008170033",
									".code": [
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "9206815F"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "9206815F"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "AA4339CB"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "DFBF53AE"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "F7B2A7BE"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "87E88D0"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "4C3415E6"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "5B67BDB4"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 140,
											"end": 2455,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 262,
											"end": 288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 262,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 262,
											"end": 288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 262,
											"end": 288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 288,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 262,
											"end": 288,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 262,
											"end": 288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 262,
											"end": 288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 288,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 962,
											"end": 1098,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 962,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 962,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 962,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 962,
											"end": 1098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 962,
											"end": 1098,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 962,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 962,
											"end": 1098,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 373,
											"end": 416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 373,
											"end": 416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 373,
											"end": 416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 227,
											"end": 253,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 227,
											"end": 253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 227,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 227,
											"end": 253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 227,
											"end": 253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 253,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 227,
											"end": 253,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 227,
											"end": 253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 227,
											"end": 253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 253,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1106,
											"end": 2452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1106,
											"end": 2452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 297,
											"end": 318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 297,
											"end": 318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 325,
											"end": 364,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 325,
											"end": 364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 325,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 325,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 325,
											"end": 364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 325,
											"end": 364,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 325,
											"end": 364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 325,
											"end": 364,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 364,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 325,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 325,
											"end": 364,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 325,
											"end": 364,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 325,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 325,
											"end": 364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 325,
											"end": 364,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 325,
											"end": 364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 325,
											"end": 364,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 364,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 325,
											"end": 364,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 325,
											"end": 364,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 325,
											"end": 364,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 325,
											"end": 364,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 325,
											"end": 364,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 262,
											"end": 288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 288,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 288,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 262,
											"end": 288,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 262,
											"end": 288,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 262,
											"end": 288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 962,
											"end": 1098,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 962,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 700,
											"end": 720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 687,
											"end": 720,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 687,
											"end": 696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 687,
											"end": 696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 687,
											"end": 696,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 687,
											"end": 696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 687,
											"end": 696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 687,
											"end": 696,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 687,
											"end": 696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 687,
											"end": 696,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 687,
											"end": 696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 687,
											"end": 696,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 687,
											"end": 720,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 687,
											"end": 720,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 679,
											"end": 745,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1061,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1041,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1041,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1032,
											"end": 1061,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1061,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1077,
											"end": 1090,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "B042F1D4D3B82EFC559238FC1E12537FCDB79CCCEF346A003202925D94FF3133"
										},
										{
											"begin": 1077,
											"end": 1090,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1090,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1077,
											"end": 1090,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1090,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1077,
											"end": 1090,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1077,
											"end": 1090,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1077,
											"end": 1090,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1077,
											"end": 1090,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1077,
											"end": 1090,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 962,
											"end": 1098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 373,
											"end": 416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 227,
											"end": 253,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 227,
											"end": 253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 253,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 227,
											"end": 253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 227,
											"end": 253,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 227,
											"end": 253,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 227,
											"end": 253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 572,
											"end": 589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 559,
											"end": 589,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 559,
											"end": 568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 559,
											"end": 568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 559,
											"end": 568,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 559,
											"end": 568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 559,
											"end": 568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 559,
											"end": 568,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 559,
											"end": 568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 559,
											"end": 568,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 559,
											"end": 568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 559,
											"end": 568,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 559,
											"end": 589,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 559,
											"end": 589,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 551,
											"end": 610,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 551,
											"end": 610,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 1327,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1309,
											"end": 1328,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1308,
											"end": 1328,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1300,
											"end": 1360,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1300,
											"end": 1360,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1482,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "436F727265637431000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "436F727265637432000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "436F727265637433000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "436F727265637434000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "436F727265637435000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1545,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1647,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1648,
											"end": 1649,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1633,
											"end": 1650,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1650,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1650,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1633,
											"end": 1650,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1650,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1633,
											"end": 1650,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1633,
											"end": 1650,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1650,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1633,
											"end": 1650,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1650,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1633,
											"end": 1650,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1633,
											"end": 1650,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1650,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1650,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1616,
											"end": 1651,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1651,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1652,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1652,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1652,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1652,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1652,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1593,
											"end": 1600,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1576,
											"end": 1601,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1576,
											"end": 1601,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1602,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1602,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1602,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1566,
											"end": 1602,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1602,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1652,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1558,
											"end": 1675,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1558,
											"end": 1675,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1775,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1776,
											"end": 1777,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1761,
											"end": 1778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1761,
											"end": 1778,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1778,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1778,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1761,
											"end": 1778,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1778,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1761,
											"end": 1778,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1761,
											"end": 1778,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1778,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1761,
											"end": 1778,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1778,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1761,
											"end": 1778,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1778,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1778,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1778,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1744,
											"end": 1779,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1744,
											"end": 1779,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1734,
											"end": 1780,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1734,
											"end": 1780,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1734,
											"end": 1780,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1734,
											"end": 1780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1780,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1734,
											"end": 1780,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1721,
											"end": 1728,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1704,
											"end": 1729,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1729,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1694,
											"end": 1730,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1694,
											"end": 1730,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1694,
											"end": 1730,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1694,
											"end": 1730,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1694,
											"end": 1730,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1694,
											"end": 1730,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1694,
											"end": 1780,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1686,
											"end": 1803,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1686,
											"end": 1803,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1903,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1905,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1889,
											"end": 1906,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1889,
											"end": 1906,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1906,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1906,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1889,
											"end": 1906,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1906,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1889,
											"end": 1906,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1889,
											"end": 1906,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1906,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1889,
											"end": 1906,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1906,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1889,
											"end": 1906,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1906,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1889,
											"end": 1906,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1906,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1906,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1872,
											"end": 1907,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1872,
											"end": 1907,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1862,
											"end": 1908,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1862,
											"end": 1908,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1862,
											"end": 1908,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1862,
											"end": 1908,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1862,
											"end": 1908,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1862,
											"end": 1908,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1856,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1832,
											"end": 1857,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1832,
											"end": 1857,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1858,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1858,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1858,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1858,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1822,
											"end": 1858,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1858,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1908,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1814,
											"end": 1931,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1814,
											"end": 1931,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2031,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2033,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2017,
											"end": 2034,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2017,
											"end": 2034,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2034,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2034,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2017,
											"end": 2034,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2034,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 2017,
											"end": 2034,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 2017,
											"end": 2034,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2034,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 2017,
											"end": 2034,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2034,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2017,
											"end": 2034,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2034,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2034,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2034,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2034,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 2000,
											"end": 2035,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2035,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2036,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2036,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2036,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2036,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2036,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1977,
											"end": 1984,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1960,
											"end": 1985,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1985,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 1986,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 1986,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 1986,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 1986,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1950,
											"end": 1986,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 1986,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 2036,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1942,
											"end": 2059,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 1942,
											"end": 2059,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2159,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2161,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2145,
											"end": 2162,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2145,
											"end": 2162,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2162,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2162,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2145,
											"end": 2162,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2162,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2145,
											"end": 2162,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 2145,
											"end": 2162,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2162,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2145,
											"end": 2162,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2162,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2145,
											"end": 2162,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2162,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2162,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2162,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2162,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 2128,
											"end": 2163,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2128,
											"end": 2163,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2164,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2164,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2164,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2164,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2164,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2164,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2105,
											"end": 2112,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 2088,
											"end": 2113,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2088,
											"end": 2113,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2114,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2114,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2114,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2114,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2114,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2114,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2164,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 2070,
											"end": 2187,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2070,
											"end": 2187,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2215,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2206,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2200,
											"end": 2206,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 2,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2215,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2248,
											"end": 2252,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2226,
											"end": 2237,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2226,
											"end": 2245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2244,
											"modifierDepth": 2,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2226,
											"end": 2245,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2226,
											"end": 2245,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2245,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2245,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2226,
											"end": 2245,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2245,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2245,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2245,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2226,
											"end": 2245,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2226,
											"end": 2245,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2226,
											"end": 2252,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2226,
											"end": 2252,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2226,
											"end": 2252,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"modifierDepth": 2,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2328,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2320,
											"end": 2328,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2328,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2328,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2328,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2328,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2320,
											"end": 2328,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2328,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2328,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2328,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2320,
											"end": 2328,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2333,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2320,
											"end": 2333,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2333,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40C10F19"
										},
										{
											"begin": 2334,
											"end": 2340,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2334,
											"end": 2340,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2340,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2340,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2340,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2340,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2334,
											"end": 2340,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2340,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2340,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2340,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2334,
											"end": 2340,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2342,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2342,
											"end": 2354,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 2320,
											"end": 2355,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2355,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2355,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2355,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2380,
											"end": 2395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2368,
											"end": 2377,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2377,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2368,
											"end": 2395,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2395,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2413,
											"end": 2444,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "E5F4AFC88CB448BAD8AB76D9EA0A66B123681B66F88C8F8AEDD19526D742FAD5"
										},
										{
											"begin": 2423,
											"end": 2429,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2423,
											"end": 2429,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2429,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2429,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2429,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2429,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2423,
											"end": 2429,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2429,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2429,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2429,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2423,
											"end": 2429,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2443,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2431,
											"end": 2443,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2413,
											"end": 2444,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2413,
											"end": 2444,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2413,
											"end": 2444,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 2413,
											"end": 2444,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2413,
											"end": 2444,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2413,
											"end": 2444,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2413,
											"end": 2444,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 2413,
											"end": 2444,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2413,
											"end": 2444,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 2413,
											"end": 2444,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2413,
											"end": 2444,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2413,
											"end": 2444,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2413,
											"end": 2444,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2413,
											"end": 2444,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2413,
											"end": 2444,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2413,
											"end": 2444,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2413,
											"end": 2444,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 1289,
											"end": 2452,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 2452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 297,
											"end": 318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 325,
											"end": 364,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 325,
											"end": 364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 325,
											"end": 364,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 325,
											"end": 364,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 325,
											"end": 364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 325,
											"end": 364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 485,
											"end": 630,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 485,
											"end": 630,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 563,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 618,
											"end": 623,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 587,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 587,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 587,
											"end": 624,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 587,
											"end": 624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 574,
											"end": 624,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 574,
											"end": 624,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 485,
											"end": 630,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 485,
											"end": 630,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 485,
											"end": 630,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 485,
											"end": 630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 636,
											"end": 805,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 636,
											"end": 805,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 742,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 792,
											"end": 797,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 742,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 742,
											"end": 798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 742,
											"end": 798,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 742,
											"end": 798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 737,
											"end": 740,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 730,
											"end": 799,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 636,
											"end": 805,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 636,
											"end": 805,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 636,
											"end": 805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 811,
											"end": 1071,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 811,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 923,
											"end": 927,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 963,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 950,
											"end": 959,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 946,
											"end": 964,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 938,
											"end": 964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 938,
											"end": 964,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 974,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 1061,
											"end": 1062,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1059,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1046,
											"end": 1063,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1037,
											"end": 1043,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 974,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 974,
											"end": 1064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 974,
											"end": 1064,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 974,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 811,
											"end": 1071,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 811,
											"end": 1071,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 811,
											"end": 1071,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 811,
											"end": 1071,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 811,
											"end": 1071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1077,
											"end": 1152,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 1077,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1145,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1146,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1077,
											"end": 1152,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1077,
											"end": 1152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1158,
											"end": 1275,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 1158,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1267,
											"end": 1268,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1281,
											"end": 1398,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 1281,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1390,
											"end": 1391,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1388,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1380,
											"end": 1392,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1500,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 1404,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1441,
											"end": 1448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 1488,
											"end": 1493,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1470,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1459,
											"end": 1494,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1459,
											"end": 1494,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1500,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1500,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1506,
											"end": 1628,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 1506,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1579,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 1597,
											"end": 1602,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1579,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 1579,
											"end": 1603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1579,
											"end": 1603,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 1579,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1572,
											"end": 1577,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1569,
											"end": 1604,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1559,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 1559,
											"end": 1622,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1619,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1616,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1608,
											"end": 1620,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1559,
											"end": 1622,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 1559,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1506,
											"end": 1628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1506,
											"end": 1628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1634,
											"end": 1773,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 1634,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1680,
											"end": 1685,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1705,
											"end": 1725,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1725,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 1734,
											"end": 1767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1734,
											"end": 1767,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 1734,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1634,
											"end": 1773,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1634,
											"end": 1773,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1634,
											"end": 1773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1634,
											"end": 1773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1634,
											"end": 1773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 2108,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 1779,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 1844,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1889,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1884,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1866,
											"end": 1873,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1862,
											"end": 1885,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1858,
											"end": 1890,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1974,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 1855,
											"end": 1974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1893,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 1893,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 1893,
											"end": 1972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1893,
											"end": 1972,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 1893,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1974,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 1855,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 2083,
											"end": 2090,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2074,
											"end": 2080,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2063,
											"end": 2072,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2081,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2038,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 2038,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2038,
											"end": 2091,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 2038,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2091,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 2101,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 2108,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 2108,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 2108,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 2108,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 2108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2114,
											"end": 2204,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 2114,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2155,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2196,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2184,
											"end": 2197,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2177,
											"end": 2198,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2198,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2114,
											"end": 2204,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2114,
											"end": 2204,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2114,
											"end": 2204,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2114,
											"end": 2204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2210,
											"end": 2319,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 2210,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 2306,
											"end": 2311,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 2291,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2286,
											"end": 2289,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2279,
											"end": 2313,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2210,
											"end": 2319,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2210,
											"end": 2319,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2210,
											"end": 2319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2535,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 2325,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2412,
											"end": 2416,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2452,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2439,
											"end": 2448,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2435,
											"end": 2453,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2427,
											"end": 2453,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2427,
											"end": 2453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2463,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 2525,
											"end": 2526,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2523,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2510,
											"end": 2527,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2463,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 2463,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2463,
											"end": 2528,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 2463,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2535,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2535,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2659,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 2541,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 2646,
											"end": 2651,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 2628,
											"end": 2652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2652,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 2628,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2653,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2659,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2659,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2758,
											"end": 2762,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2798,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2794,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2781,
											"end": 2799,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2773,
											"end": 2799,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2773,
											"end": 2799,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2809,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 2877,
											"end": 2878,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2879,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2809,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 2809,
											"end": 2880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2809,
											"end": 2880,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 2809,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2665,
											"end": 2887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2893,
											"end": 3073,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 2893,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 3018,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 3019,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3038,
											"end": 3042,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3028,
											"end": 3043,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3062,
											"end": 3066,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3059,
											"end": 3060,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3067,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3079,
											"end": 3198,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 3079,
											"end": 3198,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3167,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 3159,
											"end": 3164,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3156,
											"end": 3168,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3146,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 3146,
											"end": 3192,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 3172,
											"end": 3190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3146,
											"end": 3192,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 3146,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3079,
											"end": 3198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3079,
											"end": 3198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3204,
											"end": 3343,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 3204,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3255,
											"end": 3262,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3289,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3273,
											"end": 3289,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3273,
											"end": 3289,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3290,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3290,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 3290,
											"end": 3337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3290,
											"end": 3337,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 3290,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3204,
											"end": 3343,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3204,
											"end": 3343,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3204,
											"end": 3343,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3204,
											"end": 3343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3488,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 3349,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3420,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3444,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 3476,
											"end": 3481,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 3444,
											"end": 3482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3482,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 3444,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3431,
											"end": 3482,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3431,
											"end": 3482,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3488,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3488,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3488,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3494,
											"end": 3649,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 3494,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3593,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 3636,
											"end": 3641,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3593,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 3593,
											"end": 3642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3593,
											"end": 3642,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 3593,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3591,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3581,
											"end": 3643,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3494,
											"end": 3649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3494,
											"end": 3649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3494,
											"end": 3649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3655,
											"end": 3901,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 3655,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3760,
											"end": 3764,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3800,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3775,
											"end": 3801,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3775,
											"end": 3801,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3811,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 3891,
											"end": 3892,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3889,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3873,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3811,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 3811,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3811,
											"end": 3894,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 3811,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3655,
											"end": 3901,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3655,
											"end": 3901,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3655,
											"end": 3901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3655,
											"end": 3901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3655,
											"end": 3901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3907,
											"end": 4024,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 3907,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4016,
											"end": 4017,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4013,
											"end": 4014,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4147,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 4030,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4136,
											"end": 4137,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4129,
											"end": 4141,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4153,
											"end": 4255,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 4153,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4245,
											"end": 4247,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4241,
											"end": 4248,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4236,
											"end": 4238,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4229,
											"end": 4234,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4239,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4221,
											"end": 4249,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4211,
											"end": 4249,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4211,
											"end": 4249,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4153,
											"end": 4255,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4153,
											"end": 4255,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4153,
											"end": 4255,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4153,
											"end": 4255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4261,
											"end": 4441,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 4261,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4309,
											"end": 4386,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4299,
											"end": 4387,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4410,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 4403,
											"end": 4404,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4396,
											"end": 4411,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4430,
											"end": 4434,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4427,
											"end": 4428,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4435,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4447,
											"end": 4728,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 4447,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4530,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 4552,
											"end": 4556,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4530,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 4530,
											"end": 4557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4530,
											"end": 4557,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 4530,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4522,
											"end": 4528,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4518,
											"end": 4558,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4660,
											"end": 4666,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4648,
											"end": 4658,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4645,
											"end": 4667,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4624,
											"end": 4642,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4612,
											"end": 4622,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4609,
											"end": 4643,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4606,
											"end": 4668,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4603,
											"end": 4691,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4603,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 4603,
											"end": 4691,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 4671,
											"end": 4689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4603,
											"end": 4691,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 4603,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4721,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4707,
											"end": 4709,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4700,
											"end": 4722,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4490,
											"end": 4728,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4447,
											"end": 4728,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4447,
											"end": 4728,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4447,
											"end": 4728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4734,
											"end": 4863,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 4734,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4768,
											"end": 4774,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4795,
											"end": 4815,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 4795,
											"end": 4815,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 4795,
											"end": 4815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4795,
											"end": 4815,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 4795,
											"end": 4815,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4785,
											"end": 4815,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4785,
											"end": 4815,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4824,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 4852,
											"end": 4856,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4844,
											"end": 4850,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4824,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 4824,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4824,
											"end": 4857,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 4824,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4734,
											"end": 4863,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4734,
											"end": 4863,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4734,
											"end": 4863,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4734,
											"end": 4863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 5177,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 4869,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4931,
											"end": 4935,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5021,
											"end": 5039,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5013,
											"end": 5019,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5010,
											"end": 5040,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5007,
											"end": 5063,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5007,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 5007,
											"end": 5063,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5043,
											"end": 5061,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 5043,
											"end": 5061,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 5043,
											"end": 5061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5043,
											"end": 5061,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 5043,
											"end": 5061,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5007,
											"end": 5063,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 5007,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 5103,
											"end": 5109,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 5081,
											"end": 5110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5110,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 5081,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5165,
											"end": 5169,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5155,
											"end": 5170,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5147,
											"end": 5170,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5147,
											"end": 5170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 5177,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 5177,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 5177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 5177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5183,
											"end": 5329,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 5183,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5280,
											"end": 5286,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5275,
											"end": 5278,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5257,
											"end": 5287,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 5321,
											"end": 5322,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5318,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5307,
											"end": 5310,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5303,
											"end": 5319,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5183,
											"end": 5329,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5183,
											"end": 5329,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5183,
											"end": 5329,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5183,
											"end": 5329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5760,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 5335,
											"end": 5760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5413,
											"end": 5418,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5438,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 5454,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 5496,
											"end": 5502,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5454,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 5454,
											"end": 5503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5454,
											"end": 5503,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 5454,
											"end": 5503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5438,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 5438,
											"end": 5504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5438,
											"end": 5504,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 5438,
											"end": 5504,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5504,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5504,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5527,
											"end": 5533,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5520,
											"end": 5525,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5513,
											"end": 5534,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5565,
											"end": 5569,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5558,
											"end": 5563,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5554,
											"end": 5570,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5603,
											"end": 5606,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5594,
											"end": 5600,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5589,
											"end": 5592,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5585,
											"end": 5601,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5582,
											"end": 5607,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5579,
											"end": 5691,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5579,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 5579,
											"end": 5691,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5610,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 5610,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 5610,
											"end": 5689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5610,
											"end": 5689,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 5610,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5579,
											"end": 5691,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 5579,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5700,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 5747,
											"end": 5753,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5745,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5737,
											"end": 5740,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5700,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 5700,
											"end": 5754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5700,
											"end": 5754,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 5700,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5419,
											"end": 5760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5760,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5760,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5780,
											"end": 6120,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 5780,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5836,
											"end": 5841,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5885,
											"end": 5888,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5878,
											"end": 5882,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5870,
											"end": 5876,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5866,
											"end": 5883,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5862,
											"end": 5889,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5852,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 5852,
											"end": 5974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 5893,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 5893,
											"end": 5972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 5972,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 5893,
											"end": 5972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5852,
											"end": 5974,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 5852,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6016,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5997,
											"end": 6017,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6035,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 6110,
											"end": 6113,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6095,
											"end": 6099,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6087,
											"end": 6093,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6083,
											"end": 6100,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6035,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 6035,
											"end": 6114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6035,
											"end": 6114,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 6035,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6026,
											"end": 6114,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6026,
											"end": 6114,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5842,
											"end": 6120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5780,
											"end": 6120,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5780,
											"end": 6120,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5780,
											"end": 6120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5780,
											"end": 6120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5780,
											"end": 6120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6126,
											"end": 8083,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 6126,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6280,
											"end": 6286,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6294,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6304,
											"end": 6310,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6312,
											"end": 6318,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6320,
											"end": 6326,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6369,
											"end": 6372,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 6357,
											"end": 6366,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6348,
											"end": 6355,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6344,
											"end": 6367,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6340,
											"end": 6373,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6337,
											"end": 6457,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6337,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 6337,
											"end": 6457,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6376,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 6376,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 6376,
											"end": 6455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6376,
											"end": 6455,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 6376,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6337,
											"end": 6457,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 6337,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6496,
											"end": 6497,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 6566,
											"end": 6573,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6557,
											"end": 6563,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6546,
											"end": 6555,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 6542,
											"end": 6564,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6521,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 6521,
											"end": 6574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6521,
											"end": 6574,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 6521,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6511,
											"end": 6574,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 6511,
											"end": 6574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6467,
											"end": 6584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6651,
											"end": 6653,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6640,
											"end": 6649,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6623,
											"end": 6655,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6682,
											"end": 6700,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6674,
											"end": 6680,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6671,
											"end": 6701,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6668,
											"end": 6785,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6668,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 6668,
											"end": 6785,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6704,
											"end": 6783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 6704,
											"end": 6783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 6704,
											"end": 6783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6704,
											"end": 6783,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 6704,
											"end": 6783,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6668,
											"end": 6785,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 6668,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6809,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 6864,
											"end": 6871,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6855,
											"end": 6861,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6844,
											"end": 6853,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 6840,
											"end": 6862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6809,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 6809,
											"end": 6872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6809,
											"end": 6872,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 6809,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6799,
											"end": 6872,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6799,
											"end": 6872,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6594,
											"end": 6882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6949,
											"end": 6951,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6934,
											"end": 6952,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6921,
											"end": 6953,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6980,
											"end": 6998,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6972,
											"end": 6978,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6969,
											"end": 6999,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6966,
											"end": 7083,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6966,
											"end": 7083,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 6966,
											"end": 7083,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 7002,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 7002,
											"end": 7081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7081,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 7002,
											"end": 7081,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6966,
											"end": 7083,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 6966,
											"end": 7083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7107,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 7162,
											"end": 7169,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 7153,
											"end": 7159,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7142,
											"end": 7151,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 7138,
											"end": 7160,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7107,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 7107,
											"end": 7170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7107,
											"end": 7170,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 7107,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7097,
											"end": 7170,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7097,
											"end": 7170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6892,
											"end": 7180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7247,
											"end": 7249,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7236,
											"end": 7245,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7232,
											"end": 7250,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7219,
											"end": 7251,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7278,
											"end": 7296,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7270,
											"end": 7276,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7267,
											"end": 7297,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7264,
											"end": 7381,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7264,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 7264,
											"end": 7381,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7300,
											"end": 7379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 7300,
											"end": 7379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 7300,
											"end": 7379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7300,
											"end": 7379,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 7300,
											"end": 7379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7264,
											"end": 7381,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 7264,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7405,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 7460,
											"end": 7467,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 7451,
											"end": 7457,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7440,
											"end": 7449,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 7436,
											"end": 7458,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7405,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 7405,
											"end": 7468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7405,
											"end": 7468,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 7405,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7395,
											"end": 7468,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7395,
											"end": 7468,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7478,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7545,
											"end": 7548,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 7534,
											"end": 7543,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7530,
											"end": 7549,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7517,
											"end": 7550,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7577,
											"end": 7595,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7569,
											"end": 7575,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7566,
											"end": 7596,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7563,
											"end": 7680,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7563,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 7563,
											"end": 7680,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 7599,
											"end": 7678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7563,
											"end": 7680,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 7563,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7704,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 7759,
											"end": 7766,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 7750,
											"end": 7756,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7739,
											"end": 7748,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 7735,
											"end": 7757,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7704,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 7704,
											"end": 7767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7704,
											"end": 7767,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 7704,
											"end": 7767,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7694,
											"end": 7767,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7694,
											"end": 7767,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7488,
											"end": 7777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7844,
											"end": 7847,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 7833,
											"end": 7842,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7829,
											"end": 7848,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7816,
											"end": 7849,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7894,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7868,
											"end": 7874,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7865,
											"end": 7895,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7862,
											"end": 7979,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7862,
											"end": 7979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 7862,
											"end": 7979,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7898,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 7898,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 7898,
											"end": 7977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7898,
											"end": 7977,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 7898,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7862,
											"end": 7979,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 7862,
											"end": 7979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8003,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 8058,
											"end": 8065,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 8049,
											"end": 8055,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8038,
											"end": 8047,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 8034,
											"end": 8056,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8003,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 8003,
											"end": 8066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8003,
											"end": 8066,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 8003,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7993,
											"end": 8066,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7993,
											"end": 8066,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7787,
											"end": 8076,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6126,
											"end": 8083,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6126,
											"end": 8083,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6126,
											"end": 8083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6126,
											"end": 8083,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6126,
											"end": 8083,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6126,
											"end": 8083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6126,
											"end": 8083,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6126,
											"end": 8083,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6126,
											"end": 8083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8089,
											"end": 8166,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 8089,
											"end": 8166,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8126,
											"end": 8133,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8155,
											"end": 8160,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8144,
											"end": 8160,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8144,
											"end": 8160,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8089,
											"end": 8166,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8089,
											"end": 8166,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8089,
											"end": 8166,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8089,
											"end": 8166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8172,
											"end": 8290,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 8172,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8259,
											"end": 8283,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 8277,
											"end": 8282,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8259,
											"end": 8283,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 8259,
											"end": 8283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8259,
											"end": 8283,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 8259,
											"end": 8283,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8254,
											"end": 8257,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8172,
											"end": 8290,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8172,
											"end": 8290,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8172,
											"end": 8290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8296,
											"end": 8518,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 8296,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8389,
											"end": 8393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8427,
											"end": 8429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8416,
											"end": 8425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8412,
											"end": 8430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8404,
											"end": 8430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8404,
											"end": 8430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8440,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 8508,
											"end": 8509,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8497,
											"end": 8506,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8493,
											"end": 8510,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8490,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8440,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 8440,
											"end": 8511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8440,
											"end": 8511,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 8440,
											"end": 8511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8296,
											"end": 8518,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8296,
											"end": 8518,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8296,
											"end": 8518,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8296,
											"end": 8518,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8296,
											"end": 8518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8524,
											"end": 8693,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 8524,
											"end": 8693,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8608,
											"end": 8619,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8642,
											"end": 8648,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8637,
											"end": 8640,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8630,
											"end": 8649,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8682,
											"end": 8686,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8677,
											"end": 8680,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8673,
											"end": 8687,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8658,
											"end": 8687,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8658,
											"end": 8687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8524,
											"end": 8693,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8524,
											"end": 8693,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8524,
											"end": 8693,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8524,
											"end": 8693,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8524,
											"end": 8693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8699,
											"end": 8869,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 8699,
											"end": 8869,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8839,
											"end": 8861,
											"name": "PUSH",
											"source": 12,
											"value": "5175697A20616C72656164792073746172746564000000000000000000000000"
										},
										{
											"begin": 8835,
											"end": 8836,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8827,
											"end": 8833,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8823,
											"end": 8837,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8816,
											"end": 8862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8699,
											"end": 8869,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8699,
											"end": 8869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8875,
											"end": 9241,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 8875,
											"end": 9241,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9017,
											"end": 9020,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9038,
											"end": 9105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 9102,
											"end": 9104,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 9097,
											"end": 9100,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9038,
											"end": 9105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 9038,
											"end": 9105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9038,
											"end": 9105,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 9038,
											"end": 9105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9031,
											"end": 9105,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9031,
											"end": 9105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9114,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 9203,
											"end": 9206,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9114,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 9114,
											"end": 9207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9114,
											"end": 9207,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 9114,
											"end": 9207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9232,
											"end": 9234,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9227,
											"end": 9230,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9223,
											"end": 9235,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9216,
											"end": 9235,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9216,
											"end": 9235,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8875,
											"end": 9241,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8875,
											"end": 9241,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8875,
											"end": 9241,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8875,
											"end": 9241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9247,
											"end": 9666,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 9247,
											"end": 9666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9413,
											"end": 9417,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9451,
											"end": 9453,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9440,
											"end": 9449,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9436,
											"end": 9454,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9428,
											"end": 9454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9428,
											"end": 9454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9500,
											"end": 9509,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9494,
											"end": 9498,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9490,
											"end": 9510,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9486,
											"end": 9487,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9475,
											"end": 9484,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9471,
											"end": 9488,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9511,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9528,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 9654,
											"end": 9658,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9528,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 9528,
											"end": 9659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9528,
											"end": 9659,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 9528,
											"end": 9659,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9520,
											"end": 9659,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9520,
											"end": 9659,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9247,
											"end": 9666,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9247,
											"end": 9666,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9247,
											"end": 9666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9247,
											"end": 9666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9672,
											"end": 9838,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 9672,
											"end": 9838,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9812,
											"end": 9830,
											"name": "PUSH",
											"source": 12,
											"value": "5175697A206E6F74207374617274656400000000000000000000000000000000"
										},
										{
											"begin": 9808,
											"end": 9809,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9800,
											"end": 9806,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9796,
											"end": 9810,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9789,
											"end": 9831,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9672,
											"end": 9838,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9672,
											"end": 9838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9844,
											"end": 10210,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 9844,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9986,
											"end": 9989,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10007,
											"end": 10074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 10071,
											"end": 10073,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 10066,
											"end": 10069,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10007,
											"end": 10074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 10007,
											"end": 10074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10007,
											"end": 10074,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 10007,
											"end": 10074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10000,
											"end": 10074,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10000,
											"end": 10074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10083,
											"end": 10176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 10172,
											"end": 10175,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10083,
											"end": 10176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 10083,
											"end": 10176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10083,
											"end": 10176,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 10083,
											"end": 10176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10201,
											"end": 10203,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10196,
											"end": 10199,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10192,
											"end": 10204,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10185,
											"end": 10204,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10185,
											"end": 10204,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9844,
											"end": 10210,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9844,
											"end": 10210,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9844,
											"end": 10210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9844,
											"end": 10210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10216,
											"end": 10635,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10216,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10382,
											"end": 10386,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10420,
											"end": 10422,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10409,
											"end": 10418,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10405,
											"end": 10423,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10397,
											"end": 10423,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10397,
											"end": 10423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10469,
											"end": 10478,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10463,
											"end": 10467,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10459,
											"end": 10479,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10455,
											"end": 10456,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10444,
											"end": 10453,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10440,
											"end": 10457,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10433,
											"end": 10480,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10497,
											"end": 10628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 10623,
											"end": 10627,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10497,
											"end": 10628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 10497,
											"end": 10628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10497,
											"end": 10628,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 10497,
											"end": 10628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10489,
											"end": 10628,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10489,
											"end": 10628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10216,
											"end": 10635,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10216,
											"end": 10635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10216,
											"end": 10635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10216,
											"end": 10635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10641,
											"end": 10818,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 10641,
											"end": 10818,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10781,
											"end": 10810,
											"name": "PUSH",
											"source": 12,
											"value": "506C617965722068617320616C726561647920616E7377657265640000000000"
										},
										{
											"begin": 10777,
											"end": 10778,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10769,
											"end": 10775,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10765,
											"end": 10779,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10758,
											"end": 10811,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10641,
											"end": 10818,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10641,
											"end": 10818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10824,
											"end": 11190,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 10824,
											"end": 11190,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10966,
											"end": 10969,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10987,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 11051,
											"end": 11053,
											"name": "PUSH",
											"source": 12,
											"value": "1B"
										},
										{
											"begin": 11046,
											"end": 11049,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10987,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 10987,
											"end": 11054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10987,
											"end": 11054,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 10987,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10980,
											"end": 11054,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10980,
											"end": 11054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11063,
											"end": 11156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 11152,
											"end": 11155,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11063,
											"end": 11156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 11063,
											"end": 11156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11063,
											"end": 11156,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 11063,
											"end": 11156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11181,
											"end": 11183,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11176,
											"end": 11179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11172,
											"end": 11184,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11165,
											"end": 11184,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11165,
											"end": 11184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10824,
											"end": 11190,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10824,
											"end": 11190,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10824,
											"end": 11190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10824,
											"end": 11190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11196,
											"end": 11615,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 11196,
											"end": 11615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11362,
											"end": 11366,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11400,
											"end": 11402,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11389,
											"end": 11398,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11385,
											"end": 11403,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11377,
											"end": 11403,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11377,
											"end": 11403,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11449,
											"end": 11458,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11443,
											"end": 11447,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11439,
											"end": 11459,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11435,
											"end": 11436,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11424,
											"end": 11433,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11420,
											"end": 11437,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11413,
											"end": 11460,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11477,
											"end": 11608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 11603,
											"end": 11607,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11477,
											"end": 11608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 11477,
											"end": 11608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11477,
											"end": 11608,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 11477,
											"end": 11608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11469,
											"end": 11608,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11469,
											"end": 11608,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11196,
											"end": 11615,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11196,
											"end": 11615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11196,
											"end": 11615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11196,
											"end": 11615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11621,
											"end": 11801,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 11621,
											"end": 11801,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11669,
											"end": 11746,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11666,
											"end": 11667,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11659,
											"end": 11747,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11766,
											"end": 11770,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 11763,
											"end": 11764,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11756,
											"end": 11771,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11790,
											"end": 11794,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11787,
											"end": 11788,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11780,
											"end": 11795,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11807,
											"end": 11906,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 11807,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11859,
											"end": 11865,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11893,
											"end": 11898,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11887,
											"end": 11899,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11877,
											"end": 11899,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11877,
											"end": 11899,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11807,
											"end": 11906,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11807,
											"end": 11906,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11807,
											"end": 11906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11807,
											"end": 11906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11912,
											"end": 12060,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 11912,
											"end": 12060,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12014,
											"end": 12025,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12051,
											"end": 12054,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12036,
											"end": 12054,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12036,
											"end": 12054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11912,
											"end": 12060,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11912,
											"end": 12060,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11912,
											"end": 12060,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11912,
											"end": 12060,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11912,
											"end": 12060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12066,
											"end": 12312,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 12066,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12147,
											"end": 12148,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12157,
											"end": 12270,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 12157,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12171,
											"end": 12177,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12165,
											"end": 12178,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12157,
											"end": 12270,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12157,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 12157,
											"end": 12270,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12256,
											"end": 12257,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12251,
											"end": 12254,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12247,
											"end": 12258,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12241,
											"end": 12259,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12237,
											"end": 12238,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12232,
											"end": 12235,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12228,
											"end": 12239,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12221,
											"end": 12260,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12193,
											"end": 12195,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12190,
											"end": 12191,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12186,
											"end": 12196,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12181,
											"end": 12196,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12181,
											"end": 12196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12157,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 12157,
											"end": 12270,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12157,
											"end": 12270,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 12157,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12304,
											"end": 12305,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12295,
											"end": 12301,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12290,
											"end": 12293,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12286,
											"end": 12302,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12279,
											"end": 12306,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12128,
											"end": 12312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12066,
											"end": 12312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12066,
											"end": 12312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12066,
											"end": 12312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12066,
											"end": 12312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12708,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 12318,
											"end": 12708,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12424,
											"end": 12427,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12452,
											"end": 12491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 12485,
											"end": 12490,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12452,
											"end": 12491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 12452,
											"end": 12491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12452,
											"end": 12491,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 12452,
											"end": 12491,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12507,
											"end": 12596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 12589,
											"end": 12595,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12584,
											"end": 12587,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12507,
											"end": 12596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 12507,
											"end": 12596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12507,
											"end": 12596,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 12507,
											"end": 12596,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12500,
											"end": 12596,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12500,
											"end": 12596,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12605,
											"end": 12670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 12663,
											"end": 12669,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12658,
											"end": 12661,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12651,
											"end": 12655,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12644,
											"end": 12649,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12640,
											"end": 12656,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12605,
											"end": 12670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 12605,
											"end": 12670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12605,
											"end": 12670,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 12605,
											"end": 12670,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12695,
											"end": 12701,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12690,
											"end": 12693,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12686,
											"end": 12702,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12679,
											"end": 12702,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12679,
											"end": 12702,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12428,
											"end": 12708,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12708,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12708,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12708,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12708,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12714,
											"end": 12989,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 12714,
											"end": 12989,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12846,
											"end": 12849,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12868,
											"end": 12963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 12959,
											"end": 12962,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12950,
											"end": 12956,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12868,
											"end": 12963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 12868,
											"end": 12963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12868,
											"end": 12963,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 12868,
											"end": 12963,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12861,
											"end": 12963,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12861,
											"end": 12963,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12980,
											"end": 12983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12973,
											"end": 12983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12973,
											"end": 12983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12714,
											"end": 12989,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12714,
											"end": 12989,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12714,
											"end": 12989,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12714,
											"end": 12989,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12714,
											"end": 12989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12995,
											"end": 13163,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 12995,
											"end": 13163,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13135,
											"end": 13155,
											"name": "PUSH",
											"source": 12,
											"value": "496E636F727265637420616E7377657220310000000000000000000000000000"
										},
										{
											"begin": 13131,
											"end": 13132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13123,
											"end": 13129,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13119,
											"end": 13133,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13112,
											"end": 13156,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12995,
											"end": 13163,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12995,
											"end": 13163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13169,
											"end": 13535,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 13169,
											"end": 13535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13311,
											"end": 13314,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13332,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 13396,
											"end": 13398,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 13391,
											"end": 13394,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13332,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 13332,
											"end": 13399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13332,
											"end": 13399,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 13332,
											"end": 13399,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13325,
											"end": 13399,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13325,
											"end": 13399,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13408,
											"end": 13501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 13497,
											"end": 13500,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13408,
											"end": 13501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 13408,
											"end": 13501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13408,
											"end": 13501,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 13408,
											"end": 13501,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13526,
											"end": 13528,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13521,
											"end": 13524,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13517,
											"end": 13529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13510,
											"end": 13529,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13510,
											"end": 13529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13169,
											"end": 13535,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13169,
											"end": 13535,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13169,
											"end": 13535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13169,
											"end": 13535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13541,
											"end": 13960,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 13541,
											"end": 13960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13707,
											"end": 13711,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13745,
											"end": 13747,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13730,
											"end": 13748,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13722,
											"end": 13748,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13722,
											"end": 13748,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13794,
											"end": 13803,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 13792,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13784,
											"end": 13804,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13780,
											"end": 13781,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13769,
											"end": 13778,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13765,
											"end": 13782,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13758,
											"end": 13805,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13822,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 13948,
											"end": 13952,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13822,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 13822,
											"end": 13953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13822,
											"end": 13953,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 13822,
											"end": 13953,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13814,
											"end": 13953,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13814,
											"end": 13953,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13541,
											"end": 13960,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13541,
											"end": 13960,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13541,
											"end": 13960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13541,
											"end": 13960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13966,
											"end": 14134,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 13966,
											"end": 14134,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14106,
											"end": 14126,
											"name": "PUSH",
											"source": 12,
											"value": "496E636F727265637420616E7377657220320000000000000000000000000000"
										},
										{
											"begin": 14102,
											"end": 14103,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14094,
											"end": 14100,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14090,
											"end": 14104,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14083,
											"end": 14127,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13966,
											"end": 14134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13966,
											"end": 14134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14140,
											"end": 14506,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 14140,
											"end": 14506,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14282,
											"end": 14285,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14303,
											"end": 14370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 14367,
											"end": 14369,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 14362,
											"end": 14365,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14303,
											"end": 14370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 14303,
											"end": 14370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14303,
											"end": 14370,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 14303,
											"end": 14370,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14296,
											"end": 14370,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14296,
											"end": 14370,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14379,
											"end": 14472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 14468,
											"end": 14471,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14379,
											"end": 14472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 14379,
											"end": 14472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14379,
											"end": 14472,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 14379,
											"end": 14472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14497,
											"end": 14499,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14492,
											"end": 14495,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14488,
											"end": 14500,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14481,
											"end": 14500,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14481,
											"end": 14500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14140,
											"end": 14506,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14140,
											"end": 14506,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14140,
											"end": 14506,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14140,
											"end": 14506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14512,
											"end": 14931,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 14512,
											"end": 14931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14678,
											"end": 14682,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14716,
											"end": 14718,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14705,
											"end": 14714,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14701,
											"end": 14719,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14693,
											"end": 14719,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14693,
											"end": 14719,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14765,
											"end": 14774,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14751,
											"end": 14752,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14740,
											"end": 14749,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14736,
											"end": 14753,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14729,
											"end": 14776,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14793,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 14919,
											"end": 14923,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14793,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 14793,
											"end": 14924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14793,
											"end": 14924,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 14793,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14785,
											"end": 14924,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14785,
											"end": 14924,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14512,
											"end": 14931,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14512,
											"end": 14931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14512,
											"end": 14931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14512,
											"end": 14931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14937,
											"end": 15105,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 14937,
											"end": 15105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15077,
											"end": 15097,
											"name": "PUSH",
											"source": 12,
											"value": "496E636F727265637420616E7377657220330000000000000000000000000000"
										},
										{
											"begin": 15073,
											"end": 15074,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15065,
											"end": 15071,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15061,
											"end": 15075,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15054,
											"end": 15098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14937,
											"end": 15105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14937,
											"end": 15105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15111,
											"end": 15477,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 15111,
											"end": 15477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15253,
											"end": 15256,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15274,
											"end": 15341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 15338,
											"end": 15340,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 15333,
											"end": 15336,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15274,
											"end": 15341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 15274,
											"end": 15341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15274,
											"end": 15341,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 15274,
											"end": 15341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15267,
											"end": 15341,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15267,
											"end": 15341,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15350,
											"end": 15443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 15439,
											"end": 15442,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15350,
											"end": 15443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 15350,
											"end": 15443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15350,
											"end": 15443,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 15350,
											"end": 15443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15468,
											"end": 15470,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15463,
											"end": 15466,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15459,
											"end": 15471,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15452,
											"end": 15471,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15452,
											"end": 15471,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15111,
											"end": 15477,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15111,
											"end": 15477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15111,
											"end": 15477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15111,
											"end": 15477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15483,
											"end": 15902,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 15483,
											"end": 15902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15649,
											"end": 15653,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15687,
											"end": 15689,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15676,
											"end": 15685,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15672,
											"end": 15690,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15664,
											"end": 15690,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15664,
											"end": 15690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15736,
											"end": 15745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15730,
											"end": 15734,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15726,
											"end": 15746,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15722,
											"end": 15723,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15711,
											"end": 15720,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15707,
											"end": 15724,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15700,
											"end": 15747,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15764,
											"end": 15895,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 15890,
											"end": 15894,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15764,
											"end": 15895,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 15764,
											"end": 15895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15764,
											"end": 15895,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 15764,
											"end": 15895,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15756,
											"end": 15895,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15756,
											"end": 15895,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15483,
											"end": 15902,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15483,
											"end": 15902,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15483,
											"end": 15902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15483,
											"end": 15902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15908,
											"end": 16076,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 15908,
											"end": 16076,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16048,
											"end": 16068,
											"name": "PUSH",
											"source": 12,
											"value": "496E636F727265637420616E7377657220340000000000000000000000000000"
										},
										{
											"begin": 16044,
											"end": 16045,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16036,
											"end": 16042,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16032,
											"end": 16046,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16025,
											"end": 16069,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15908,
											"end": 16076,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15908,
											"end": 16076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16082,
											"end": 16448,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 16082,
											"end": 16448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16224,
											"end": 16227,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16245,
											"end": 16312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 16309,
											"end": 16311,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 16304,
											"end": 16307,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16245,
											"end": 16312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 16245,
											"end": 16312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16245,
											"end": 16312,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 16245,
											"end": 16312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16238,
											"end": 16312,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16238,
											"end": 16312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16321,
											"end": 16414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 16410,
											"end": 16413,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16321,
											"end": 16414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 16321,
											"end": 16414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16321,
											"end": 16414,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 16321,
											"end": 16414,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16439,
											"end": 16441,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16434,
											"end": 16437,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16430,
											"end": 16442,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16423,
											"end": 16442,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16423,
											"end": 16442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16082,
											"end": 16448,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16082,
											"end": 16448,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16082,
											"end": 16448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16082,
											"end": 16448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16454,
											"end": 16873,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 16454,
											"end": 16873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16620,
											"end": 16624,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16658,
											"end": 16660,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16647,
											"end": 16656,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16643,
											"end": 16661,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16635,
											"end": 16661,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16635,
											"end": 16661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16707,
											"end": 16716,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16701,
											"end": 16705,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16697,
											"end": 16717,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16693,
											"end": 16694,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16682,
											"end": 16691,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16678,
											"end": 16695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16671,
											"end": 16718,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16735,
											"end": 16866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 16861,
											"end": 16865,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16735,
											"end": 16866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 16735,
											"end": 16866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16735,
											"end": 16866,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 16735,
											"end": 16866,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16727,
											"end": 16866,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16727,
											"end": 16866,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16454,
											"end": 16873,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16454,
											"end": 16873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16454,
											"end": 16873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16454,
											"end": 16873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16879,
											"end": 17047,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 16879,
											"end": 17047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17019,
											"end": 17039,
											"name": "PUSH",
											"source": 12,
											"value": "496E636F727265637420616E7377657220350000000000000000000000000000"
										},
										{
											"begin": 17015,
											"end": 17016,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17007,
											"end": 17013,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17003,
											"end": 17017,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16996,
											"end": 17040,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16879,
											"end": 17047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16879,
											"end": 17047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17053,
											"end": 17419,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 17053,
											"end": 17419,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17195,
											"end": 17198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17216,
											"end": 17283,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 17280,
											"end": 17282,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 17275,
											"end": 17278,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17216,
											"end": 17283,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 17216,
											"end": 17283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17216,
											"end": 17283,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 17216,
											"end": 17283,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17209,
											"end": 17283,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17209,
											"end": 17283,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17292,
											"end": 17385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 17381,
											"end": 17384,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17292,
											"end": 17385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 17292,
											"end": 17385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17292,
											"end": 17385,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 17292,
											"end": 17385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17410,
											"end": 17412,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17405,
											"end": 17408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17401,
											"end": 17413,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17053,
											"end": 17419,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17053,
											"end": 17419,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17053,
											"end": 17419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17053,
											"end": 17419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17425,
											"end": 17844,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 17425,
											"end": 17844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17591,
											"end": 17595,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17629,
											"end": 17631,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17618,
											"end": 17627,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17614,
											"end": 17632,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17606,
											"end": 17632,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17606,
											"end": 17632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17678,
											"end": 17687,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17672,
											"end": 17676,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17668,
											"end": 17688,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17664,
											"end": 17665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17653,
											"end": 17662,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17649,
											"end": 17666,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17642,
											"end": 17689,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17706,
											"end": 17837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 17832,
											"end": 17836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17706,
											"end": 17837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 17706,
											"end": 17837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17706,
											"end": 17837,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 17706,
											"end": 17837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17698,
											"end": 17837,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17698,
											"end": 17837,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17425,
											"end": 17844,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17425,
											"end": 17844,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17425,
											"end": 17844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17425,
											"end": 17844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17850,
											"end": 18182,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 17850,
											"end": 18182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17971,
											"end": 17975,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18009,
											"end": 18011,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17998,
											"end": 18007,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17994,
											"end": 18012,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17986,
											"end": 18012,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17986,
											"end": 18012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18022,
											"end": 18093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 18090,
											"end": 18091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18079,
											"end": 18088,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18075,
											"end": 18092,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18066,
											"end": 18072,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18022,
											"end": 18093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 18022,
											"end": 18093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18022,
											"end": 18093,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 18022,
											"end": 18093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18103,
											"end": 18175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 18171,
											"end": 18173,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18160,
											"end": 18169,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18156,
											"end": 18174,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18147,
											"end": 18153,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18103,
											"end": 18175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 18103,
											"end": 18175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18103,
											"end": 18175,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 18103,
											"end": 18175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17850,
											"end": 18182,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 17850,
											"end": 18182,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17850,
											"end": 18182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17850,
											"end": 18182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17850,
											"end": 18182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17850,
											"end": 18182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"quiz.sol",
								"token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acsToken()": "087e88d0",
							"endQuiz(address,string,string,string,string,string)": "aa4339cb",
							"hasAnswered(address)": "5b67bdb4",
							"owner()": "8da5cb5b",
							"quizState()": "9206815f",
							"renounceOwnership()": "715018a6",
							"rewardAmount()": "f7b2a7be",
							"startQuiz()": "4c3415e6",
							"transferOwnership(address)": "f2fde38b",
							"winner()": "dfbf53ae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acsTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"QuizEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"QuizStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acsToken\",\"outputs\":[{\"internalType\":\"contract AshokuCoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"answer1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"answer2\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"answer3\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"answer4\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"answer5\",\"type\":\"string\"}],\"name\":\"endQuiz\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasAnswered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quizState\",\"outputs\":[{\"internalType\":\"enum QuizGame.QuizState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startQuiz\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"quiz.sol\":\"QuizGame\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"quiz.sol\":{\"keccak256\":\"0xe7439250b444d8f4095e32929d0ef45eb6321f7181f19734ca5ed5d3eb062784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccb3e190ec4ab8e23bf920bcefb2a5c68b40b6d86e31e98d4fa8f9ab799a0dc9\",\"dweb:/ipfs/QmTVix32HN7vYZCoMxMWewpSsHPoSctnJZFJPqWyybNMH2\"]},\"token.sol\":{\"keccak256\":\"0xdbd2f657901dd5016382131f2670e16fb1ac1efbaded1a050b59a57d81746d5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddfd93916ffc8ad12bb50d7013c54c3f67498dea38ef71e9aec31c0bde003ac\",\"dweb:/ipfs/QmS3ZtnKe8rTJjWxPPGXwWuzuR5ix8NLPisLfCkAjpxcxH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 387,
								"contract": "quiz.sol:QuizGame",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1353,
								"contract": "quiz.sol:QuizGame",
								"label": "quizState",
								"offset": 20,
								"slot": "0",
								"type": "t_enum(QuizState)1350"
							},
							{
								"astId": 1356,
								"contract": "quiz.sol:QuizGame",
								"label": "acsToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(AshokuCoin)1651"
							},
							{
								"astId": 1358,
								"contract": "quiz.sol:QuizGame",
								"label": "winner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1361,
								"contract": "quiz.sol:QuizGame",
								"label": "rewardAmount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1365,
								"contract": "quiz.sol:QuizGame",
								"label": "hasAnswered",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(AshokuCoin)1651": {
								"encoding": "inplace",
								"label": "contract AshokuCoin",
								"numberOfBytes": "20"
							},
							"t_enum(QuizState)1350": {
								"encoding": "inplace",
								"label": "enum QuizGame.QuizState",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"token.sol": {
				"AshokuCoin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "defaultAdmin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "minter",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"token.sol\":180:602  contract AshokuCoin is ERC20, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"token.sol\":302:484  constructor(address defaultAdmin, address minter) ERC20(\"AshokuCoin\", \"ACS\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x4173686f6b75436f696e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4143530000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"token.sol\":390:434  _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"token.sol\":401:419  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"token.sol\":421:433  defaultAdmin */\n  dup4\n    /* \"token.sol\":390:400  _grantRole */\n  shl(0x20, tag_12)\n    /* \"token.sol\":390:434  _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"token.sol\":445:476  _grantRole(MINTER_ROLE, minter) */\n  tag_13\n    /* \"token.sol\":269:293  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"token.sol\":469:475  minter */\n  dup3\n    /* \"token.sol\":445:455  _grantRole */\n  shl(0x20, tag_12)\n    /* \"token.sol\":445:476  _grantRole(MINTER_ROLE, minter) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"token.sol\":302:484  constructor(address defaultAdmin, address minter) ERC20(\"AshokuCoin\", \"ACS\") {... */\n  pop\n  pop\n    /* \"token.sol\":180:602  contract AshokuCoin is ERC20, AccessControl {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_19\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_20)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_15:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_25:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_27:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_28:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_57\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_27\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_29:\n    /* \"#utility.yul\":641:665   */\n  tag_59\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_28\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_60:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_30:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_62\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_29\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_65\n  tag_25\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":949:1068   */\ntag_64:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_66\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_30\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_67\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1457   */\ntag_31:\n    /* \"#utility.yul\":1410:1416   */\n  0x00\n    /* \"#utility.yul\":1444:1449   */\n  dup2\n    /* \"#utility.yul\":1438:1450   */\n  mload\n    /* \"#utility.yul\":1428:1450   */\n  swap1\n  pop\n    /* \"#utility.yul\":1358:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1643   */\ntag_32:\n    /* \"#utility.yul\":1511:1588   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1589   */\n  mstore\n    /* \"#utility.yul\":1608:1612   */\n  0x41\n    /* \"#utility.yul\":1605:1606   */\n  0x04\n    /* \"#utility.yul\":1598:1613   */\n  mstore\n    /* \"#utility.yul\":1632:1636   */\n  0x24\n    /* \"#utility.yul\":1629:1630   */\n  0x00\n    /* \"#utility.yul\":1622:1637   */\n  revert\n    /* \"#utility.yul\":1649:1829   */\ntag_33:\n    /* \"#utility.yul\":1697:1774   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1687:1775   */\n  mstore\n    /* \"#utility.yul\":1794:1798   */\n  0x22\n    /* \"#utility.yul\":1791:1792   */\n  0x04\n    /* \"#utility.yul\":1784:1799   */\n  mstore\n    /* \"#utility.yul\":1818:1822   */\n  0x24\n    /* \"#utility.yul\":1815:1816   */\n  0x00\n    /* \"#utility.yul\":1808:1823   */\n  revert\n    /* \"#utility.yul\":1835:2155   */\ntag_34:\n    /* \"#utility.yul\":1879:1885   */\n  0x00\n    /* \"#utility.yul\":1916:1917   */\n  0x02\n    /* \"#utility.yul\":1910:1914   */\n  dup3\n    /* \"#utility.yul\":1906:1918   */\n  div\n    /* \"#utility.yul\":1896:1918   */\n  swap1\n  pop\n    /* \"#utility.yul\":1963:1964   */\n  0x01\n    /* \"#utility.yul\":1957:1961   */\n  dup3\n    /* \"#utility.yul\":1953:1965   */\n  and\n    /* \"#utility.yul\":1984:2002   */\n  dup1\n    /* \"#utility.yul\":1974:2055   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2040:2044   */\n  0x7f\n    /* \"#utility.yul\":2032:2038   */\n  dup3\n    /* \"#utility.yul\":2028:2045   */\n  and\n    /* \"#utility.yul\":2018:2045   */\n  swap2\n  pop\n    /* \"#utility.yul\":1974:2055   */\ntag_72:\n    /* \"#utility.yul\":2102:2104   */\n  0x20\n    /* \"#utility.yul\":2094:2100   */\n  dup3\n    /* \"#utility.yul\":2091:2105   */\n  lt\n    /* \"#utility.yul\":2071:2089   */\n  dup2\n    /* \"#utility.yul\":2068:2106   */\n  sub\n    /* \"#utility.yul\":2065:2149   */\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2121:2139   */\n  tag_74\n  tag_33\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2065:2149   */\ntag_73:\n    /* \"#utility.yul\":1886:2155   */\n  pop\n    /* \"#utility.yul\":1835:2155   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2161:2302   */\ntag_35:\n    /* \"#utility.yul\":2210:2214   */\n  0x00\n    /* \"#utility.yul\":2233:2236   */\n  dup2\n    /* \"#utility.yul\":2225:2236   */\n  swap1\n  pop\n    /* \"#utility.yul\":2256:2259   */\n  dup2\n    /* \"#utility.yul\":2253:2254   */\n  0x00\n    /* \"#utility.yul\":2246:2260   */\n  mstore\n    /* \"#utility.yul\":2290:2294   */\n  0x20\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2277:2295   */\n  keccak256\n    /* \"#utility.yul\":2269:2295   */\n  swap1\n  pop\n    /* \"#utility.yul\":2161:2302   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2308:2401   */\ntag_36:\n    /* \"#utility.yul\":2345:2351   */\n  0x00\n    /* \"#utility.yul\":2392:2394   */\n  0x20\n    /* \"#utility.yul\":2387:2389   */\n  0x1f\n    /* \"#utility.yul\":2380:2385   */\n  dup4\n    /* \"#utility.yul\":2376:2390   */\n  add\n    /* \"#utility.yul\":2372:2395   */\n  div\n    /* \"#utility.yul\":2362:2395   */\n  swap1\n  pop\n    /* \"#utility.yul\":2308:2401   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2407:2514   */\ntag_37:\n    /* \"#utility.yul\":2451:2459   */\n  0x00\n    /* \"#utility.yul\":2501:2506   */\n  dup3\n    /* \"#utility.yul\":2495:2499   */\n  dup3\n    /* \"#utility.yul\":2491:2507   */\n  shl\n    /* \"#utility.yul\":2470:2507   */\n  swap1\n  pop\n    /* \"#utility.yul\":2407:2514   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2520:2913   */\ntag_38:\n    /* \"#utility.yul\":2589:2595   */\n  0x00\n    /* \"#utility.yul\":2639:2640   */\n  0x08\n    /* \"#utility.yul\":2627:2637   */\n  dup4\n    /* \"#utility.yul\":2623:2641   */\n  mul\n    /* \"#utility.yul\":2662:2759   */\n  tag_79\n    /* \"#utility.yul\":2692:2758   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2681:2690   */\n  dup3\n    /* \"#utility.yul\":2662:2759   */\n  tag_37\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2780:2819   */\n  tag_80\n    /* \"#utility.yul\":2810:2818   */\n  dup7\n    /* \"#utility.yul\":2799:2808   */\n  dup4\n    /* \"#utility.yul\":2780:2819   */\n  tag_37\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2768:2819   */\n  swap6\n  pop\n    /* \"#utility.yul\":2852:2856   */\n  dup1\n    /* \"#utility.yul\":2848:2857   */\n  not\n    /* \"#utility.yul\":2841:2846   */\n  dup5\n    /* \"#utility.yul\":2837:2858   */\n  and\n    /* \"#utility.yul\":2828:2858   */\n  swap4\n  pop\n    /* \"#utility.yul\":2901:2905   */\n  dup1\n    /* \"#utility.yul\":2891:2899   */\n  dup7\n    /* \"#utility.yul\":2887:2906   */\n  and\n    /* \"#utility.yul\":2880:2885   */\n  dup5\n    /* \"#utility.yul\":2877:2907   */\n  or\n    /* \"#utility.yul\":2867:2907   */\n  swap3\n  pop\n    /* \"#utility.yul\":2596:2913   */\n  pop\n  pop\n    /* \"#utility.yul\":2520:2913   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2919:2996   */\ntag_39:\n    /* \"#utility.yul\":2956:2963   */\n  0x00\n    /* \"#utility.yul\":2985:2990   */\n  dup2\n    /* \"#utility.yul\":2974:2990   */\n  swap1\n  pop\n    /* \"#utility.yul\":2919:2996   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3002:3062   */\ntag_40:\n    /* \"#utility.yul\":3030:3033   */\n  0x00\n    /* \"#utility.yul\":3051:3056   */\n  dup2\n    /* \"#utility.yul\":3044:3056   */\n  swap1\n  pop\n    /* \"#utility.yul\":3002:3062   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3068:3210   */\ntag_41:\n    /* \"#utility.yul\":3118:3127   */\n  0x00\n    /* \"#utility.yul\":3151:3204   */\n  tag_84\n    /* \"#utility.yul\":3169:3203   */\n  tag_85\n    /* \"#utility.yul\":3178:3202   */\n  tag_86\n    /* \"#utility.yul\":3196:3201   */\n  dup5\n    /* \"#utility.yul\":3178:3202   */\n  tag_39\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3169:3203   */\n  tag_40\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3151:3204   */\n  tag_39\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3138:3204   */\n  swap1\n  pop\n    /* \"#utility.yul\":3068:3210   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3216:3291   */\ntag_42:\n    /* \"#utility.yul\":3259:3262   */\n  0x00\n    /* \"#utility.yul\":3280:3285   */\n  dup2\n    /* \"#utility.yul\":3273:3285   */\n  swap1\n  pop\n    /* \"#utility.yul\":3216:3291   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3297:3566   */\ntag_43:\n    /* \"#utility.yul\":3407:3446   */\n  tag_89\n    /* \"#utility.yul\":3438:3445   */\n  dup4\n    /* \"#utility.yul\":3407:3446   */\n  tag_41\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3468:3559   */\n  tag_90\n    /* \"#utility.yul\":3517:3558   */\n  tag_91\n    /* \"#utility.yul\":3541:3557   */\n  dup3\n    /* \"#utility.yul\":3517:3558   */\n  tag_42\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3509:3515   */\n  dup5\n    /* \"#utility.yul\":3502:3506   */\n  dup5\n    /* \"#utility.yul\":3496:3507   */\n  sload\n    /* \"#utility.yul\":3468:3559   */\n  tag_38\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3462:3466   */\n  dup3\n    /* \"#utility.yul\":3455:3560   */\n  sstore\n    /* \"#utility.yul\":3373:3566   */\n  pop\n    /* \"#utility.yul\":3297:3566   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3572:3645   */\ntag_44:\n    /* \"#utility.yul\":3617:3620   */\n  0x00\n    /* \"#utility.yul\":3572:3645   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3651:3840   */\ntag_45:\n    /* \"#utility.yul\":3728:3760   */\n  tag_94\n  tag_44\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3769:3834   */\n  tag_95\n    /* \"#utility.yul\":3827:3833   */\n  dup2\n    /* \"#utility.yul\":3819:3825   */\n  dup5\n    /* \"#utility.yul\":3813:3817   */\n  dup5\n    /* \"#utility.yul\":3769:3834   */\n  tag_43\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3704:3840   */\n  pop\n    /* \"#utility.yul\":3651:3840   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3846:4032   */\ntag_46:\n    /* \"#utility.yul\":3906:4026   */\ntag_97:\n    /* \"#utility.yul\":3923:3926   */\n  dup2\n    /* \"#utility.yul\":3916:3921   */\n  dup2\n    /* \"#utility.yul\":3913:3927   */\n  lt\n    /* \"#utility.yul\":3906:4026   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":3977:4016   */\n  tag_100\n    /* \"#utility.yul\":4014:4015   */\n  0x00\n    /* \"#utility.yul\":4007:4012   */\n  dup3\n    /* \"#utility.yul\":3977:4016   */\n  tag_45\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":3950:3951   */\n  0x01\n    /* \"#utility.yul\":3943:3948   */\n  dup2\n    /* \"#utility.yul\":3939:3952   */\n  add\n    /* \"#utility.yul\":3930:3952   */\n  swap1\n  pop\n    /* \"#utility.yul\":3906:4026   */\n  jump(tag_97)\ntag_99:\n    /* \"#utility.yul\":3846:4032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4038:4581   */\ntag_47:\n    /* \"#utility.yul\":4139:4141   */\n  0x1f\n    /* \"#utility.yul\":4134:4137   */\n  dup3\n    /* \"#utility.yul\":4131:4142   */\n  gt\n    /* \"#utility.yul\":4128:4574   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":4173:4211   */\n  tag_103\n    /* \"#utility.yul\":4205:4210   */\n  dup2\n    /* \"#utility.yul\":4173:4211   */\n  tag_35\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4257:4286   */\n  tag_104\n    /* \"#utility.yul\":4275:4285   */\n  dup5\n    /* \"#utility.yul\":4257:4286   */\n  tag_36\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4247:4255   */\n  dup2\n    /* \"#utility.yul\":4243:4287   */\n  add\n    /* \"#utility.yul\":4440:4442   */\n  0x20\n    /* \"#utility.yul\":4428:4438   */\n  dup6\n    /* \"#utility.yul\":4425:4443   */\n  lt\n    /* \"#utility.yul\":4422:4471   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":4461:4469   */\n  dup2\n    /* \"#utility.yul\":4446:4469   */\n  swap1\n  pop\n    /* \"#utility.yul\":4422:4471   */\ntag_105:\n    /* \"#utility.yul\":4484:4564   */\n  tag_106\n    /* \"#utility.yul\":4540:4562   */\n  tag_107\n    /* \"#utility.yul\":4558:4561   */\n  dup6\n    /* \"#utility.yul\":4540:4562   */\n  tag_36\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":4530:4538   */\n  dup4\n    /* \"#utility.yul\":4526:4563   */\n  add\n    /* \"#utility.yul\":4513:4524   */\n  dup3\n    /* \"#utility.yul\":4484:4564   */\n  tag_46\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4143:4574   */\n  pop\n  pop\n    /* \"#utility.yul\":4128:4574   */\ntag_102:\n    /* \"#utility.yul\":4038:4581   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4587:4704   */\ntag_48:\n    /* \"#utility.yul\":4641:4649   */\n  0x00\n    /* \"#utility.yul\":4691:4696   */\n  dup3\n    /* \"#utility.yul\":4685:4689   */\n  dup3\n    /* \"#utility.yul\":4681:4697   */\n  shr\n    /* \"#utility.yul\":4660:4697   */\n  swap1\n  pop\n    /* \"#utility.yul\":4587:4704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4710:4879   */\ntag_49:\n    /* \"#utility.yul\":4754:4760   */\n  0x00\n    /* \"#utility.yul\":4787:4838   */\n  tag_110\n    /* \"#utility.yul\":4835:4836   */\n  0x00\n    /* \"#utility.yul\":4831:4837   */\n  not\n    /* \"#utility.yul\":4823:4828   */\n  dup5\n    /* \"#utility.yul\":4820:4821   */\n  0x08\n    /* \"#utility.yul\":4816:4829   */\n  mul\n    /* \"#utility.yul\":4787:4838   */\n  tag_48\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4783:4839   */\n  not\n    /* \"#utility.yul\":4868:4872   */\n  dup1\n    /* \"#utility.yul\":4862:4866   */\n  dup4\n    /* \"#utility.yul\":4858:4873   */\n  and\n    /* \"#utility.yul\":4848:4873   */\n  swap2\n  pop\n    /* \"#utility.yul\":4761:4879   */\n  pop\n    /* \"#utility.yul\":4710:4879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4884:5179   */\ntag_50:\n    /* \"#utility.yul\":4960:4964   */\n  0x00\n    /* \"#utility.yul\":5106:5135   */\n  tag_112\n    /* \"#utility.yul\":5131:5134   */\n  dup4\n    /* \"#utility.yul\":5125:5129   */\n  dup4\n    /* \"#utility.yul\":5106:5135   */\n  tag_49\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5098:5135   */\n  swap2\n  pop\n    /* \"#utility.yul\":5168:5171   */\n  dup3\n    /* \"#utility.yul\":5165:5166   */\n  0x02\n    /* \"#utility.yul\":5161:5172   */\n  mul\n    /* \"#utility.yul\":5155:5159   */\n  dup3\n    /* \"#utility.yul\":5152:5173   */\n  or\n    /* \"#utility.yul\":5144:5173   */\n  swap1\n  pop\n    /* \"#utility.yul\":4884:5179   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5184:6579   */\ntag_8:\n    /* \"#utility.yul\":5301:5338   */\n  tag_114\n    /* \"#utility.yul\":5334:5337   */\n  dup3\n    /* \"#utility.yul\":5301:5338   */\n  tag_31\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5403:5421   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5395:5401   */\n  dup2\n    /* \"#utility.yul\":5392:5422   */\n  gt\n    /* \"#utility.yul\":5389:5445   */\n  iszero\n  tag_115\n  jumpi\n    /* \"#utility.yul\":5425:5443   */\n  tag_116\n  tag_32\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5389:5445   */\ntag_115:\n    /* \"#utility.yul\":5469:5507   */\n  tag_117\n    /* \"#utility.yul\":5501:5505   */\n  dup3\n    /* \"#utility.yul\":5495:5506   */\n  sload\n    /* \"#utility.yul\":5469:5507   */\n  tag_34\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5554:5621   */\n  tag_118\n    /* \"#utility.yul\":5614:5620   */\n  dup3\n    /* \"#utility.yul\":5606:5612   */\n  dup3\n    /* \"#utility.yul\":5600:5604   */\n  dup6\n    /* \"#utility.yul\":5554:5621   */\n  tag_47\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5648:5649   */\n  0x00\n    /* \"#utility.yul\":5672:5676   */\n  0x20\n    /* \"#utility.yul\":5659:5676   */\n  swap1\n  pop\n    /* \"#utility.yul\":5704:5706   */\n  0x1f\n    /* \"#utility.yul\":5696:5702   */\n  dup4\n    /* \"#utility.yul\":5693:5707   */\n  gt\n    /* \"#utility.yul\":5721:5722   */\n  0x01\n    /* \"#utility.yul\":5716:6334   */\n  dup2\n  eq\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6378:6379   */\n  0x00\n    /* \"#utility.yul\":6395:6401   */\n  dup5\n    /* \"#utility.yul\":6392:6469   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":6444:6453   */\n  dup3\n    /* \"#utility.yul\":6439:6442   */\n  dup8\n    /* \"#utility.yul\":6435:6454   */\n  add\n    /* \"#utility.yul\":6429:6455   */\n  mload\n    /* \"#utility.yul\":6420:6455   */\n  swap1\n  pop\n    /* \"#utility.yul\":6392:6469   */\ntag_121:\n    /* \"#utility.yul\":6495:6562   */\n  tag_122\n    /* \"#utility.yul\":6555:6561   */\n  dup6\n    /* \"#utility.yul\":6548:6553   */\n  dup3\n    /* \"#utility.yul\":6495:6562   */\n  tag_50\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6489:6493   */\n  dup7\n    /* \"#utility.yul\":6482:6563   */\n  sstore\n    /* \"#utility.yul\":6351:6573   */\n  pop\n    /* \"#utility.yul\":5686:6573   */\n  jump(tag_119)\n    /* \"#utility.yul\":5716:6334   */\ntag_120:\n    /* \"#utility.yul\":5768:5772   */\n  0x1f\n    /* \"#utility.yul\":5764:5773   */\n  not\n    /* \"#utility.yul\":5756:5762   */\n  dup5\n    /* \"#utility.yul\":5752:5774   */\n  and\n    /* \"#utility.yul\":5802:5839   */\n  tag_123\n    /* \"#utility.yul\":5834:5838   */\n  dup7\n    /* \"#utility.yul\":5802:5839   */\n  tag_35\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":5861:5862   */\n  0x00\n    /* \"#utility.yul\":5875:6083   */\ntag_124:\n    /* \"#utility.yul\":5889:5896   */\n  dup3\n    /* \"#utility.yul\":5886:5887   */\n  dup2\n    /* \"#utility.yul\":5883:5897   */\n  lt\n    /* \"#utility.yul\":5875:6083   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":5968:5977   */\n  dup5\n    /* \"#utility.yul\":5963:5966   */\n  dup10\n    /* \"#utility.yul\":5959:5978   */\n  add\n    /* \"#utility.yul\":5953:5979   */\n  mload\n    /* \"#utility.yul\":5945:5951   */\n  dup3\n    /* \"#utility.yul\":5938:5980   */\n  sstore\n    /* \"#utility.yul\":6019:6020   */\n  0x01\n    /* \"#utility.yul\":6011:6017   */\n  dup3\n    /* \"#utility.yul\":6007:6021   */\n  add\n    /* \"#utility.yul\":5997:6021   */\n  swap2\n  pop\n    /* \"#utility.yul\":6066:6068   */\n  0x20\n    /* \"#utility.yul\":6055:6064   */\n  dup6\n    /* \"#utility.yul\":6051:6069   */\n  add\n    /* \"#utility.yul\":6038:6069   */\n  swap5\n  pop\n    /* \"#utility.yul\":5912:5916   */\n  0x20\n    /* \"#utility.yul\":5909:5910   */\n  dup2\n    /* \"#utility.yul\":5905:5917   */\n  add\n    /* \"#utility.yul\":5900:5917   */\n  swap1\n  pop\n    /* \"#utility.yul\":5875:6083   */\n  jump(tag_124)\ntag_126:\n    /* \"#utility.yul\":6111:6117   */\n  dup7\n    /* \"#utility.yul\":6102:6109   */\n  dup4\n    /* \"#utility.yul\":6099:6118   */\n  lt\n    /* \"#utility.yul\":6096:6275   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":6169:6178   */\n  dup5\n    /* \"#utility.yul\":6164:6167   */\n  dup10\n    /* \"#utility.yul\":6160:6179   */\n  add\n    /* \"#utility.yul\":6154:6180   */\n  mload\n    /* \"#utility.yul\":6212:6260   */\n  tag_128\n    /* \"#utility.yul\":6254:6258   */\n  0x1f\n    /* \"#utility.yul\":6246:6252   */\n  dup10\n    /* \"#utility.yul\":6242:6259   */\n  and\n    /* \"#utility.yul\":6231:6240   */\n  dup3\n    /* \"#utility.yul\":6212:6260   */\n  tag_49\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6204:6210   */\n  dup4\n    /* \"#utility.yul\":6197:6261   */\n  sstore\n    /* \"#utility.yul\":6119:6275   */\n  pop\n    /* \"#utility.yul\":6096:6275   */\ntag_127:\n    /* \"#utility.yul\":6321:6322   */\n  0x01\n    /* \"#utility.yul\":6317:6318   */\n  0x02\n    /* \"#utility.yul\":6309:6315   */\n  dup9\n    /* \"#utility.yul\":6305:6319   */\n  mul\n    /* \"#utility.yul\":6301:6323   */\n  add\n    /* \"#utility.yul\":6295:6299   */\n  dup9\n    /* \"#utility.yul\":6288:6324   */\n  sstore\n    /* \"#utility.yul\":5723:6334   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5686:6573   */\ntag_119:\n  pop\n    /* \"#utility.yul\":5276:6579   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5184:6579   */\n  pop\n  pop\n  jump\t// out\n    /* \"token.sol\":180:602  contract AshokuCoin is ERC20, AccessControl {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"token.sol\":180:602  contract AshokuCoin is ERC20, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_11:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"token.sol\":492:599  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {... */\n    tag_12:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_16:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_17:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token.sol\":231:293  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_18:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_19:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_20:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_99\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_100\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_101\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_104\n      jump\t// in\n    tag_105:\n      dup1\n      iszero\n      tag_106\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_107\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_106)\n    tag_107:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_108:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_108\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_122\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_51\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_125\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_127\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_128\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_127:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_134\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_133:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"token.sol\":492:599  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {... */\n    tag_67:\n        /* \"token.sol\":269:293  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_136\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_125\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_136:\n        /* \"token.sol\":574:591  _mint(to, amount) */\n      tag_138\n        /* \"token.sol\":580:582  to */\n      dup4\n        /* \"token.sol\":584:590  amount */\n      dup4\n        /* \"token.sol\":574:579  _mint */\n      tag_139\n        /* \"token.sol\":574:591  _mint(to, amount) */\n      jump\t// in\n    tag_138:\n        /* \"token.sol\":492:599  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_143\n      swap1\n      tag_104\n      jump\t// in\n    tag_143:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_144\n      swap1\n      tag_104\n      jump\t// in\n    tag_144:\n      dup1\n      iszero\n      tag_145\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_146\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_145)\n    tag_146:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_147:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_147\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"token.sol\":231:293  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_88:\n        /* \"token.sol\":269:293  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"token.sol\":231:293  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_51\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_153\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_125\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_155\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_134\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_155:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_178\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_179\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_180\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_182\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_75\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_181)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_181:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_75\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_186)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_186:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_201\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_206)\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_210)\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_211\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_213\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_75\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap3\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_218:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_220:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_221:\n        /* \"#utility.yul\":561:584   */\n      tag_253\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_220\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_254:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_222:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_256\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_221\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_26:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_259\n      tag_218\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":833:952   */\n    tag_258:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_260\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_222\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_223:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_224:\n        /* \"#utility.yul\":1268:1289   */\n      tag_263\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_223\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_29:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_265\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_224\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_225:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_226:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_227:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_269:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_269)\n    tag_271:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_228:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_229:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_274\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_225\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":2329:2400   */\n      tag_275\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_226\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_276\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_227\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2499:2528   */\n      tag_277\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_228\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_33:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_279\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_229\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2986   */\n    tag_230:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2937:2979   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2930:2935   */\n      dup3\n        /* \"#utility.yul\":2926:2980   */\n      and\n        /* \"#utility.yul\":2915:2980   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2992:3088   */\n    tag_231:\n        /* \"#utility.yul\":3029:3036   */\n      0x00\n        /* \"#utility.yul\":3058:3082   */\n      tag_282\n        /* \"#utility.yul\":3076:3081   */\n      dup3\n        /* \"#utility.yul\":3058:3082   */\n      tag_230\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":3047:3082   */\n      swap1\n      pop\n        /* \"#utility.yul\":2992:3088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3094:3216   */\n    tag_232:\n        /* \"#utility.yul\":3167:3191   */\n      tag_284\n        /* \"#utility.yul\":3185:3190   */\n      dup2\n        /* \"#utility.yul\":3167:3191   */\n      tag_231\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3160:3165   */\n      dup2\n        /* \"#utility.yul\":3157:3192   */\n      eq\n        /* \"#utility.yul\":3147:3210   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":3206:3207   */\n      0x00\n        /* \"#utility.yul\":3203:3204   */\n      dup1\n        /* \"#utility.yul\":3196:3208   */\n      revert\n        /* \"#utility.yul\":3147:3210   */\n    tag_285:\n        /* \"#utility.yul\":3094:3216   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3222:3361   */\n    tag_233:\n        /* \"#utility.yul\":3268:3273   */\n      0x00\n        /* \"#utility.yul\":3306:3312   */\n      dup2\n        /* \"#utility.yul\":3293:3313   */\n      calldataload\n        /* \"#utility.yul\":3284:3313   */\n      swap1\n      pop\n        /* \"#utility.yul\":3322:3355   */\n      tag_287\n        /* \"#utility.yul\":3349:3354   */\n      dup2\n        /* \"#utility.yul\":3322:3355   */\n      tag_232\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3222:3361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3367:3444   */\n    tag_234:\n        /* \"#utility.yul\":3404:3411   */\n      0x00\n        /* \"#utility.yul\":3433:3438   */\n      dup2\n        /* \"#utility.yul\":3422:3438   */\n      swap1\n      pop\n        /* \"#utility.yul\":3367:3444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3450:3572   */\n    tag_235:\n        /* \"#utility.yul\":3523:3547   */\n      tag_290\n        /* \"#utility.yul\":3541:3546   */\n      dup2\n        /* \"#utility.yul\":3523:3547   */\n      tag_234\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3516:3521   */\n      dup2\n        /* \"#utility.yul\":3513:3548   */\n      eq\n        /* \"#utility.yul\":3503:3566   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":3562:3563   */\n      0x00\n        /* \"#utility.yul\":3559:3560   */\n      dup1\n        /* \"#utility.yul\":3552:3564   */\n      revert\n        /* \"#utility.yul\":3503:3566   */\n    tag_291:\n        /* \"#utility.yul\":3450:3572   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3578:3717   */\n    tag_236:\n        /* \"#utility.yul\":3624:3629   */\n      0x00\n        /* \"#utility.yul\":3662:3668   */\n      dup2\n        /* \"#utility.yul\":3649:3669   */\n      calldataload\n        /* \"#utility.yul\":3640:3669   */\n      swap1\n      pop\n        /* \"#utility.yul\":3678:3711   */\n      tag_293\n        /* \"#utility.yul\":3705:3710   */\n      dup2\n        /* \"#utility.yul\":3678:3711   */\n      tag_235\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3578:3717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3723:4197   */\n    tag_36:\n        /* \"#utility.yul\":3791:3797   */\n      0x00\n        /* \"#utility.yul\":3799:3805   */\n      dup1\n        /* \"#utility.yul\":3848:3850   */\n      0x40\n        /* \"#utility.yul\":3836:3845   */\n      dup4\n        /* \"#utility.yul\":3827:3834   */\n      dup6\n        /* \"#utility.yul\":3823:3846   */\n      sub\n        /* \"#utility.yul\":3819:3851   */\n      slt\n        /* \"#utility.yul\":3816:3935   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":3854:3933   */\n      tag_296\n      tag_218\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3816:3935   */\n    tag_295:\n        /* \"#utility.yul\":3974:3975   */\n      0x00\n        /* \"#utility.yul\":3999:4052   */\n      tag_297\n        /* \"#utility.yul\":4044:4051   */\n      dup6\n        /* \"#utility.yul\":4035:4041   */\n      dup3\n        /* \"#utility.yul\":4024:4033   */\n      dup7\n        /* \"#utility.yul\":4020:4042   */\n      add\n        /* \"#utility.yul\":3999:4052   */\n      tag_233\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":3989:4052   */\n      swap3\n      pop\n        /* \"#utility.yul\":3945:4062   */\n      pop\n        /* \"#utility.yul\":4101:4103   */\n      0x20\n        /* \"#utility.yul\":4127:4180   */\n      tag_298\n        /* \"#utility.yul\":4172:4179   */\n      dup6\n        /* \"#utility.yul\":4163:4169   */\n      dup3\n        /* \"#utility.yul\":4152:4161   */\n      dup7\n        /* \"#utility.yul\":4148:4170   */\n      add\n        /* \"#utility.yul\":4127:4180   */\n      tag_236\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4117:4180   */\n      swap2\n      pop\n        /* \"#utility.yul\":4072:4190   */\n      pop\n        /* \"#utility.yul\":3723:4197   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4203:4321   */\n    tag_237:\n        /* \"#utility.yul\":4290:4314   */\n      tag_300\n        /* \"#utility.yul\":4308:4313   */\n      dup2\n        /* \"#utility.yul\":4290:4314   */\n      tag_234\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":4285:4288   */\n      dup3\n        /* \"#utility.yul\":4278:4315   */\n      mstore\n        /* \"#utility.yul\":4203:4321   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4327:4549   */\n    tag_42:\n        /* \"#utility.yul\":4420:4424   */\n      0x00\n        /* \"#utility.yul\":4458:4460   */\n      0x20\n        /* \"#utility.yul\":4447:4456   */\n      dup3\n        /* \"#utility.yul\":4443:4461   */\n      add\n        /* \"#utility.yul\":4435:4461   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4542   */\n      tag_302\n        /* \"#utility.yul\":4539:4540   */\n      0x00\n        /* \"#utility.yul\":4528:4537   */\n      dup4\n        /* \"#utility.yul\":4524:4541   */\n      add\n        /* \"#utility.yul\":4515:4521   */\n      dup5\n        /* \"#utility.yul\":4471:4542   */\n      tag_237\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4327:4549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4555:5174   */\n    tag_45:\n        /* \"#utility.yul\":4632:4638   */\n      0x00\n        /* \"#utility.yul\":4640:4646   */\n      dup1\n        /* \"#utility.yul\":4648:4654   */\n      0x00\n        /* \"#utility.yul\":4697:4699   */\n      0x60\n        /* \"#utility.yul\":4685:4694   */\n      dup5\n        /* \"#utility.yul\":4676:4683   */\n      dup7\n        /* \"#utility.yul\":4672:4695   */\n      sub\n        /* \"#utility.yul\":4668:4700   */\n      slt\n        /* \"#utility.yul\":4665:4784   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":4703:4782   */\n      tag_305\n      tag_218\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4665:4784   */\n    tag_304:\n        /* \"#utility.yul\":4823:4824   */\n      0x00\n        /* \"#utility.yul\":4848:4901   */\n      tag_306\n        /* \"#utility.yul\":4893:4900   */\n      dup7\n        /* \"#utility.yul\":4884:4890   */\n      dup3\n        /* \"#utility.yul\":4873:4882   */\n      dup8\n        /* \"#utility.yul\":4869:4891   */\n      add\n        /* \"#utility.yul\":4848:4901   */\n      tag_233\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4838:4901   */\n      swap4\n      pop\n        /* \"#utility.yul\":4794:4911   */\n      pop\n        /* \"#utility.yul\":4950:4952   */\n      0x20\n        /* \"#utility.yul\":4976:5029   */\n      tag_307\n        /* \"#utility.yul\":5021:5028   */\n      dup7\n        /* \"#utility.yul\":5012:5018   */\n      dup3\n        /* \"#utility.yul\":5001:5010   */\n      dup8\n        /* \"#utility.yul\":4997:5019   */\n      add\n        /* \"#utility.yul\":4976:5029   */\n      tag_233\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4966:5029   */\n      swap3\n      pop\n        /* \"#utility.yul\":4921:5039   */\n      pop\n        /* \"#utility.yul\":5078:5080   */\n      0x40\n        /* \"#utility.yul\":5104:5157   */\n      tag_308\n        /* \"#utility.yul\":5149:5156   */\n      dup7\n        /* \"#utility.yul\":5140:5146   */\n      dup3\n        /* \"#utility.yul\":5129:5138   */\n      dup8\n        /* \"#utility.yul\":5125:5147   */\n      add\n        /* \"#utility.yul\":5104:5157   */\n      tag_236\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5094:5157   */\n      swap2\n      pop\n        /* \"#utility.yul\":5049:5167   */\n      pop\n        /* \"#utility.yul\":4555:5174   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5180:5257   */\n    tag_238:\n        /* \"#utility.yul\":5217:5224   */\n      0x00\n        /* \"#utility.yul\":5246:5251   */\n      dup2\n        /* \"#utility.yul\":5235:5251   */\n      swap1\n      pop\n        /* \"#utility.yul\":5180:5257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5263:5385   */\n    tag_239:\n        /* \"#utility.yul\":5336:5360   */\n      tag_311\n        /* \"#utility.yul\":5354:5359   */\n      dup2\n        /* \"#utility.yul\":5336:5360   */\n      tag_238\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":5329:5334   */\n      dup2\n        /* \"#utility.yul\":5326:5361   */\n      eq\n        /* \"#utility.yul\":5316:5379   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":5375:5376   */\n      0x00\n        /* \"#utility.yul\":5372:5373   */\n      dup1\n        /* \"#utility.yul\":5365:5377   */\n      revert\n        /* \"#utility.yul\":5316:5379   */\n    tag_312:\n        /* \"#utility.yul\":5263:5385   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5391:5530   */\n    tag_240:\n        /* \"#utility.yul\":5437:5442   */\n      0x00\n        /* \"#utility.yul\":5475:5481   */\n      dup2\n        /* \"#utility.yul\":5462:5482   */\n      calldataload\n        /* \"#utility.yul\":5453:5482   */\n      swap1\n      pop\n        /* \"#utility.yul\":5491:5524   */\n      tag_314\n        /* \"#utility.yul\":5518:5523   */\n      dup2\n        /* \"#utility.yul\":5491:5524   */\n      tag_239\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5391:5530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5536:5865   */\n    tag_50:\n        /* \"#utility.yul\":5595:5601   */\n      0x00\n        /* \"#utility.yul\":5644:5646   */\n      0x20\n        /* \"#utility.yul\":5632:5641   */\n      dup3\n        /* \"#utility.yul\":5623:5630   */\n      dup5\n        /* \"#utility.yul\":5619:5642   */\n      sub\n        /* \"#utility.yul\":5615:5647   */\n      slt\n        /* \"#utility.yul\":5612:5731   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":5650:5729   */\n      tag_317\n      tag_218\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5612:5731   */\n    tag_316:\n        /* \"#utility.yul\":5770:5771   */\n      0x00\n        /* \"#utility.yul\":5795:5848   */\n      tag_318\n        /* \"#utility.yul\":5840:5847   */\n      dup5\n        /* \"#utility.yul\":5831:5837   */\n      dup3\n        /* \"#utility.yul\":5820:5829   */\n      dup6\n        /* \"#utility.yul\":5816:5838   */\n      add\n        /* \"#utility.yul\":5795:5848   */\n      tag_240\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5785:5848   */\n      swap2\n      pop\n        /* \"#utility.yul\":5741:5858   */\n      pop\n        /* \"#utility.yul\":5536:5865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5871:5989   */\n    tag_241:\n        /* \"#utility.yul\":5958:5982   */\n      tag_320\n        /* \"#utility.yul\":5976:5981   */\n      dup2\n        /* \"#utility.yul\":5958:5982   */\n      tag_238\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":5953:5956   */\n      dup3\n        /* \"#utility.yul\":5946:5983   */\n      mstore\n        /* \"#utility.yul\":5871:5989   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5995:6217   */\n    tag_53:\n        /* \"#utility.yul\":6088:6092   */\n      0x00\n        /* \"#utility.yul\":6126:6128   */\n      0x20\n        /* \"#utility.yul\":6115:6124   */\n      dup3\n        /* \"#utility.yul\":6111:6129   */\n      add\n        /* \"#utility.yul\":6103:6129   */\n      swap1\n      pop\n        /* \"#utility.yul\":6139:6210   */\n      tag_322\n        /* \"#utility.yul\":6207:6208   */\n      0x00\n        /* \"#utility.yul\":6196:6205   */\n      dup4\n        /* \"#utility.yul\":6192:6209   */\n      add\n        /* \"#utility.yul\":6183:6189   */\n      dup5\n        /* \"#utility.yul\":6139:6210   */\n      tag_241\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":5995:6217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6223:6697   */\n    tag_56:\n        /* \"#utility.yul\":6291:6297   */\n      0x00\n        /* \"#utility.yul\":6299:6305   */\n      dup1\n        /* \"#utility.yul\":6348:6350   */\n      0x40\n        /* \"#utility.yul\":6336:6345   */\n      dup4\n        /* \"#utility.yul\":6327:6334   */\n      dup6\n        /* \"#utility.yul\":6323:6346   */\n      sub\n        /* \"#utility.yul\":6319:6351   */\n      slt\n        /* \"#utility.yul\":6316:6435   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":6354:6433   */\n      tag_325\n      tag_218\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":6316:6435   */\n    tag_324:\n        /* \"#utility.yul\":6474:6475   */\n      0x00\n        /* \"#utility.yul\":6499:6552   */\n      tag_326\n        /* \"#utility.yul\":6544:6551   */\n      dup6\n        /* \"#utility.yul\":6535:6541   */\n      dup3\n        /* \"#utility.yul\":6524:6533   */\n      dup7\n        /* \"#utility.yul\":6520:6542   */\n      add\n        /* \"#utility.yul\":6499:6552   */\n      tag_240\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":6489:6552   */\n      swap3\n      pop\n        /* \"#utility.yul\":6445:6562   */\n      pop\n        /* \"#utility.yul\":6601:6603   */\n      0x20\n        /* \"#utility.yul\":6627:6680   */\n      tag_327\n        /* \"#utility.yul\":6672:6679   */\n      dup6\n        /* \"#utility.yul\":6663:6669   */\n      dup3\n        /* \"#utility.yul\":6652:6661   */\n      dup7\n        /* \"#utility.yul\":6648:6670   */\n      add\n        /* \"#utility.yul\":6627:6680   */\n      tag_233\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":6617:6680   */\n      swap2\n      pop\n        /* \"#utility.yul\":6572:6690   */\n      pop\n        /* \"#utility.yul\":6223:6697   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6703:6789   */\n    tag_242:\n        /* \"#utility.yul\":6738:6745   */\n      0x00\n        /* \"#utility.yul\":6778:6782   */\n      0xff\n        /* \"#utility.yul\":6771:6776   */\n      dup3\n        /* \"#utility.yul\":6767:6783   */\n      and\n        /* \"#utility.yul\":6756:6783   */\n      swap1\n      pop\n        /* \"#utility.yul\":6703:6789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6795:6907   */\n    tag_243:\n        /* \"#utility.yul\":6878:6900   */\n      tag_330\n        /* \"#utility.yul\":6894:6899   */\n      dup2\n        /* \"#utility.yul\":6878:6900   */\n      tag_242\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":6873:6876   */\n      dup3\n        /* \"#utility.yul\":6866:6901   */\n      mstore\n        /* \"#utility.yul\":6795:6907   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6913:7127   */\n    tag_61:\n        /* \"#utility.yul\":7002:7006   */\n      0x00\n        /* \"#utility.yul\":7040:7042   */\n      0x20\n        /* \"#utility.yul\":7029:7038   */\n      dup3\n        /* \"#utility.yul\":7025:7043   */\n      add\n        /* \"#utility.yul\":7017:7043   */\n      swap1\n      pop\n        /* \"#utility.yul\":7053:7120   */\n      tag_332\n        /* \"#utility.yul\":7117:7118   */\n      0x00\n        /* \"#utility.yul\":7106:7115   */\n      dup4\n        /* \"#utility.yul\":7102:7119   */\n      add\n        /* \"#utility.yul\":7093:7099   */\n      dup5\n        /* \"#utility.yul\":7053:7120   */\n      tag_243\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6913:7127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7133:7462   */\n    tag_70:\n        /* \"#utility.yul\":7192:7198   */\n      0x00\n        /* \"#utility.yul\":7241:7243   */\n      0x20\n        /* \"#utility.yul\":7229:7238   */\n      dup3\n        /* \"#utility.yul\":7220:7227   */\n      dup5\n        /* \"#utility.yul\":7216:7239   */\n      sub\n        /* \"#utility.yul\":7212:7244   */\n      slt\n        /* \"#utility.yul\":7209:7328   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":7247:7326   */\n      tag_335\n      tag_218\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7209:7328   */\n    tag_334:\n        /* \"#utility.yul\":7367:7368   */\n      0x00\n        /* \"#utility.yul\":7392:7445   */\n      tag_336\n        /* \"#utility.yul\":7437:7444   */\n      dup5\n        /* \"#utility.yul\":7428:7434   */\n      dup3\n        /* \"#utility.yul\":7417:7426   */\n      dup6\n        /* \"#utility.yul\":7413:7435   */\n      add\n        /* \"#utility.yul\":7392:7445   */\n      tag_233\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":7382:7445   */\n      swap2\n      pop\n        /* \"#utility.yul\":7338:7455   */\n      pop\n        /* \"#utility.yul\":7133:7462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7468:7942   */\n    tag_95:\n        /* \"#utility.yul\":7536:7542   */\n      0x00\n        /* \"#utility.yul\":7544:7550   */\n      dup1\n        /* \"#utility.yul\":7593:7595   */\n      0x40\n        /* \"#utility.yul\":7581:7590   */\n      dup4\n        /* \"#utility.yul\":7572:7579   */\n      dup6\n        /* \"#utility.yul\":7568:7591   */\n      sub\n        /* \"#utility.yul\":7564:7596   */\n      slt\n        /* \"#utility.yul\":7561:7680   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":7599:7678   */\n      tag_339\n      tag_218\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":7561:7680   */\n    tag_338:\n        /* \"#utility.yul\":7719:7720   */\n      0x00\n        /* \"#utility.yul\":7744:7797   */\n      tag_340\n        /* \"#utility.yul\":7789:7796   */\n      dup6\n        /* \"#utility.yul\":7780:7786   */\n      dup3\n        /* \"#utility.yul\":7769:7778   */\n      dup7\n        /* \"#utility.yul\":7765:7787   */\n      add\n        /* \"#utility.yul\":7744:7797   */\n      tag_233\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":7734:7797   */\n      swap3\n      pop\n        /* \"#utility.yul\":7690:7807   */\n      pop\n        /* \"#utility.yul\":7846:7848   */\n      0x20\n        /* \"#utility.yul\":7872:7925   */\n      tag_341\n        /* \"#utility.yul\":7917:7924   */\n      dup6\n        /* \"#utility.yul\":7908:7914   */\n      dup3\n        /* \"#utility.yul\":7897:7906   */\n      dup7\n        /* \"#utility.yul\":7893:7915   */\n      add\n        /* \"#utility.yul\":7872:7925   */\n      tag_233\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":7862:7925   */\n      swap2\n      pop\n        /* \"#utility.yul\":7817:7935   */\n      pop\n        /* \"#utility.yul\":7468:7942   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7948:8128   */\n    tag_244:\n        /* \"#utility.yul\":7996:8073   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7993:7994   */\n      0x00\n        /* \"#utility.yul\":7986:8074   */\n      mstore\n        /* \"#utility.yul\":8093:8097   */\n      0x22\n        /* \"#utility.yul\":8090:8091   */\n      0x04\n        /* \"#utility.yul\":8083:8098   */\n      mstore\n        /* \"#utility.yul\":8117:8121   */\n      0x24\n        /* \"#utility.yul\":8114:8115   */\n      0x00\n        /* \"#utility.yul\":8107:8122   */\n      revert\n        /* \"#utility.yul\":8134:8454   */\n    tag_104:\n        /* \"#utility.yul\":8178:8184   */\n      0x00\n        /* \"#utility.yul\":8215:8216   */\n      0x02\n        /* \"#utility.yul\":8209:8213   */\n      dup3\n        /* \"#utility.yul\":8205:8217   */\n      div\n        /* \"#utility.yul\":8195:8217   */\n      swap1\n      pop\n        /* \"#utility.yul\":8262:8263   */\n      0x01\n        /* \"#utility.yul\":8256:8260   */\n      dup3\n        /* \"#utility.yul\":8252:8264   */\n      and\n        /* \"#utility.yul\":8283:8301   */\n      dup1\n        /* \"#utility.yul\":8273:8354   */\n      tag_344\n      jumpi\n        /* \"#utility.yul\":8339:8343   */\n      0x7f\n        /* \"#utility.yul\":8331:8337   */\n      dup3\n        /* \"#utility.yul\":8327:8344   */\n      and\n        /* \"#utility.yul\":8317:8344   */\n      swap2\n      pop\n        /* \"#utility.yul\":8273:8354   */\n    tag_344:\n        /* \"#utility.yul\":8401:8403   */\n      0x20\n        /* \"#utility.yul\":8393:8399   */\n      dup3\n        /* \"#utility.yul\":8390:8404   */\n      lt\n        /* \"#utility.yul\":8370:8388   */\n      dup2\n        /* \"#utility.yul\":8367:8405   */\n      sub\n        /* \"#utility.yul\":8364:8448   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":8420:8438   */\n      tag_346\n      tag_244\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":8364:8448   */\n    tag_345:\n        /* \"#utility.yul\":8185:8454   */\n      pop\n        /* \"#utility.yul\":8134:8454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8460:8578   */\n    tag_245:\n        /* \"#utility.yul\":8547:8571   */\n      tag_348\n        /* \"#utility.yul\":8565:8570   */\n      dup2\n        /* \"#utility.yul\":8547:8571   */\n      tag_231\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":8542:8545   */\n      dup3\n        /* \"#utility.yul\":8535:8572   */\n      mstore\n        /* \"#utility.yul\":8460:8578   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8584:9026   */\n    tag_167:\n        /* \"#utility.yul\":8733:8737   */\n      0x00\n        /* \"#utility.yul\":8771:8773   */\n      0x60\n        /* \"#utility.yul\":8760:8769   */\n      dup3\n        /* \"#utility.yul\":8756:8774   */\n      add\n        /* \"#utility.yul\":8748:8774   */\n      swap1\n      pop\n        /* \"#utility.yul\":8784:8855   */\n      tag_350\n        /* \"#utility.yul\":8852:8853   */\n      0x00\n        /* \"#utility.yul\":8841:8850   */\n      dup4\n        /* \"#utility.yul\":8837:8854   */\n      add\n        /* \"#utility.yul\":8828:8834   */\n      dup7\n        /* \"#utility.yul\":8784:8855   */\n      tag_245\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":8865:8937   */\n      tag_351\n        /* \"#utility.yul\":8933:8935   */\n      0x20\n        /* \"#utility.yul\":8922:8931   */\n      dup4\n        /* \"#utility.yul\":8918:8936   */\n      add\n        /* \"#utility.yul\":8909:8915   */\n      dup6\n        /* \"#utility.yul\":8865:8937   */\n      tag_237\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":8947:9019   */\n      tag_352\n        /* \"#utility.yul\":9015:9017   */\n      0x40\n        /* \"#utility.yul\":9004:9013   */\n      dup4\n        /* \"#utility.yul\":9000:9018   */\n      add\n        /* \"#utility.yul\":8991:8997   */\n      dup5\n        /* \"#utility.yul\":8947:9019   */\n      tag_237\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8584:9026   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9032:9254   */\n    tag_172:\n        /* \"#utility.yul\":9125:9129   */\n      0x00\n        /* \"#utility.yul\":9163:9165   */\n      0x20\n        /* \"#utility.yul\":9152:9161   */\n      dup3\n        /* \"#utility.yul\":9148:9166   */\n      add\n        /* \"#utility.yul\":9140:9166   */\n      swap1\n      pop\n        /* \"#utility.yul\":9176:9247   */\n      tag_354\n        /* \"#utility.yul\":9244:9245   */\n      0x00\n        /* \"#utility.yul\":9233:9242   */\n      dup4\n        /* \"#utility.yul\":9229:9246   */\n      add\n        /* \"#utility.yul\":9220:9226   */\n      dup5\n        /* \"#utility.yul\":9176:9247   */\n      tag_245\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":9032:9254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9260:9440   */\n    tag_246:\n        /* \"#utility.yul\":9308:9385   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9305:9306   */\n      0x00\n        /* \"#utility.yul\":9298:9386   */\n      mstore\n        /* \"#utility.yul\":9405:9409   */\n      0x11\n        /* \"#utility.yul\":9402:9403   */\n      0x04\n        /* \"#utility.yul\":9395:9410   */\n      mstore\n        /* \"#utility.yul\":9429:9433   */\n      0x24\n        /* \"#utility.yul\":9426:9427   */\n      0x00\n        /* \"#utility.yul\":9419:9434   */\n      revert\n        /* \"#utility.yul\":9446:9637   */\n    tag_205:\n        /* \"#utility.yul\":9486:9489   */\n      0x00\n        /* \"#utility.yul\":9505:9525   */\n      tag_357\n        /* \"#utility.yul\":9523:9524   */\n      dup3\n        /* \"#utility.yul\":9505:9525   */\n      tag_234\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":9500:9525   */\n      swap2\n      pop\n        /* \"#utility.yul\":9539:9559   */\n      tag_358\n        /* \"#utility.yul\":9557:9558   */\n      dup4\n        /* \"#utility.yul\":9539:9559   */\n      tag_234\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":9534:9559   */\n      swap3\n      pop\n        /* \"#utility.yul\":9582:9583   */\n      dup3\n        /* \"#utility.yul\":9579:9580   */\n      dup3\n        /* \"#utility.yul\":9575:9584   */\n      add\n        /* \"#utility.yul\":9568:9584   */\n      swap1\n      pop\n        /* \"#utility.yul\":9603:9606   */\n      dup1\n        /* \"#utility.yul\":9600:9601   */\n      dup3\n        /* \"#utility.yul\":9597:9607   */\n      gt\n        /* \"#utility.yul\":9594:9630   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":9610:9628   */\n      tag_360\n      tag_246\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":9594:9630   */\n    tag_359:\n        /* \"#utility.yul\":9446:9637   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9643:9975   */\n    tag_216:\n        /* \"#utility.yul\":9764:9768   */\n      0x00\n        /* \"#utility.yul\":9802:9804   */\n      0x40\n        /* \"#utility.yul\":9791:9800   */\n      dup3\n        /* \"#utility.yul\":9787:9805   */\n      add\n        /* \"#utility.yul\":9779:9805   */\n      swap1\n      pop\n        /* \"#utility.yul\":9815:9886   */\n      tag_362\n        /* \"#utility.yul\":9883:9884   */\n      0x00\n        /* \"#utility.yul\":9872:9881   */\n      dup4\n        /* \"#utility.yul\":9868:9885   */\n      add\n        /* \"#utility.yul\":9859:9865   */\n      dup6\n        /* \"#utility.yul\":9815:9886   */\n      tag_245\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":9896:9968   */\n      tag_363\n        /* \"#utility.yul\":9964:9966   */\n      0x20\n        /* \"#utility.yul\":9953:9962   */\n      dup4\n        /* \"#utility.yul\":9949:9967   */\n      add\n        /* \"#utility.yul\":9940:9946   */\n      dup5\n        /* \"#utility.yul\":9896:9968   */\n      tag_241\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":9643:9975   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f985ae9be74689642d7f8e137dd9f77cb30c43f65758f68097258c624bf0bb3a64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1634": {
									"entryPoint": null,
									"id": 1634,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_715": {
									"entryPoint": null,
									"id": 715,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 280,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1294": {
									"entryPoint": 632,
									"id": 1294,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 532,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 819,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1006,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1157,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1200,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6582:12",
										"nodeType": "YulBlock",
										"src": "0:6582:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "759:80:12",
													"nodeType": "YulBlock",
													"src": "759:80:12",
													"statements": [
														{
															"nativeSrc": "769:22:12",
															"nodeType": "YulAssignment",
															"src": "769:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:12"
																},
																"nativeSrc": "778:13:12",
																"nodeType": "YulFunctionCall",
																"src": "778:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:12"
																},
																"nativeSrc": "800:33:12",
																"nodeType": "YulFunctionCall",
																"src": "800:33:12"
															},
															"nativeSrc": "800:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:12",
														"nodeType": "YulTypedName",
														"src": "737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:12",
														"nodeType": "YulTypedName",
														"src": "745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:12",
														"nodeType": "YulTypedName",
														"src": "753:5:12",
														"type": ""
													}
												],
												"src": "696:143:12"
											},
											{
												"body": {
													"nativeSrc": "939:413:12",
													"nodeType": "YulBlock",
													"src": "939:413:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:12",
																"nodeType": "YulBlock",
																"src": "985:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:12"
																			},
																			"nativeSrc": "987:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:12"
																		},
																		"nativeSrc": "987:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:12"
																		},
																		"nativeSrc": "956:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:12",
																		"nodeType": "YulLiteral",
																		"src": "981:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:12"
																},
																"nativeSrc": "952:32:12",
																"nodeType": "YulFunctionCall",
																"src": "952:32:12"
															},
															"nativeSrc": "949:119:12",
															"nodeType": "YulIf",
															"src": "949:119:12"
														},
														{
															"nativeSrc": "1078:128:12",
															"nodeType": "YulBlock",
															"src": "1078:128:12",
															"statements": [
																{
																	"nativeSrc": "1093:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:12"
																				},
																				"nativeSrc": "1164:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:12"
																		},
																		"nativeSrc": "1132:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:12",
															"nodeType": "YulBlock",
															"src": "1216:129:12",
															"statements": [
																{
																	"nativeSrc": "1231:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:12"
																				},
																				"nativeSrc": "1303:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:12"
																		},
																		"nativeSrc": "1271:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:12",
														"nodeType": "YulTypedName",
														"src": "901:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:12",
														"nodeType": "YulTypedName",
														"src": "912:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:12",
														"nodeType": "YulTypedName",
														"src": "924:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:12",
														"nodeType": "YulTypedName",
														"src": "932:6:12",
														"type": ""
													}
												],
												"src": "845:507:12"
											},
											{
												"body": {
													"nativeSrc": "1417:40:12",
													"nodeType": "YulBlock",
													"src": "1417:40:12",
													"statements": [
														{
															"nativeSrc": "1428:22:12",
															"nodeType": "YulAssignment",
															"src": "1428:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1444:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1444:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1438:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1438:5:12"
																},
																"nativeSrc": "1438:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1438:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1428:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1358:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1400:5:12",
														"nodeType": "YulTypedName",
														"src": "1400:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1410:6:12",
														"nodeType": "YulTypedName",
														"src": "1410:6:12",
														"type": ""
													}
												],
												"src": "1358:99:12"
											},
											{
												"body": {
													"nativeSrc": "1491:152:12",
													"nodeType": "YulBlock",
													"src": "1491:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:77:12",
																		"nodeType": "YulLiteral",
																		"src": "1511:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1501:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:12"
																},
																"nativeSrc": "1501:88:12",
																"nodeType": "YulFunctionCall",
																"src": "1501:88:12"
															},
															"nativeSrc": "1501:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "1501:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1605:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1605:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1608:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1608:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1598:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:12"
																},
																"nativeSrc": "1598:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1598:15:12"
															},
															"nativeSrc": "1598:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1598:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1629:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1629:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1632:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1632:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1622:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1622:6:12"
																},
																"nativeSrc": "1622:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1622:15:12"
															},
															"nativeSrc": "1622:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1622:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1463:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1463:180:12"
											},
											{
												"body": {
													"nativeSrc": "1677:152:12",
													"nodeType": "YulBlock",
													"src": "1677:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1697:77:12",
																		"nodeType": "YulLiteral",
																		"src": "1697:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1687:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:12"
																},
																"nativeSrc": "1687:88:12",
																"nodeType": "YulFunctionCall",
																"src": "1687:88:12"
															},
															"nativeSrc": "1687:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "1687:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1791:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1791:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1794:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1794:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1784:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:12"
																},
																"nativeSrc": "1784:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1784:15:12"
															},
															"nativeSrc": "1784:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1784:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1815:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1818:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1818:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1808:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:12"
																},
																"nativeSrc": "1808:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1808:15:12"
															},
															"nativeSrc": "1808:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1808:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1649:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1649:180:12"
											},
											{
												"body": {
													"nativeSrc": "1886:269:12",
													"nodeType": "YulBlock",
													"src": "1886:269:12",
													"statements": [
														{
															"nativeSrc": "1896:22:12",
															"nodeType": "YulAssignment",
															"src": "1896:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1910:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1910:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1916:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1916:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1906:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:12"
																},
																"nativeSrc": "1906:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1906:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1896:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1896:6:12"
																}
															]
														},
														{
															"nativeSrc": "1927:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1927:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1957:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1957:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1963:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1963:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1953:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:12"
																},
																"nativeSrc": "1953:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1953:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1931:18:12",
																	"nodeType": "YulTypedName",
																	"src": "1931:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2004:51:12",
																"nodeType": "YulBlock",
																"src": "2004:51:12",
																"statements": [
																	{
																		"nativeSrc": "2018:27:12",
																		"nodeType": "YulAssignment",
																		"src": "2018:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2032:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "2032:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2040:4:12",
																					"nodeType": "YulLiteral",
																					"src": "2040:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2028:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2028:3:12"
																			},
																			"nativeSrc": "2028:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2028:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2018:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1984:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "1984:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1977:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:12"
																},
																"nativeSrc": "1977:26:12",
																"nodeType": "YulFunctionCall",
																"src": "1977:26:12"
															},
															"nativeSrc": "1974:81:12",
															"nodeType": "YulIf",
															"src": "1974:81:12"
														},
														{
															"body": {
																"nativeSrc": "2107:42:12",
																"nodeType": "YulBlock",
																"src": "2107:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2121:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2121:16:12"
																			},
																			"nativeSrc": "2121:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2121:18:12"
																		},
																		"nativeSrc": "2121:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2121:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2071:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "2071:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2094:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2094:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2102:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2102:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2091:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2091:2:12"
																		},
																		"nativeSrc": "2091:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2091:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2068:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2068:2:12"
																},
																"nativeSrc": "2068:38:12",
																"nodeType": "YulFunctionCall",
																"src": "2068:38:12"
															},
															"nativeSrc": "2065:84:12",
															"nodeType": "YulIf",
															"src": "2065:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1835:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1870:4:12",
														"nodeType": "YulTypedName",
														"src": "1870:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1879:6:12",
														"nodeType": "YulTypedName",
														"src": "1879:6:12",
														"type": ""
													}
												],
												"src": "1835:320:12"
											},
											{
												"body": {
													"nativeSrc": "2215:87:12",
													"nodeType": "YulBlock",
													"src": "2215:87:12",
													"statements": [
														{
															"nativeSrc": "2225:11:12",
															"nodeType": "YulAssignment",
															"src": "2225:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "2233:3:12",
																"nodeType": "YulIdentifier",
																"src": "2233:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2225:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2225:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2253:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2253:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2256:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2256:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2246:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2246:6:12"
																},
																"nativeSrc": "2246:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2246:14:12"
															},
															"nativeSrc": "2246:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "2246:14:12"
														},
														{
															"nativeSrc": "2269:26:12",
															"nodeType": "YulAssignment",
															"src": "2269:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2287:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2287:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2290:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2290:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2277:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "2277:9:12"
																},
																"nativeSrc": "2277:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2277:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2269:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2269:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2161:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2202:3:12",
														"nodeType": "YulTypedName",
														"src": "2202:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2210:4:12",
														"nodeType": "YulTypedName",
														"src": "2210:4:12",
														"type": ""
													}
												],
												"src": "2161:141:12"
											},
											{
												"body": {
													"nativeSrc": "2352:49:12",
													"nodeType": "YulBlock",
													"src": "2352:49:12",
													"statements": [
														{
															"nativeSrc": "2362:33:12",
															"nodeType": "YulAssignment",
															"src": "2362:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2380:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2387:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2376:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2376:3:12"
																		},
																		"nativeSrc": "2376:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2376:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2392:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2372:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2372:3:12"
																},
																"nativeSrc": "2372:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2372:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2362:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2308:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2335:5:12",
														"nodeType": "YulTypedName",
														"src": "2335:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2345:6:12",
														"nodeType": "YulTypedName",
														"src": "2345:6:12",
														"type": ""
													}
												],
												"src": "2308:93:12"
											},
											{
												"body": {
													"nativeSrc": "2460:54:12",
													"nodeType": "YulBlock",
													"src": "2460:54:12",
													"statements": [
														{
															"nativeSrc": "2470:37:12",
															"nodeType": "YulAssignment",
															"src": "2470:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2495:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2495:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2501:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2501:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2491:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2491:3:12"
																},
																"nativeSrc": "2491:16:12",
																"nodeType": "YulFunctionCall",
																"src": "2491:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2470:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "2470:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2407:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2435:4:12",
														"nodeType": "YulTypedName",
														"src": "2435:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2441:5:12",
														"nodeType": "YulTypedName",
														"src": "2441:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2451:8:12",
														"nodeType": "YulTypedName",
														"src": "2451:8:12",
														"type": ""
													}
												],
												"src": "2407:107:12"
											},
											{
												"body": {
													"nativeSrc": "2596:317:12",
													"nodeType": "YulBlock",
													"src": "2596:317:12",
													"statements": [
														{
															"nativeSrc": "2606:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2606:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2627:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "2627:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2639:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2623:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2623:3:12"
																},
																"nativeSrc": "2623:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2623:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2610:9:12",
																	"nodeType": "YulTypedName",
																	"src": "2610:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2650:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2650:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2681:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:66:12",
																		"nodeType": "YulLiteral",
																		"src": "2692:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2662:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:12"
																},
																"nativeSrc": "2662:97:12",
																"nodeType": "YulFunctionCall",
																"src": "2662:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2654:4:12",
																	"nodeType": "YulTypedName",
																	"src": "2654:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2768:51:12",
															"nodeType": "YulAssignment",
															"src": "2768:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2799:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2799:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2810:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "2810:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2780:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2780:18:12"
																},
																"nativeSrc": "2780:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2780:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2768:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "2768:8:12"
																}
															]
														},
														{
															"nativeSrc": "2828:30:12",
															"nodeType": "YulAssignment",
															"src": "2828:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2841:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2841:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2852:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2852:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2848:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2848:3:12"
																		},
																		"nativeSrc": "2848:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2848:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2837:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2837:3:12"
																},
																"nativeSrc": "2837:21:12",
																"nodeType": "YulFunctionCall",
																"src": "2837:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2828:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2828:5:12"
																}
															]
														},
														{
															"nativeSrc": "2867:40:12",
															"nodeType": "YulAssignment",
															"src": "2867:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2880:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2880:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2891:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "2891:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2901:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2901:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2887:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:12"
																		},
																		"nativeSrc": "2887:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2887:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2877:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2877:2:12"
																},
																"nativeSrc": "2877:30:12",
																"nodeType": "YulFunctionCall",
																"src": "2877:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2867:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2520:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2557:5:12",
														"nodeType": "YulTypedName",
														"src": "2557:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2564:10:12",
														"nodeType": "YulTypedName",
														"src": "2564:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2576:8:12",
														"nodeType": "YulTypedName",
														"src": "2576:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2589:6:12",
														"nodeType": "YulTypedName",
														"src": "2589:6:12",
														"type": ""
													}
												],
												"src": "2520:393:12"
											},
											{
												"body": {
													"nativeSrc": "2964:32:12",
													"nodeType": "YulBlock",
													"src": "2964:32:12",
													"statements": [
														{
															"nativeSrc": "2974:16:12",
															"nodeType": "YulAssignment",
															"src": "2974:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2985:5:12",
																"nodeType": "YulIdentifier",
																"src": "2985:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2974:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2974:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2919:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2946:5:12",
														"nodeType": "YulTypedName",
														"src": "2946:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2956:7:12",
														"nodeType": "YulTypedName",
														"src": "2956:7:12",
														"type": ""
													}
												],
												"src": "2919:77:12"
											},
											{
												"body": {
													"nativeSrc": "3034:28:12",
													"nodeType": "YulBlock",
													"src": "3034:28:12",
													"statements": [
														{
															"nativeSrc": "3044:12:12",
															"nodeType": "YulAssignment",
															"src": "3044:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "3051:5:12",
																"nodeType": "YulIdentifier",
																"src": "3051:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3044:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3044:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3002:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3020:5:12",
														"nodeType": "YulTypedName",
														"src": "3020:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3030:3:12",
														"nodeType": "YulTypedName",
														"src": "3030:3:12",
														"type": ""
													}
												],
												"src": "3002:60:12"
											},
											{
												"body": {
													"nativeSrc": "3128:82:12",
													"nodeType": "YulBlock",
													"src": "3128:82:12",
													"statements": [
														{
															"nativeSrc": "3138:66:12",
															"nodeType": "YulAssignment",
															"src": "3138:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3196:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3196:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3178:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3178:17:12"
																				},
																				"nativeSrc": "3178:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3178:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3169:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "3169:8:12"
																		},
																		"nativeSrc": "3169:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3169:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3151:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "3151:17:12"
																},
																"nativeSrc": "3151:53:12",
																"nodeType": "YulFunctionCall",
																"src": "3151:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3138:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "3138:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3068:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3108:5:12",
														"nodeType": "YulTypedName",
														"src": "3108:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3118:9:12",
														"nodeType": "YulTypedName",
														"src": "3118:9:12",
														"type": ""
													}
												],
												"src": "3068:142:12"
											},
											{
												"body": {
													"nativeSrc": "3263:28:12",
													"nodeType": "YulBlock",
													"src": "3263:28:12",
													"statements": [
														{
															"nativeSrc": "3273:12:12",
															"nodeType": "YulAssignment",
															"src": "3273:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "3280:5:12",
																"nodeType": "YulIdentifier",
																"src": "3280:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3273:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3273:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3216:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3249:5:12",
														"nodeType": "YulTypedName",
														"src": "3249:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3259:3:12",
														"nodeType": "YulTypedName",
														"src": "3259:3:12",
														"type": ""
													}
												],
												"src": "3216:75:12"
											},
											{
												"body": {
													"nativeSrc": "3373:193:12",
													"nodeType": "YulBlock",
													"src": "3373:193:12",
													"statements": [
														{
															"nativeSrc": "3383:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3383:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3438:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "3438:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3407:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "3407:30:12"
																},
																"nativeSrc": "3407:39:12",
																"nodeType": "YulFunctionCall",
																"src": "3407:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3387:16:12",
																	"nodeType": "YulTypedName",
																	"src": "3387:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3462:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3462:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3502:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "3502:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3496:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "3496:5:12"
																				},
																				"nativeSrc": "3496:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3509:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3509:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3541:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "3541:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3517:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "3517:23:12"
																				},
																				"nativeSrc": "3517:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3517:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3468:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "3468:27:12"
																		},
																		"nativeSrc": "3468:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3468:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3455:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:12"
																},
																"nativeSrc": "3455:105:12",
																"nodeType": "YulFunctionCall",
																"src": "3455:105:12"
															},
															"nativeSrc": "3455:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "3455:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3297:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3350:4:12",
														"nodeType": "YulTypedName",
														"src": "3350:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3356:6:12",
														"nodeType": "YulTypedName",
														"src": "3356:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3364:7:12",
														"nodeType": "YulTypedName",
														"src": "3364:7:12",
														"type": ""
													}
												],
												"src": "3297:269:12"
											},
											{
												"body": {
													"nativeSrc": "3621:24:12",
													"nodeType": "YulBlock",
													"src": "3621:24:12",
													"statements": [
														{
															"nativeSrc": "3631:8:12",
															"nodeType": "YulAssignment",
															"src": "3631:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3638:1:12",
																"nodeType": "YulLiteral",
																"src": "3638:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3631:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3631:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3572:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3617:3:12",
														"nodeType": "YulTypedName",
														"src": "3617:3:12",
														"type": ""
													}
												],
												"src": "3572:73:12"
											},
											{
												"body": {
													"nativeSrc": "3704:136:12",
													"nodeType": "YulBlock",
													"src": "3704:136:12",
													"statements": [
														{
															"nativeSrc": "3714:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3714:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3728:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "3728:30:12"
																},
																"nativeSrc": "3728:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3728:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3718:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3718:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3813:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3813:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3819:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3827:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3827:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3769:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3769:43:12"
																},
																"nativeSrc": "3769:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3769:65:12"
															},
															"nativeSrc": "3769:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "3769:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3651:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3690:4:12",
														"nodeType": "YulTypedName",
														"src": "3690:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3696:6:12",
														"nodeType": "YulTypedName",
														"src": "3696:6:12",
														"type": ""
													}
												],
												"src": "3651:189:12"
											},
											{
												"body": {
													"nativeSrc": "3896:136:12",
													"nodeType": "YulBlock",
													"src": "3896:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3963:63:12",
																"nodeType": "YulBlock",
																"src": "3963:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4007:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "4007:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4014:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4014:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3977:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "3977:29:12"
																			},
																			"nativeSrc": "3977:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3977:39:12"
																		},
																		"nativeSrc": "3977:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3977:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3916:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3916:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3923:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3923:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3913:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3913:2:12"
																},
																"nativeSrc": "3913:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3913:14:12"
															},
															"nativeSrc": "3906:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3928:26:12",
																"nodeType": "YulBlock",
																"src": "3928:26:12",
																"statements": [
																	{
																		"nativeSrc": "3930:22:12",
																		"nodeType": "YulAssignment",
																		"src": "3930:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3943:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "3943:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3950:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3939:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3939:3:12"
																			},
																			"nativeSrc": "3939:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3939:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3930:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3930:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3910:2:12",
																"nodeType": "YulBlock",
																"src": "3910:2:12",
																"statements": []
															},
															"src": "3906:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3846:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3884:5:12",
														"nodeType": "YulTypedName",
														"src": "3884:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3891:3:12",
														"nodeType": "YulTypedName",
														"src": "3891:3:12",
														"type": ""
													}
												],
												"src": "3846:186:12"
											},
											{
												"body": {
													"nativeSrc": "4117:464:12",
													"nodeType": "YulBlock",
													"src": "4117:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4143:431:12",
																"nodeType": "YulBlock",
																"src": "4143:431:12",
																"statements": [
																	{
																		"nativeSrc": "4157:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4157:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4205:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "4205:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4173:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "4173:31:12"
																			},
																			"nativeSrc": "4173:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4173:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4161:8:12",
																				"nodeType": "YulTypedName",
																				"src": "4161:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4224:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4224:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4247:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "4247:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4275:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "4275:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4257:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "4257:17:12"
																					},
																					"nativeSrc": "4257:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4257:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4243:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4243:3:12"
																			},
																			"nativeSrc": "4243:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4243:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4228:11:12",
																				"nodeType": "YulTypedName",
																				"src": "4228:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4444:27:12",
																			"nodeType": "YulBlock",
																			"src": "4444:27:12",
																			"statements": [
																				{
																					"nativeSrc": "4446:23:12",
																					"nodeType": "YulAssignment",
																					"src": "4446:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4461:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "4461:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4446:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "4446:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4428:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "4428:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4440:2:12",
																					"nodeType": "YulLiteral",
																					"src": "4440:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4425:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "4425:2:12"
																			},
																			"nativeSrc": "4425:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4425:18:12"
																		},
																		"nativeSrc": "4422:49:12",
																		"nodeType": "YulIf",
																		"src": "4422:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4513:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "4513:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4530:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "4530:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4558:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4558:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4540:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "4540:17:12"
																							},
																							"nativeSrc": "4540:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4540:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4526:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4526:3:12"
																					},
																					"nativeSrc": "4526:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4526:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4484:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "4484:28:12"
																			},
																			"nativeSrc": "4484:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4484:80:12"
																		},
																		"nativeSrc": "4484:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4484:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4134:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4134:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4139:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4139:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4131:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4131:2:12"
																},
																"nativeSrc": "4131:11:12",
																"nodeType": "YulFunctionCall",
																"src": "4131:11:12"
															},
															"nativeSrc": "4128:446:12",
															"nodeType": "YulIf",
															"src": "4128:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4038:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4093:5:12",
														"nodeType": "YulTypedName",
														"src": "4093:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4100:3:12",
														"nodeType": "YulTypedName",
														"src": "4100:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4105:10:12",
														"nodeType": "YulTypedName",
														"src": "4105:10:12",
														"type": ""
													}
												],
												"src": "4038:543:12"
											},
											{
												"body": {
													"nativeSrc": "4650:54:12",
													"nodeType": "YulBlock",
													"src": "4650:54:12",
													"statements": [
														{
															"nativeSrc": "4660:37:12",
															"nodeType": "YulAssignment",
															"src": "4660:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4685:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4685:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4691:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4691:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4681:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:12"
																},
																"nativeSrc": "4681:16:12",
																"nodeType": "YulFunctionCall",
																"src": "4681:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4660:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "4660:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4587:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4625:4:12",
														"nodeType": "YulTypedName",
														"src": "4625:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4631:5:12",
														"nodeType": "YulTypedName",
														"src": "4631:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4641:8:12",
														"nodeType": "YulTypedName",
														"src": "4641:8:12",
														"type": ""
													}
												],
												"src": "4587:117:12"
											},
											{
												"body": {
													"nativeSrc": "4761:118:12",
													"nodeType": "YulBlock",
													"src": "4761:118:12",
													"statements": [
														{
															"nativeSrc": "4771:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4771:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4820:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4820:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4823:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4823:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4816:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4816:3:12"
																				},
																				"nativeSrc": "4816:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4816:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4835:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4835:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4831:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4831:3:12"
																				},
																				"nativeSrc": "4831:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4831:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4787:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "4787:28:12"
																		},
																		"nativeSrc": "4787:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4787:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4783:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4783:3:12"
																},
																"nativeSrc": "4783:56:12",
																"nodeType": "YulFunctionCall",
																"src": "4783:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4775:4:12",
																	"nodeType": "YulTypedName",
																	"src": "4775:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4848:25:12",
															"nodeType": "YulAssignment",
															"src": "4848:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4862:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4862:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4868:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4868:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4858:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4858:3:12"
																},
																"nativeSrc": "4858:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4858:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4848:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4848:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4710:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4738:4:12",
														"nodeType": "YulTypedName",
														"src": "4738:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4744:5:12",
														"nodeType": "YulTypedName",
														"src": "4744:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4754:6:12",
														"nodeType": "YulTypedName",
														"src": "4754:6:12",
														"type": ""
													}
												],
												"src": "4710:169:12"
											},
											{
												"body": {
													"nativeSrc": "4965:214:12",
													"nodeType": "YulBlock",
													"src": "4965:214:12",
													"statements": [
														{
															"nativeSrc": "5098:37:12",
															"nodeType": "YulAssignment",
															"src": "5098:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5125:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5125:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5131:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5131:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5106:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5106:18:12"
																},
																"nativeSrc": "5106:29:12",
																"nodeType": "YulFunctionCall",
																"src": "5106:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5098:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5098:4:12"
																}
															]
														},
														{
															"nativeSrc": "5144:29:12",
															"nodeType": "YulAssignment",
															"src": "5144:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5155:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5155:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5165:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5165:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5168:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5168:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5161:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5161:3:12"
																		},
																		"nativeSrc": "5161:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5152:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5152:2:12"
																},
																"nativeSrc": "5152:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5152:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5144:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5144:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4884:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4946:4:12",
														"nodeType": "YulTypedName",
														"src": "4946:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4952:3:12",
														"nodeType": "YulTypedName",
														"src": "4952:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4960:4:12",
														"nodeType": "YulTypedName",
														"src": "4960:4:12",
														"type": ""
													}
												],
												"src": "4884:295:12"
											},
											{
												"body": {
													"nativeSrc": "5276:1303:12",
													"nodeType": "YulBlock",
													"src": "5276:1303:12",
													"statements": [
														{
															"nativeSrc": "5287:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5287:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5334:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5334:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5301:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "5301:32:12"
																},
																"nativeSrc": "5301:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5301:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5291:6:12",
																	"nodeType": "YulTypedName",
																	"src": "5291:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5423:22:12",
																"nodeType": "YulBlock",
																"src": "5423:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5425:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5425:16:12"
																			},
																			"nativeSrc": "5425:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5425:18:12"
																		},
																		"nativeSrc": "5425:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5425:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5395:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5395:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:18:12",
																		"nodeType": "YulLiteral",
																		"src": "5403:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5392:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5392:2:12"
																},
																"nativeSrc": "5392:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5392:30:12"
															},
															"nativeSrc": "5389:56:12",
															"nodeType": "YulIf",
															"src": "5389:56:12"
														},
														{
															"nativeSrc": "5455:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5455:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5501:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5501:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5495:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5495:5:12"
																		},
																		"nativeSrc": "5495:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5495:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5469:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "5469:25:12"
																},
																"nativeSrc": "5469:38:12",
																"nodeType": "YulFunctionCall",
																"src": "5469:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5459:6:12",
																	"nodeType": "YulTypedName",
																	"src": "5459:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5600:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5600:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5606:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5606:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5614:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5614:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5554:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "5554:45:12"
																},
																"nativeSrc": "5554:67:12",
																"nodeType": "YulFunctionCall",
																"src": "5554:67:12"
															},
															"nativeSrc": "5554:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "5554:67:12"
														},
														{
															"nativeSrc": "5631:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5631:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "5648:1:12",
																"nodeType": "YulLiteral",
																"src": "5648:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5635:9:12",
																	"nodeType": "YulTypedName",
																	"src": "5635:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5659:17:12",
															"nodeType": "YulAssignment",
															"src": "5659:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "5672:4:12",
																"nodeType": "YulLiteral",
																"src": "5672:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5659:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "5659:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5723:611:12",
																		"nodeType": "YulBlock",
																		"src": "5723:611:12",
																		"statements": [
																			{
																				"nativeSrc": "5737:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5737:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5756:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "5756:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5768:4:12",
																									"nodeType": "YulLiteral",
																									"src": "5768:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5764:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "5764:3:12"
																							},
																							"nativeSrc": "5764:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "5764:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5752:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "5752:3:12"
																					},
																					"nativeSrc": "5752:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5752:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5741:7:12",
																						"nodeType": "YulTypedName",
																						"src": "5741:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5788:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5788:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5834:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "5834:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5802:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "5802:31:12"
																					},
																					"nativeSrc": "5802:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5802:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5792:6:12",
																						"nodeType": "YulTypedName",
																						"src": "5792:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5852:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5852:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5861:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5861:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5856:1:12",
																						"nodeType": "YulTypedName",
																						"src": "5856:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5920:163:12",
																					"nodeType": "YulBlock",
																					"src": "5920:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5945:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "5945:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5963:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "5963:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5968:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "5968:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5959:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "5959:3:12"
																												},
																												"nativeSrc": "5959:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "5959:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5953:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "5953:5:12"
																										},
																										"nativeSrc": "5953:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "5953:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5938:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "5938:6:12"
																								},
																								"nativeSrc": "5938:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5938:42:12"
																							},
																							"nativeSrc": "5938:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "5938:42:12"
																						},
																						{
																							"nativeSrc": "5997:24:12",
																							"nodeType": "YulAssignment",
																							"src": "5997:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6011:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "6011:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6019:1:12",
																										"nodeType": "YulLiteral",
																										"src": "6019:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6007:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "6007:3:12"
																								},
																								"nativeSrc": "6007:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "6007:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5997:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "5997:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6038:31:12",
																							"nodeType": "YulAssignment",
																							"src": "6038:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6055:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "6055:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6066:2:12",
																										"nodeType": "YulLiteral",
																										"src": "6066:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6051:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "6051:3:12"
																								},
																								"nativeSrc": "6051:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "6051:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6038:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "6038:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5886:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "5886:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5889:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "5889:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5883:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "5883:2:12"
																					},
																					"nativeSrc": "5883:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5883:14:12"
																				},
																				"nativeSrc": "5875:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5898:21:12",
																					"nodeType": "YulBlock",
																					"src": "5898:21:12",
																					"statements": [
																						{
																							"nativeSrc": "5900:17:12",
																							"nodeType": "YulAssignment",
																							"src": "5900:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5909:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "5909:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5912:4:12",
																										"nodeType": "YulLiteral",
																										"src": "5912:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5905:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "5905:3:12"
																								},
																								"nativeSrc": "5905:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5905:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5900:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "5900:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5879:3:12",
																					"nodeType": "YulBlock",
																					"src": "5879:3:12",
																					"statements": []
																				},
																				"src": "5875:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "6119:156:12",
																					"nodeType": "YulBlock",
																					"src": "6119:156:12",
																					"statements": [
																						{
																							"nativeSrc": "6137:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6137:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6164:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "6164:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6169:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "6169:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6160:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "6160:3:12"
																										},
																										"nativeSrc": "6160:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "6160:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6154:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "6154:5:12"
																								},
																								"nativeSrc": "6154:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "6154:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6141:9:12",
																									"nodeType": "YulTypedName",
																									"src": "6141:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6204:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "6204:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6231:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "6231:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6246:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "6246:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6254:4:12",
																														"nodeType": "YulLiteral",
																														"src": "6254:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6242:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "6242:3:12"
																												},
																												"nativeSrc": "6242:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "6242:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6212:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "6212:18:12"
																										},
																										"nativeSrc": "6212:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "6212:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6197:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "6197:6:12"
																								},
																								"nativeSrc": "6197:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "6197:64:12"
																							},
																							"nativeSrc": "6197:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "6197:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6102:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "6102:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6111:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "6111:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6099:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "6099:2:12"
																					},
																					"nativeSrc": "6099:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6099:19:12"
																				},
																				"nativeSrc": "6096:179:12",
																				"nodeType": "YulIf",
																				"src": "6096:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6295:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "6295:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6309:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "6309:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6317:1:12",
																											"nodeType": "YulLiteral",
																											"src": "6317:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6305:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "6305:3:12"
																									},
																									"nativeSrc": "6305:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "6305:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6321:1:12",
																									"nodeType": "YulLiteral",
																									"src": "6321:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6301:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "6301:3:12"
																							},
																							"nativeSrc": "6301:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "6301:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6288:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6288:6:12"
																					},
																					"nativeSrc": "6288:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6288:36:12"
																				},
																				"nativeSrc": "6288:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "6288:36:12"
																			}
																		]
																	},
																	"nativeSrc": "5716:618:12",
																	"nodeType": "YulCase",
																	"src": "5716:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5721:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5721:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6351:222:12",
																		"nodeType": "YulBlock",
																		"src": "6351:222:12",
																		"statements": [
																			{
																				"nativeSrc": "6365:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6365:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6378:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6378:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6369:5:12",
																						"nodeType": "YulTypedName",
																						"src": "6369:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6402:67:12",
																					"nodeType": "YulBlock",
																					"src": "6402:67:12",
																					"statements": [
																						{
																							"nativeSrc": "6420:35:12",
																							"nodeType": "YulAssignment",
																							"src": "6420:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6439:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "6439:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6444:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "6444:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6435:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "6435:3:12"
																										},
																										"nativeSrc": "6435:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "6435:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6429:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "6429:5:12"
																								},
																								"nativeSrc": "6429:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "6429:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6420:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "6420:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6395:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "6395:6:12"
																				},
																				"nativeSrc": "6392:77:12",
																				"nodeType": "YulIf",
																				"src": "6392:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6489:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "6489:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6548:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "6548:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6555:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "6555:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6495:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "6495:52:12"
																							},
																							"nativeSrc": "6495:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "6495:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6482:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6482:6:12"
																					},
																					"nativeSrc": "6482:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6482:81:12"
																				},
																				"nativeSrc": "6482:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "6482:81:12"
																			}
																		]
																	},
																	"nativeSrc": "6343:230:12",
																	"nodeType": "YulCase",
																	"src": "6343:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5696:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5696:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5704:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5693:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5693:2:12"
																},
																"nativeSrc": "5693:14:12",
																"nodeType": "YulFunctionCall",
																"src": "5693:14:12"
															},
															"nativeSrc": "5686:887:12",
															"nodeType": "YulSwitch",
															"src": "5686:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5184:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5265:4:12",
														"nodeType": "YulTypedName",
														"src": "5265:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5271:3:12",
														"nodeType": "YulTypedName",
														"src": "5271:3:12",
														"type": ""
													}
												],
												"src": "5184:1395:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001ce138038062001ce18339818101604052810190620000369190620002e4565b6040518060400160405280600a81526020017f4173686f6b75436f696e000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f41435300000000000000000000000000000000000000000000000000000000008152508160039081620000b391906200058d565b508060049081620000c591906200058d565b505050620000dc5f801b836200011860201b60201c565b506200010f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6826200011860201b60201c565b50505062000671565b5f6200012b83836200021460201b60201c565b6200020a57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550620001a66200027860201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506200020e565b5f90505b92915050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002ae8262000283565b9050919050565b620002c081620002a2565b8114620002cb575f80fd5b50565b5f81519050620002de81620002b5565b92915050565b5f8060408385031215620002fd57620002fc6200027f565b5b5f6200030c85828601620002ce565b92505060206200031f85828601620002ce565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620003a557607f821691505b602082108103620003bb57620003ba62000360565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200041f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003e2565b6200042b8683620003e2565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620004756200046f620004698462000443565b6200044c565b62000443565b9050919050565b5f819050919050565b620004908362000455565b620004a86200049f826200047c565b848454620003ee565b825550505050565b5f90565b620004be620004b0565b620004cb81848462000485565b505050565b5b81811015620004f257620004e65f82620004b4565b600181019050620004d1565b5050565b601f82111562000541576200050b81620003c1565b6200051684620003d3565b8101602085101562000526578190505b6200053e6200053585620003d3565b830182620004d0565b50505b505050565b5f82821c905092915050565b5f620005635f198460080262000546565b1980831691505092915050565b5f6200057d838362000552565b9150826002028217905092915050565b620005988262000329565b67ffffffffffffffff811115620005b457620005b362000333565b5b620005c082546200038d565b620005cd828285620004f6565b5f60209050601f83116001811462000603575f8415620005ee578287015190505b620005fa858262000570565b86555062000669565b601f1984166200061386620003c1565b5f5b828110156200063c5784890151825560018201915060208501945060208101905062000615565b868310156200065c578489015162000658601f89168262000552565b8355505b6001600288020188555050505b505050505050565b611662806200067f5f395ff3fe608060405234801561000f575f80fd5b5060043610610114575f3560e01c806340c10f19116100a0578063a217fddf1161006f578063a217fddf14610304578063a9059cbb14610322578063d539139314610352578063d547741f14610370578063dd62ed3e1461038c57610114565b806340c10f191461026a57806370a082311461028657806391d14854146102b657806395d89b41146102e657610114565b806323b872dd116100e757806323b872dd146101b4578063248a9ca3146101e45780632f2ff15d14610214578063313ce5671461023057806336568abe1461024e57610114565b806301ffc9a71461011857806306fdde0314610148578063095ea7b31461016657806318160ddd14610196575b5f80fd5b610132600480360381019061012d919061113f565b6103bc565b60405161013f9190611184565b60405180910390f35b610150610435565b60405161015d9190611227565b60405180910390f35b610180600480360381019061017b91906112d4565b6104c5565b60405161018d9190611184565b60405180910390f35b61019e6104e7565b6040516101ab9190611321565b60405180910390f35b6101ce60048036038101906101c9919061133a565b6104f0565b6040516101db9190611184565b60405180910390f35b6101fe60048036038101906101f991906113bd565b61051e565b60405161020b91906113f7565b60405180910390f35b61022e60048036038101906102299190611410565b61053b565b005b61023861055d565b6040516102459190611469565b60405180910390f35b61026860048036038101906102639190611410565b610565565b005b610284600480360381019061027f91906112d4565b6105e0565b005b6102a0600480360381019061029b9190611482565b610619565b6040516102ad9190611321565b60405180910390f35b6102d060048036038101906102cb9190611410565b61065e565b6040516102dd9190611184565b60405180910390f35b6102ee6106c2565b6040516102fb9190611227565b60405180910390f35b61030c610752565b60405161031991906113f7565b60405180910390f35b61033c600480360381019061033791906112d4565b610758565b6040516103499190611184565b60405180910390f35b61035a61077a565b60405161036791906113f7565b60405180910390f35b61038a60048036038101906103859190611410565b61079e565b005b6103a660048036038101906103a191906114ad565b6107c0565b6040516103b39190611321565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042e575061042d82610842565b5b9050919050565b60606003805461044490611518565b80601f016020809104026020016040519081016040528092919081815260200182805461047090611518565b80156104bb5780601f10610492576101008083540402835291602001916104bb565b820191905f5260205f20905b81548152906001019060200180831161049e57829003601f168201915b5050505050905090565b5f806104cf6108ab565b90506104dc8185856108b2565b600191505092915050565b5f600254905090565b5f806104fa6108ab565b90506105078582856108c4565b610512858585610956565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b6105448261051e565b61054d81610a46565b6105578383610a5a565b50505050565b5f6012905090565b61056d6108ab565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105d1576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105db8282610b44565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661060a81610a46565b6106148383610c2e565b505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b6060600480546106d190611518565b80601f01602080910402602001604051908101604052809291908181526020018280546106fd90611518565b80156107485780601f1061071f57610100808354040283529160200191610748565b820191905f5260205f20905b81548152906001019060200180831161072b57829003601f168201915b5050505050905090565b5f801b81565b5f806107626108ab565b905061076f818585610956565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6107a78261051e565b6107b081610a46565b6107ba8383610b44565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6108bf8383836001610cad565b505050565b5f6108cf84846107c0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109505781811015610941578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161093893929190611557565b60405180910390fd5b61094f84848484035f610cad565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109c6575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109bd919061158c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a36575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a2d919061158c565b60405180910390fd5b610a41838383610e7c565b505050565b610a5781610a526108ab565b611095565b50565b5f610a65838361065e565b610b3a57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610ad76108ab565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610b3e565b5f90505b92915050565b5f610b4f838361065e565b15610c24575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bc16108ab565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610c28565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c9e575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c95919061158c565b60405180910390fd5b610ca95f8383610e7c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d1d575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d14919061158c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d8d575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d84919061158c565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610e76578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e6d9190611321565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ecc578060025f828254610ec091906115d2565b92505081905550610f9a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f55578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f4c93929190611557565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fe1578060025f828254039250508190555061102b565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110889190611321565b60405180910390a3505050565b61109f828261065e565b6110e25780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016110d9929190611605565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61111e816110ea565b8114611128575f80fd5b50565b5f8135905061113981611115565b92915050565b5f60208284031215611154576111536110e6565b5b5f6111618482850161112b565b91505092915050565b5f8115159050919050565b61117e8161116a565b82525050565b5f6020820190506111975f830184611175565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156111d45780820151818401526020810190506111b9565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6111f98261119d565b61120381856111a7565b93506112138185602086016111b7565b61121c816111df565b840191505092915050565b5f6020820190508181035f83015261123f81846111ef565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61127082611247565b9050919050565b61128081611266565b811461128a575f80fd5b50565b5f8135905061129b81611277565b92915050565b5f819050919050565b6112b3816112a1565b81146112bd575f80fd5b50565b5f813590506112ce816112aa565b92915050565b5f80604083850312156112ea576112e96110e6565b5b5f6112f78582860161128d565b9250506020611308858286016112c0565b9150509250929050565b61131b816112a1565b82525050565b5f6020820190506113345f830184611312565b92915050565b5f805f60608486031215611351576113506110e6565b5b5f61135e8682870161128d565b935050602061136f8682870161128d565b9250506040611380868287016112c0565b9150509250925092565b5f819050919050565b61139c8161138a565b81146113a6575f80fd5b50565b5f813590506113b781611393565b92915050565b5f602082840312156113d2576113d16110e6565b5b5f6113df848285016113a9565b91505092915050565b6113f18161138a565b82525050565b5f60208201905061140a5f8301846113e8565b92915050565b5f8060408385031215611426576114256110e6565b5b5f611433858286016113a9565b92505060206114448582860161128d565b9150509250929050565b5f60ff82169050919050565b6114638161144e565b82525050565b5f60208201905061147c5f83018461145a565b92915050565b5f60208284031215611497576114966110e6565b5b5f6114a48482850161128d565b91505092915050565b5f80604083850312156114c3576114c26110e6565b5b5f6114d08582860161128d565b92505060206114e18582860161128d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061152f57607f821691505b602082108103611542576115416114eb565b5b50919050565b61155181611266565b82525050565b5f60608201905061156a5f830186611548565b6115776020830185611312565b6115846040830184611312565b949350505050565b5f60208201905061159f5f830184611548565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115dc826112a1565b91506115e7836112a1565b92508282019050808211156115ff576115fe6115a5565b5b92915050565b5f6040820190506116185f830185611548565b61162560208301846113e8565b939250505056fea2646970667358221220f985ae9be74689642d7f8e137dd9f77cb30c43f65758f68097258c624bf0bb3a64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1CE1 CODESIZE SUB DUP1 PUSH3 0x1CE1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x2E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4173686F6B75436F696E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4143530000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB3 SWAP2 SWAP1 PUSH3 0x58D JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC5 SWAP2 SWAP1 PUSH3 0x58D JUMP JUMPDEST POP POP POP PUSH3 0xDC PUSH0 DUP1 SHL DUP4 PUSH3 0x118 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x10F PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH3 0x118 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x671 JUMP JUMPDEST PUSH0 PUSH3 0x12B DUP4 DUP4 PUSH3 0x214 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x20A JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x1A6 PUSH3 0x278 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x20E JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2AE DUP3 PUSH3 0x283 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2C0 DUP2 PUSH3 0x2A2 JUMP JUMPDEST DUP2 EQ PUSH3 0x2CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2DE DUP2 PUSH3 0x2B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2FD JUMPI PUSH3 0x2FC PUSH3 0x27F JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x30C DUP6 DUP3 DUP7 ADD PUSH3 0x2CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x31F DUP6 DUP3 DUP7 ADD PUSH3 0x2CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3A5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3BB JUMPI PUSH3 0x3BA PUSH3 0x360 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x41F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x3E2 JUMP JUMPDEST PUSH3 0x42B DUP7 DUP4 PUSH3 0x3E2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x475 PUSH3 0x46F PUSH3 0x469 DUP5 PUSH3 0x443 JUMP JUMPDEST PUSH3 0x44C JUMP JUMPDEST PUSH3 0x443 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x490 DUP4 PUSH3 0x455 JUMP JUMPDEST PUSH3 0x4A8 PUSH3 0x49F DUP3 PUSH3 0x47C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x3EE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x4BE PUSH3 0x4B0 JUMP JUMPDEST PUSH3 0x4CB DUP2 DUP5 DUP5 PUSH3 0x485 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4F2 JUMPI PUSH3 0x4E6 PUSH0 DUP3 PUSH3 0x4B4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x4D1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x541 JUMPI PUSH3 0x50B DUP2 PUSH3 0x3C1 JUMP JUMPDEST PUSH3 0x516 DUP5 PUSH3 0x3D3 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x526 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x53E PUSH3 0x535 DUP6 PUSH3 0x3D3 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x4D0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x563 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x546 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x57D DUP4 DUP4 PUSH3 0x552 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x598 DUP3 PUSH3 0x329 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5B4 JUMPI PUSH3 0x5B3 PUSH3 0x333 JUMP JUMPDEST JUMPDEST PUSH3 0x5C0 DUP3 SLOAD PUSH3 0x38D JUMP JUMPDEST PUSH3 0x5CD DUP3 DUP3 DUP6 PUSH3 0x4F6 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x603 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x5EE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5FA DUP6 DUP3 PUSH3 0x570 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x669 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x613 DUP7 PUSH3 0x3C1 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x63C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x615 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x65C JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x658 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x552 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1662 DUP1 PUSH3 0x67F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38C JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E6 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x24E JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x113F JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x12D4 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x133A JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x13BD JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x12D4 JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x12D4 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35A PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x79E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x14AD JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x42E JUMPI POP PUSH2 0x42D DUP3 PUSH2 0x842 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x444 SWAP1 PUSH2 0x1518 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x470 SWAP1 PUSH2 0x1518 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x492 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4CF PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x4DC DUP2 DUP6 DUP6 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4FA PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x507 DUP6 DUP3 DUP6 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x512 DUP6 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x544 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x54D DUP2 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x557 DUP4 DUP4 PUSH2 0xA5A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x56D PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DB DUP3 DUP3 PUSH2 0xB44 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x60A DUP2 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x614 DUP4 DUP4 PUSH2 0xC2E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6D1 SWAP1 PUSH2 0x1518 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6FD SWAP1 PUSH2 0x1518 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x748 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x71F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x748 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x72B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x762 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x76F DUP2 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x7A7 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x7B0 DUP2 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x7BA DUP4 DUP4 PUSH2 0xB44 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8BF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCAD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8CF DUP5 DUP5 PUSH2 0x7C0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x950 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x941 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x938 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCAD JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA41 DUP4 DUP4 DUP4 PUSH2 0xE7C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA57 DUP2 PUSH2 0xA52 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x1095 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xA65 DUP4 DUP4 PUSH2 0x65E JUMP JUMPDEST PUSH2 0xB3A JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xAD7 PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xB3E JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB4F DUP4 DUP4 PUSH2 0x65E JUMP JUMPDEST ISZERO PUSH2 0xC24 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBC1 PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC28 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC95 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA9 PUSH0 DUP4 DUP4 PUSH2 0xE7C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD1D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD14 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xE76 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE6D SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF9A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF55 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFE1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x102B JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1088 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x109F DUP3 DUP3 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x10E2 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP3 SWAP2 SWAP1 PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111E DUP2 PUSH2 0x10EA JUMP JUMPDEST DUP2 EQ PUSH2 0x1128 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1139 DUP2 PUSH2 0x1115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1154 JUMPI PUSH2 0x1153 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1161 DUP5 DUP3 DUP6 ADD PUSH2 0x112B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117E DUP2 PUSH2 0x116A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1197 PUSH0 DUP4 ADD DUP5 PUSH2 0x1175 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11D4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11B9 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11F9 DUP3 PUSH2 0x119D JUMP JUMPDEST PUSH2 0x1203 DUP2 DUP6 PUSH2 0x11A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1213 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0x121C DUP2 PUSH2 0x11DF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x123F DUP2 DUP5 PUSH2 0x11EF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1270 DUP3 PUSH2 0x1247 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1280 DUP2 PUSH2 0x1266 JUMP JUMPDEST DUP2 EQ PUSH2 0x128A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x129B DUP2 PUSH2 0x1277 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B3 DUP2 PUSH2 0x12A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x12BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12CE DUP2 PUSH2 0x12AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12EA JUMPI PUSH2 0x12E9 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12F7 DUP6 DUP3 DUP7 ADD PUSH2 0x128D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1308 DUP6 DUP3 DUP7 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x131B DUP2 PUSH2 0x12A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1334 PUSH0 DUP4 ADD DUP5 PUSH2 0x1312 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1351 JUMPI PUSH2 0x1350 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x135E DUP7 DUP3 DUP8 ADD PUSH2 0x128D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x136F DUP7 DUP3 DUP8 ADD PUSH2 0x128D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1380 DUP7 DUP3 DUP8 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139C DUP2 PUSH2 0x138A JUMP JUMPDEST DUP2 EQ PUSH2 0x13A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B7 DUP2 PUSH2 0x1393 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13DF DUP5 DUP3 DUP6 ADD PUSH2 0x13A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13F1 DUP2 PUSH2 0x138A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x140A PUSH0 DUP4 ADD DUP5 PUSH2 0x13E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1426 JUMPI PUSH2 0x1425 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1433 DUP6 DUP3 DUP7 ADD PUSH2 0x13A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1444 DUP6 DUP3 DUP7 ADD PUSH2 0x128D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1463 DUP2 PUSH2 0x144E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x147C PUSH0 DUP4 ADD DUP5 PUSH2 0x145A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1497 JUMPI PUSH2 0x1496 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14A4 DUP5 DUP3 DUP6 ADD PUSH2 0x128D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14C3 JUMPI PUSH2 0x14C2 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14D0 DUP6 DUP3 DUP7 ADD PUSH2 0x128D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14E1 DUP6 DUP3 DUP7 ADD PUSH2 0x128D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x152F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1542 JUMPI PUSH2 0x1541 PUSH2 0x14EB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1551 DUP2 PUSH2 0x1266 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x156A PUSH0 DUP4 ADD DUP7 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x1577 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1312 JUMP JUMPDEST PUSH2 0x1584 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1312 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x159F PUSH0 DUP4 ADD DUP5 PUSH2 0x1548 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15DC DUP3 PUSH2 0x12A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x15E7 DUP4 PUSH2 0x12A1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15FF JUMPI PUSH2 0x15FE PUSH2 0x15A5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1618 PUSH0 DUP4 ADD DUP6 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x1625 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 DUP6 0xAE SWAP12 0xE7 CHAINID DUP10 PUSH5 0x2D7F8E137D 0xD9 0xF7 PUSH29 0xB30C43F65758F68097258C624BF0BB3A64736F6C634300081700330000 ",
							"sourceMap": "180:422:11:-:0;;;302:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;390:44:11::1;2232:4:0;401:18:11::0;::::1;421:12;390:10;;;:44;;:::i;:::-;;445:31;269:24;469:6;445:10;;;:31;;:::i;:::-;;302:182:::0;;180:422;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;180:422:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 1874,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1612": {
									"entryPoint": 1914,
									"id": 1612,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1069": {
									"entryPoint": 2226,
									"id": 1069,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1129": {
									"entryPoint": 3245,
									"id": 1129,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 4245,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 2630,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 2650,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1018": {
									"entryPoint": 3118,
									"id": 1018,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1294": {
									"entryPoint": 2219,
									"id": 1294,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 2884,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1177": {
									"entryPoint": 2244,
									"id": 1177,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_908": {
									"entryPoint": 2390,
									"id": 908,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_985": {
									"entryPoint": 3708,
									"id": 985,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_805": {
									"entryPoint": 1984,
									"id": 805,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_829": {
									"entryPoint": 1221,
									"id": 829,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_764": {
									"entryPoint": 1561,
									"id": 764,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_742": {
									"entryPoint": 1373,
									"id": 742,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 1310,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 1339,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 1630,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_1650": {
									"entryPoint": 1504,
									"id": 1650,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_724": {
									"entryPoint": 1077,
									"id": 724,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 1381,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 1950,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1327": {
									"entryPoint": 2114,
									"id": 1327,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 956,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_733": {
									"entryPoint": 1730,
									"id": 733,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_751": {
									"entryPoint": 1255,
									"id": 751,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_861": {
									"entryPoint": 1264,
									"id": 861,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_788": {
									"entryPoint": 1880,
									"id": 788,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 5637,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5463,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4535,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5541,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5355,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9978:12",
										"nodeType": "YulBlock",
										"src": "0:9978:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1577:40:12",
													"nodeType": "YulBlock",
													"src": "1577:40:12",
													"statements": [
														{
															"nativeSrc": "1588:22:12",
															"nodeType": "YulAssignment",
															"src": "1588:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:12"
																},
																"nativeSrc": "1598:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:12",
														"nodeType": "YulTypedName",
														"src": "1560:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:12",
														"nodeType": "YulTypedName",
														"src": "1570:6:12",
														"type": ""
													}
												],
												"src": "1518:99:12"
											},
											{
												"body": {
													"nativeSrc": "1719:73:12",
													"nodeType": "YulBlock",
													"src": "1719:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:12"
																},
																"nativeSrc": "1729:19:12",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:12"
															},
															"nativeSrc": "1729:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:12"
														},
														{
															"nativeSrc": "1757:29:12",
															"nodeType": "YulAssignment",
															"src": "1757:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nativeSrc": "1772:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:12",
														"nodeType": "YulTypedName",
														"src": "1691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:12",
														"nodeType": "YulTypedName",
														"src": "1696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:12",
														"nodeType": "YulTypedName",
														"src": "1707:11:12",
														"type": ""
													}
												],
												"src": "1623:169:12"
											},
											{
												"body": {
													"nativeSrc": "1860:184:12",
													"nodeType": "YulBlock",
													"src": "1860:184:12",
													"statements": [
														{
															"nativeSrc": "1870:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:12",
																"nodeType": "YulLiteral",
																"src": "1879:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:12",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:12",
																"nodeType": "YulBlock",
																"src": "1939:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:12"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:12"
																					},
																					"nativeSrc": "1960:11:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:12"
																							},
																							"nativeSrc": "1979:11:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:12"
																					},
																					"nativeSrc": "1973:18:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:12"
																			},
																			"nativeSrc": "1953:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:12"
																		},
																		"nativeSrc": "1953:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:12"
																},
																"nativeSrc": "1897:13:12",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:12"
															},
															"nativeSrc": "1889:113:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:12",
																"nodeType": "YulBlock",
																"src": "1911:19:12",
																"statements": [
																	{
																		"nativeSrc": "1913:15:12",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:12",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:12"
																			},
																			"nativeSrc": "1918:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:12",
																"nodeType": "YulBlock",
																"src": "1893:3:12",
																"statements": []
															},
															"src": "1889:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:12"
																		},
																		"nativeSrc": "2018:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:12"
																},
																"nativeSrc": "2011:27:12",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:12"
															},
															"nativeSrc": "2011:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:12",
														"nodeType": "YulTypedName",
														"src": "1842:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:12",
														"nodeType": "YulTypedName",
														"src": "1847:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:12",
														"nodeType": "YulTypedName",
														"src": "1852:6:12",
														"type": ""
													}
												],
												"src": "1798:246:12"
											},
											{
												"body": {
													"nativeSrc": "2098:54:12",
													"nodeType": "YulBlock",
													"src": "2098:54:12",
													"statements": [
														{
															"nativeSrc": "2108:38:12",
															"nodeType": "YulAssignment",
															"src": "2108:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:12"
																		},
																		"nativeSrc": "2122:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:12"
																		},
																		"nativeSrc": "2138:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:12"
																},
																"nativeSrc": "2118:28:12",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:12",
														"nodeType": "YulTypedName",
														"src": "2081:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:12",
														"nodeType": "YulTypedName",
														"src": "2091:6:12",
														"type": ""
													}
												],
												"src": "2050:102:12"
											},
											{
												"body": {
													"nativeSrc": "2250:285:12",
													"nodeType": "YulBlock",
													"src": "2250:285:12",
													"statements": [
														{
															"nativeSrc": "2260:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:12"
																},
																"nativeSrc": "2274:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:12",
															"nodeType": "YulAssignment",
															"src": "2322:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:12"
																},
																"nativeSrc": "2329:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:12"
																		},
																		"nativeSrc": "2444:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:12"
																},
																"nativeSrc": "2409:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:12"
															},
															"nativeSrc": "2409:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:12"
														},
														{
															"nativeSrc": "2483:46:12",
															"nodeType": "YulAssignment",
															"src": "2483:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:12"
																		},
																		"nativeSrc": "2499:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:12"
																},
																"nativeSrc": "2490:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:12",
														"nodeType": "YulTypedName",
														"src": "2231:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:12",
														"nodeType": "YulTypedName",
														"src": "2238:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:12",
														"nodeType": "YulTypedName",
														"src": "2246:3:12",
														"type": ""
													}
												],
												"src": "2158:377:12"
											},
											{
												"body": {
													"nativeSrc": "2659:195:12",
													"nodeType": "YulBlock",
													"src": "2659:195:12",
													"statements": [
														{
															"nativeSrc": "2669:26:12",
															"nodeType": "YulAssignment",
															"src": "2669:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:12"
																},
																"nativeSrc": "2677:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:12"
																		},
																		"nativeSrc": "2712:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:12"
																		},
																		"nativeSrc": "2731:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:12"
																},
																"nativeSrc": "2705:47:12",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:12"
															},
															"nativeSrc": "2705:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:12"
														},
														{
															"nativeSrc": "2761:86:12",
															"nodeType": "YulAssignment",
															"src": "2761:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:12"
																},
																"nativeSrc": "2769:78:12",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:12",
														"nodeType": "YulTypedName",
														"src": "2631:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:12",
														"nodeType": "YulTypedName",
														"src": "2643:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:12",
														"nodeType": "YulTypedName",
														"src": "2654:4:12",
														"type": ""
													}
												],
												"src": "2541:313:12"
											},
											{
												"body": {
													"nativeSrc": "2905:81:12",
													"nodeType": "YulBlock",
													"src": "2905:81:12",
													"statements": [
														{
															"nativeSrc": "2915:65:12",
															"nodeType": "YulAssignment",
															"src": "2915:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2930:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2930:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2937:42:12",
																		"nodeType": "YulLiteral",
																		"src": "2937:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2926:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2926:3:12"
																},
																"nativeSrc": "2926:54:12",
																"nodeType": "YulFunctionCall",
																"src": "2926:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2860:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:12",
														"nodeType": "YulTypedName",
														"src": "2887:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:12",
														"nodeType": "YulTypedName",
														"src": "2897:7:12",
														"type": ""
													}
												],
												"src": "2860:126:12"
											},
											{
												"body": {
													"nativeSrc": "3037:51:12",
													"nodeType": "YulBlock",
													"src": "3037:51:12",
													"statements": [
														{
															"nativeSrc": "3047:35:12",
															"nodeType": "YulAssignment",
															"src": "3047:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3076:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3076:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3058:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "3058:17:12"
																},
																"nativeSrc": "3058:24:12",
																"nodeType": "YulFunctionCall",
																"src": "3058:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3047:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3047:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2992:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3019:5:12",
														"nodeType": "YulTypedName",
														"src": "3019:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3029:7:12",
														"nodeType": "YulTypedName",
														"src": "3029:7:12",
														"type": ""
													}
												],
												"src": "2992:96:12"
											},
											{
												"body": {
													"nativeSrc": "3137:79:12",
													"nodeType": "YulBlock",
													"src": "3137:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3194:16:12",
																"nodeType": "YulBlock",
																"src": "3194:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3203:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3203:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3206:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3206:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3196:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3196:6:12"
																			},
																			"nativeSrc": "3196:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3196:12:12"
																		},
																		"nativeSrc": "3196:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3196:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3160:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3160:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3185:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3185:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3167:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3167:17:12"
																				},
																				"nativeSrc": "3167:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3167:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3157:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3157:2:12"
																		},
																		"nativeSrc": "3157:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3157:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3150:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3150:6:12"
																},
																"nativeSrc": "3150:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3150:43:12"
															},
															"nativeSrc": "3147:63:12",
															"nodeType": "YulIf",
															"src": "3147:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3094:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3130:5:12",
														"nodeType": "YulTypedName",
														"src": "3130:5:12",
														"type": ""
													}
												],
												"src": "3094:122:12"
											},
											{
												"body": {
													"nativeSrc": "3274:87:12",
													"nodeType": "YulBlock",
													"src": "3274:87:12",
													"statements": [
														{
															"nativeSrc": "3284:29:12",
															"nodeType": "YulAssignment",
															"src": "3284:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3306:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3306:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3293:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3293:12:12"
																},
																"nativeSrc": "3293:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3293:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3284:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3284:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3349:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3349:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3322:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3322:26:12"
																},
																"nativeSrc": "3322:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3322:33:12"
															},
															"nativeSrc": "3322:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3322:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3222:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3252:6:12",
														"nodeType": "YulTypedName",
														"src": "3252:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3260:3:12",
														"nodeType": "YulTypedName",
														"src": "3260:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3268:5:12",
														"nodeType": "YulTypedName",
														"src": "3268:5:12",
														"type": ""
													}
												],
												"src": "3222:139:12"
											},
											{
												"body": {
													"nativeSrc": "3412:32:12",
													"nodeType": "YulBlock",
													"src": "3412:32:12",
													"statements": [
														{
															"nativeSrc": "3422:16:12",
															"nodeType": "YulAssignment",
															"src": "3422:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "3433:5:12",
																"nodeType": "YulIdentifier",
																"src": "3433:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3422:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3422:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3367:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3394:5:12",
														"nodeType": "YulTypedName",
														"src": "3394:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3404:7:12",
														"nodeType": "YulTypedName",
														"src": "3404:7:12",
														"type": ""
													}
												],
												"src": "3367:77:12"
											},
											{
												"body": {
													"nativeSrc": "3493:79:12",
													"nodeType": "YulBlock",
													"src": "3493:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3550:16:12",
																"nodeType": "YulBlock",
																"src": "3550:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3559:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3559:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3562:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3562:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3552:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3552:6:12"
																			},
																			"nativeSrc": "3552:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3552:12:12"
																		},
																		"nativeSrc": "3552:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3552:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3516:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3516:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3541:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3541:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3523:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3523:17:12"
																				},
																				"nativeSrc": "3523:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3523:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3513:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3513:2:12"
																		},
																		"nativeSrc": "3513:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3513:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3506:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3506:6:12"
																},
																"nativeSrc": "3506:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3506:43:12"
															},
															"nativeSrc": "3503:63:12",
															"nodeType": "YulIf",
															"src": "3503:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3450:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3486:5:12",
														"nodeType": "YulTypedName",
														"src": "3486:5:12",
														"type": ""
													}
												],
												"src": "3450:122:12"
											},
											{
												"body": {
													"nativeSrc": "3630:87:12",
													"nodeType": "YulBlock",
													"src": "3630:87:12",
													"statements": [
														{
															"nativeSrc": "3640:29:12",
															"nodeType": "YulAssignment",
															"src": "3640:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3662:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3662:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3649:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3649:12:12"
																},
																"nativeSrc": "3649:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3649:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3640:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3640:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3705:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3705:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3678:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3678:26:12"
																},
																"nativeSrc": "3678:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3678:33:12"
															},
															"nativeSrc": "3678:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3678:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3578:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3608:6:12",
														"nodeType": "YulTypedName",
														"src": "3608:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3616:3:12",
														"nodeType": "YulTypedName",
														"src": "3616:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3624:5:12",
														"nodeType": "YulTypedName",
														"src": "3624:5:12",
														"type": ""
													}
												],
												"src": "3578:139:12"
											},
											{
												"body": {
													"nativeSrc": "3806:391:12",
													"nodeType": "YulBlock",
													"src": "3806:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3852:83:12",
																"nodeType": "YulBlock",
																"src": "3852:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3854:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3854:77:12"
																			},
																			"nativeSrc": "3854:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3854:79:12"
																		},
																		"nativeSrc": "3854:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3854:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3827:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3827:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3836:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3836:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3823:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:12"
																		},
																		"nativeSrc": "3823:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3823:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3848:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3819:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3819:3:12"
																},
																"nativeSrc": "3819:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3819:32:12"
															},
															"nativeSrc": "3816:119:12",
															"nodeType": "YulIf",
															"src": "3816:119:12"
														},
														{
															"nativeSrc": "3945:117:12",
															"nodeType": "YulBlock",
															"src": "3945:117:12",
															"statements": [
																{
																	"nativeSrc": "3960:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3960:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3974:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3964:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3964:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3989:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3989:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4024:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4024:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4035:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4035:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4020:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4020:3:12"
																				},
																				"nativeSrc": "4020:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4020:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4044:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4044:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3999:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3999:20:12"
																		},
																		"nativeSrc": "3999:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3989:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3989:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4072:118:12",
															"nodeType": "YulBlock",
															"src": "4072:118:12",
															"statements": [
																{
																	"nativeSrc": "4087:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4087:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4101:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4101:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4091:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4091:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4117:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4117:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4152:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4152:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4163:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4163:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4148:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4148:3:12"
																				},
																				"nativeSrc": "4148:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4148:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4172:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4172:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4127:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4127:20:12"
																		},
																		"nativeSrc": "4127:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4127:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4117:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4117:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3723:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3768:9:12",
														"nodeType": "YulTypedName",
														"src": "3768:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3779:7:12",
														"nodeType": "YulTypedName",
														"src": "3779:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3791:6:12",
														"nodeType": "YulTypedName",
														"src": "3791:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3799:6:12",
														"nodeType": "YulTypedName",
														"src": "3799:6:12",
														"type": ""
													}
												],
												"src": "3723:474:12"
											},
											{
												"body": {
													"nativeSrc": "4268:53:12",
													"nodeType": "YulBlock",
													"src": "4268:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4285:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4285:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4308:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4308:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4290:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4290:17:12"
																		},
																		"nativeSrc": "4290:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4290:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4278:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:12"
																},
																"nativeSrc": "4278:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4278:37:12"
															},
															"nativeSrc": "4278:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "4278:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4203:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4256:5:12",
														"nodeType": "YulTypedName",
														"src": "4256:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4263:3:12",
														"nodeType": "YulTypedName",
														"src": "4263:3:12",
														"type": ""
													}
												],
												"src": "4203:118:12"
											},
											{
												"body": {
													"nativeSrc": "4425:124:12",
													"nodeType": "YulBlock",
													"src": "4425:124:12",
													"statements": [
														{
															"nativeSrc": "4435:26:12",
															"nodeType": "YulAssignment",
															"src": "4435:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4447:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4447:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4458:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4458:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4443:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4443:3:12"
																},
																"nativeSrc": "4443:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4443:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4435:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4435:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4515:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4515:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4528:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4528:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4539:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4539:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4524:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4524:3:12"
																		},
																		"nativeSrc": "4524:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4524:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4471:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4471:43:12"
																},
																"nativeSrc": "4471:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4471:71:12"
															},
															"nativeSrc": "4471:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "4471:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4327:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4397:9:12",
														"nodeType": "YulTypedName",
														"src": "4397:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4409:6:12",
														"nodeType": "YulTypedName",
														"src": "4409:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4420:4:12",
														"nodeType": "YulTypedName",
														"src": "4420:4:12",
														"type": ""
													}
												],
												"src": "4327:222:12"
											},
											{
												"body": {
													"nativeSrc": "4655:519:12",
													"nodeType": "YulBlock",
													"src": "4655:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4701:83:12",
																"nodeType": "YulBlock",
																"src": "4701:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4703:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4703:77:12"
																			},
																			"nativeSrc": "4703:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4703:79:12"
																		},
																		"nativeSrc": "4703:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4703:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4676:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4676:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4685:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4685:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4672:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4672:3:12"
																		},
																		"nativeSrc": "4672:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4672:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4697:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4697:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4668:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4668:3:12"
																},
																"nativeSrc": "4668:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4668:32:12"
															},
															"nativeSrc": "4665:119:12",
															"nodeType": "YulIf",
															"src": "4665:119:12"
														},
														{
															"nativeSrc": "4794:117:12",
															"nodeType": "YulBlock",
															"src": "4794:117:12",
															"statements": [
																{
																	"nativeSrc": "4809:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4809:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4823:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4823:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4813:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4813:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4838:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4838:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4873:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4873:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4884:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4884:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4869:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4869:3:12"
																				},
																				"nativeSrc": "4869:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4869:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4893:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4893:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4848:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4848:20:12"
																		},
																		"nativeSrc": "4848:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4848:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4838:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4838:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4921:118:12",
															"nodeType": "YulBlock",
															"src": "4921:118:12",
															"statements": [
																{
																	"nativeSrc": "4936:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4936:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4950:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4950:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4940:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4940:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4966:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4966:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5001:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5001:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5012:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5012:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4997:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4997:3:12"
																				},
																				"nativeSrc": "4997:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4997:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5021:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5021:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4976:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4976:20:12"
																		},
																		"nativeSrc": "4976:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4976:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4966:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4966:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5049:118:12",
															"nodeType": "YulBlock",
															"src": "5049:118:12",
															"statements": [
																{
																	"nativeSrc": "5064:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5064:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5078:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5078:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5068:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5068:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5094:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5094:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5129:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5129:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5140:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5140:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5125:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5125:3:12"
																				},
																				"nativeSrc": "5125:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5125:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5149:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5149:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5104:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5104:20:12"
																		},
																		"nativeSrc": "5104:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5104:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5094:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5094:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4555:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4609:9:12",
														"nodeType": "YulTypedName",
														"src": "4609:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4620:7:12",
														"nodeType": "YulTypedName",
														"src": "4620:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4632:6:12",
														"nodeType": "YulTypedName",
														"src": "4632:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4640:6:12",
														"nodeType": "YulTypedName",
														"src": "4640:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4648:6:12",
														"nodeType": "YulTypedName",
														"src": "4648:6:12",
														"type": ""
													}
												],
												"src": "4555:619:12"
											},
											{
												"body": {
													"nativeSrc": "5225:32:12",
													"nodeType": "YulBlock",
													"src": "5225:32:12",
													"statements": [
														{
															"nativeSrc": "5235:16:12",
															"nodeType": "YulAssignment",
															"src": "5235:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "5246:5:12",
																"nodeType": "YulIdentifier",
																"src": "5246:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5235:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5235:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5180:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5207:5:12",
														"nodeType": "YulTypedName",
														"src": "5207:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5217:7:12",
														"nodeType": "YulTypedName",
														"src": "5217:7:12",
														"type": ""
													}
												],
												"src": "5180:77:12"
											},
											{
												"body": {
													"nativeSrc": "5306:79:12",
													"nodeType": "YulBlock",
													"src": "5306:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5363:16:12",
																"nodeType": "YulBlock",
																"src": "5363:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5372:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5372:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5375:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5375:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5365:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5365:6:12"
																			},
																			"nativeSrc": "5365:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5365:12:12"
																		},
																		"nativeSrc": "5365:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5365:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5329:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5329:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5354:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5354:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5336:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5336:17:12"
																				},
																				"nativeSrc": "5336:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5336:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5326:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5326:2:12"
																		},
																		"nativeSrc": "5326:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5326:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5319:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5319:6:12"
																},
																"nativeSrc": "5319:43:12",
																"nodeType": "YulFunctionCall",
																"src": "5319:43:12"
															},
															"nativeSrc": "5316:63:12",
															"nodeType": "YulIf",
															"src": "5316:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5263:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5299:5:12",
														"nodeType": "YulTypedName",
														"src": "5299:5:12",
														"type": ""
													}
												],
												"src": "5263:122:12"
											},
											{
												"body": {
													"nativeSrc": "5443:87:12",
													"nodeType": "YulBlock",
													"src": "5443:87:12",
													"statements": [
														{
															"nativeSrc": "5453:29:12",
															"nodeType": "YulAssignment",
															"src": "5453:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5475:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5475:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5462:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5462:12:12"
																},
																"nativeSrc": "5462:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5462:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5453:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5453:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5518:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5518:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5491:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "5491:26:12"
																},
																"nativeSrc": "5491:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5491:33:12"
															},
															"nativeSrc": "5491:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "5491:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5391:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5421:6:12",
														"nodeType": "YulTypedName",
														"src": "5421:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5429:3:12",
														"nodeType": "YulTypedName",
														"src": "5429:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5437:5:12",
														"nodeType": "YulTypedName",
														"src": "5437:5:12",
														"type": ""
													}
												],
												"src": "5391:139:12"
											},
											{
												"body": {
													"nativeSrc": "5602:263:12",
													"nodeType": "YulBlock",
													"src": "5602:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5648:83:12",
																"nodeType": "YulBlock",
																"src": "5648:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5650:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5650:77:12"
																			},
																			"nativeSrc": "5650:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5650:79:12"
																		},
																		"nativeSrc": "5650:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5650:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5623:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5623:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5632:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5632:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5619:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5619:3:12"
																		},
																		"nativeSrc": "5619:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5619:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5644:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5644:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5615:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5615:3:12"
																},
																"nativeSrc": "5615:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5615:32:12"
															},
															"nativeSrc": "5612:119:12",
															"nodeType": "YulIf",
															"src": "5612:119:12"
														},
														{
															"nativeSrc": "5741:117:12",
															"nodeType": "YulBlock",
															"src": "5741:117:12",
															"statements": [
																{
																	"nativeSrc": "5756:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5756:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5770:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5770:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5760:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5760:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5785:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5785:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5820:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5820:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5831:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5831:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5816:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5816:3:12"
																				},
																				"nativeSrc": "5816:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5816:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5840:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5840:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5795:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5795:20:12"
																		},
																		"nativeSrc": "5795:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5795:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5785:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5785:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5536:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5572:9:12",
														"nodeType": "YulTypedName",
														"src": "5572:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5583:7:12",
														"nodeType": "YulTypedName",
														"src": "5583:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5595:6:12",
														"nodeType": "YulTypedName",
														"src": "5595:6:12",
														"type": ""
													}
												],
												"src": "5536:329:12"
											},
											{
												"body": {
													"nativeSrc": "5936:53:12",
													"nodeType": "YulBlock",
													"src": "5936:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5953:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5953:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5976:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5976:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5958:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5958:17:12"
																		},
																		"nativeSrc": "5958:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5958:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5946:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5946:6:12"
																},
																"nativeSrc": "5946:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5946:37:12"
															},
															"nativeSrc": "5946:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5946:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5871:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5924:5:12",
														"nodeType": "YulTypedName",
														"src": "5924:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5931:3:12",
														"nodeType": "YulTypedName",
														"src": "5931:3:12",
														"type": ""
													}
												],
												"src": "5871:118:12"
											},
											{
												"body": {
													"nativeSrc": "6093:124:12",
													"nodeType": "YulBlock",
													"src": "6093:124:12",
													"statements": [
														{
															"nativeSrc": "6103:26:12",
															"nodeType": "YulAssignment",
															"src": "6103:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6115:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6115:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6126:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6126:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6111:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6111:3:12"
																},
																"nativeSrc": "6111:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6111:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6103:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6103:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6183:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6183:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6196:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6207:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6207:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6192:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:12"
																		},
																		"nativeSrc": "6192:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6192:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6139:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6139:43:12"
																},
																"nativeSrc": "6139:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6139:71:12"
															},
															"nativeSrc": "6139:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6139:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5995:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6065:9:12",
														"nodeType": "YulTypedName",
														"src": "6065:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6077:6:12",
														"nodeType": "YulTypedName",
														"src": "6077:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6088:4:12",
														"nodeType": "YulTypedName",
														"src": "6088:4:12",
														"type": ""
													}
												],
												"src": "5995:222:12"
											},
											{
												"body": {
													"nativeSrc": "6306:391:12",
													"nodeType": "YulBlock",
													"src": "6306:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6352:83:12",
																"nodeType": "YulBlock",
																"src": "6352:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6354:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6354:77:12"
																			},
																			"nativeSrc": "6354:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6354:79:12"
																		},
																		"nativeSrc": "6354:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6354:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6327:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6327:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6336:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6336:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6323:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6323:3:12"
																		},
																		"nativeSrc": "6323:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6323:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6348:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6348:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6319:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6319:3:12"
																},
																"nativeSrc": "6319:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6319:32:12"
															},
															"nativeSrc": "6316:119:12",
															"nodeType": "YulIf",
															"src": "6316:119:12"
														},
														{
															"nativeSrc": "6445:117:12",
															"nodeType": "YulBlock",
															"src": "6445:117:12",
															"statements": [
																{
																	"nativeSrc": "6460:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6460:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6474:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6474:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6464:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6464:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6489:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6489:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6524:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6524:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6535:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6535:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6520:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6520:3:12"
																				},
																				"nativeSrc": "6520:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6520:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6544:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6544:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6499:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6499:20:12"
																		},
																		"nativeSrc": "6499:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6499:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6489:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6489:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6572:118:12",
															"nodeType": "YulBlock",
															"src": "6572:118:12",
															"statements": [
																{
																	"nativeSrc": "6587:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6587:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6601:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6601:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6591:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6591:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6617:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6617:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6652:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6652:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6663:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6663:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6648:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6648:3:12"
																				},
																				"nativeSrc": "6648:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6648:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6672:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6672:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6627:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6627:20:12"
																		},
																		"nativeSrc": "6627:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6627:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6617:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6617:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6223:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6268:9:12",
														"nodeType": "YulTypedName",
														"src": "6268:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6279:7:12",
														"nodeType": "YulTypedName",
														"src": "6279:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6291:6:12",
														"nodeType": "YulTypedName",
														"src": "6291:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6299:6:12",
														"nodeType": "YulTypedName",
														"src": "6299:6:12",
														"type": ""
													}
												],
												"src": "6223:474:12"
											},
											{
												"body": {
													"nativeSrc": "6746:43:12",
													"nodeType": "YulBlock",
													"src": "6746:43:12",
													"statements": [
														{
															"nativeSrc": "6756:27:12",
															"nodeType": "YulAssignment",
															"src": "6756:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6771:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6771:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6778:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6778:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6767:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6767:3:12"
																},
																"nativeSrc": "6767:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6767:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6756:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "6756:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6703:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6728:5:12",
														"nodeType": "YulTypedName",
														"src": "6728:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6738:7:12",
														"nodeType": "YulTypedName",
														"src": "6738:7:12",
														"type": ""
													}
												],
												"src": "6703:86:12"
											},
											{
												"body": {
													"nativeSrc": "6856:51:12",
													"nodeType": "YulBlock",
													"src": "6856:51:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6873:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6873:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6894:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6894:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6878:15:12",
																			"nodeType": "YulIdentifier",
																			"src": "6878:15:12"
																		},
																		"nativeSrc": "6878:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6878:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6866:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6866:6:12"
																},
																"nativeSrc": "6866:35:12",
																"nodeType": "YulFunctionCall",
																"src": "6866:35:12"
															},
															"nativeSrc": "6866:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "6866:35:12"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6795:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6844:5:12",
														"nodeType": "YulTypedName",
														"src": "6844:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6851:3:12",
														"nodeType": "YulTypedName",
														"src": "6851:3:12",
														"type": ""
													}
												],
												"src": "6795:112:12"
											},
											{
												"body": {
													"nativeSrc": "7007:120:12",
													"nodeType": "YulBlock",
													"src": "7007:120:12",
													"statements": [
														{
															"nativeSrc": "7017:26:12",
															"nodeType": "YulAssignment",
															"src": "7017:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7029:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7029:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7040:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7040:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7025:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7025:3:12"
																},
																"nativeSrc": "7025:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7025:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7017:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7017:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7093:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7093:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7106:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7106:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7117:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7117:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7102:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7102:3:12"
																		},
																		"nativeSrc": "7102:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7102:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7053:39:12",
																	"nodeType": "YulIdentifier",
																	"src": "7053:39:12"
																},
																"nativeSrc": "7053:67:12",
																"nodeType": "YulFunctionCall",
																"src": "7053:67:12"
															},
															"nativeSrc": "7053:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "7053:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6913:214:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6979:9:12",
														"nodeType": "YulTypedName",
														"src": "6979:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6991:6:12",
														"nodeType": "YulTypedName",
														"src": "6991:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7002:4:12",
														"nodeType": "YulTypedName",
														"src": "7002:4:12",
														"type": ""
													}
												],
												"src": "6913:214:12"
											},
											{
												"body": {
													"nativeSrc": "7199:263:12",
													"nodeType": "YulBlock",
													"src": "7199:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7245:83:12",
																"nodeType": "YulBlock",
																"src": "7245:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7247:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7247:77:12"
																			},
																			"nativeSrc": "7247:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7247:79:12"
																		},
																		"nativeSrc": "7247:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7247:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7220:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7220:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7229:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7229:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7216:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7216:3:12"
																		},
																		"nativeSrc": "7216:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7216:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7241:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7241:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7212:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7212:3:12"
																},
																"nativeSrc": "7212:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7212:32:12"
															},
															"nativeSrc": "7209:119:12",
															"nodeType": "YulIf",
															"src": "7209:119:12"
														},
														{
															"nativeSrc": "7338:117:12",
															"nodeType": "YulBlock",
															"src": "7338:117:12",
															"statements": [
																{
																	"nativeSrc": "7353:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7353:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7367:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7367:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7357:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7357:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7382:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7382:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7417:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7417:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7428:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7428:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7413:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7413:3:12"
																				},
																				"nativeSrc": "7413:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7413:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7437:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7437:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7392:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7392:20:12"
																		},
																		"nativeSrc": "7392:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7392:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7382:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7382:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7133:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7169:9:12",
														"nodeType": "YulTypedName",
														"src": "7169:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7180:7:12",
														"nodeType": "YulTypedName",
														"src": "7180:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7192:6:12",
														"nodeType": "YulTypedName",
														"src": "7192:6:12",
														"type": ""
													}
												],
												"src": "7133:329:12"
											},
											{
												"body": {
													"nativeSrc": "7551:391:12",
													"nodeType": "YulBlock",
													"src": "7551:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7597:83:12",
																"nodeType": "YulBlock",
																"src": "7597:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7599:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7599:77:12"
																			},
																			"nativeSrc": "7599:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7599:79:12"
																		},
																		"nativeSrc": "7599:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7599:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7572:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7572:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7581:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7581:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7568:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7568:3:12"
																		},
																		"nativeSrc": "7568:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7568:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7593:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7593:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7564:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7564:3:12"
																},
																"nativeSrc": "7564:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7564:32:12"
															},
															"nativeSrc": "7561:119:12",
															"nodeType": "YulIf",
															"src": "7561:119:12"
														},
														{
															"nativeSrc": "7690:117:12",
															"nodeType": "YulBlock",
															"src": "7690:117:12",
															"statements": [
																{
																	"nativeSrc": "7705:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7705:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7719:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7719:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7709:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7709:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7734:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7734:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7769:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7769:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7780:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7780:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7765:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7765:3:12"
																				},
																				"nativeSrc": "7765:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7765:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7789:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7789:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7744:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7744:20:12"
																		},
																		"nativeSrc": "7744:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7744:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7734:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7734:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7817:118:12",
															"nodeType": "YulBlock",
															"src": "7817:118:12",
															"statements": [
																{
																	"nativeSrc": "7832:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7832:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7846:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7846:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7836:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7836:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7862:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7862:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7897:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7897:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7908:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7908:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7893:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7893:3:12"
																				},
																				"nativeSrc": "7893:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7893:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7917:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7917:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7872:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7872:20:12"
																		},
																		"nativeSrc": "7872:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7872:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7862:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7862:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7468:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7513:9:12",
														"nodeType": "YulTypedName",
														"src": "7513:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7524:7:12",
														"nodeType": "YulTypedName",
														"src": "7524:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7536:6:12",
														"nodeType": "YulTypedName",
														"src": "7536:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7544:6:12",
														"nodeType": "YulTypedName",
														"src": "7544:6:12",
														"type": ""
													}
												],
												"src": "7468:474:12"
											},
											{
												"body": {
													"nativeSrc": "7976:152:12",
													"nodeType": "YulBlock",
													"src": "7976:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7993:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7993:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7996:77:12",
																		"nodeType": "YulLiteral",
																		"src": "7996:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7986:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7986:6:12"
																},
																"nativeSrc": "7986:88:12",
																"nodeType": "YulFunctionCall",
																"src": "7986:88:12"
															},
															"nativeSrc": "7986:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "7986:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8090:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8090:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8093:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8093:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8083:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8083:6:12"
																},
																"nativeSrc": "8083:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8083:15:12"
															},
															"nativeSrc": "8083:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8083:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8114:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8114:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8117:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8117:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8107:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8107:6:12"
																},
																"nativeSrc": "8107:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8107:15:12"
															},
															"nativeSrc": "8107:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8107:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7948:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7948:180:12"
											},
											{
												"body": {
													"nativeSrc": "8185:269:12",
													"nodeType": "YulBlock",
													"src": "8185:269:12",
													"statements": [
														{
															"nativeSrc": "8195:22:12",
															"nodeType": "YulAssignment",
															"src": "8195:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8209:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8209:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8215:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8215:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8205:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8205:3:12"
																},
																"nativeSrc": "8205:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8205:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8195:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8195:6:12"
																}
															]
														},
														{
															"nativeSrc": "8226:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8226:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8256:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8256:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8262:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8262:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8252:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8252:3:12"
																},
																"nativeSrc": "8252:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8252:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8230:18:12",
																	"nodeType": "YulTypedName",
																	"src": "8230:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8303:51:12",
																"nodeType": "YulBlock",
																"src": "8303:51:12",
																"statements": [
																	{
																		"nativeSrc": "8317:27:12",
																		"nodeType": "YulAssignment",
																		"src": "8317:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8331:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8331:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8339:4:12",
																					"nodeType": "YulLiteral",
																					"src": "8339:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8327:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8327:3:12"
																			},
																			"nativeSrc": "8327:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8327:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8317:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8317:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8283:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "8283:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8276:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8276:6:12"
																},
																"nativeSrc": "8276:26:12",
																"nodeType": "YulFunctionCall",
																"src": "8276:26:12"
															},
															"nativeSrc": "8273:81:12",
															"nodeType": "YulIf",
															"src": "8273:81:12"
														},
														{
															"body": {
																"nativeSrc": "8406:42:12",
																"nodeType": "YulBlock",
																"src": "8406:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8420:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8420:16:12"
																			},
																			"nativeSrc": "8420:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8420:18:12"
																		},
																		"nativeSrc": "8420:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8420:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8370:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "8370:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8393:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8393:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8401:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8401:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8390:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8390:2:12"
																		},
																		"nativeSrc": "8390:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8390:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8367:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8367:2:12"
																},
																"nativeSrc": "8367:38:12",
																"nodeType": "YulFunctionCall",
																"src": "8367:38:12"
															},
															"nativeSrc": "8364:84:12",
															"nodeType": "YulIf",
															"src": "8364:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8134:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8169:4:12",
														"nodeType": "YulTypedName",
														"src": "8169:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8178:6:12",
														"nodeType": "YulTypedName",
														"src": "8178:6:12",
														"type": ""
													}
												],
												"src": "8134:320:12"
											},
											{
												"body": {
													"nativeSrc": "8525:53:12",
													"nodeType": "YulBlock",
													"src": "8525:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8542:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8542:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8565:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "8565:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8547:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "8547:17:12"
																		},
																		"nativeSrc": "8547:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8547:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8535:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8535:6:12"
																},
																"nativeSrc": "8535:37:12",
																"nodeType": "YulFunctionCall",
																"src": "8535:37:12"
															},
															"nativeSrc": "8535:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "8535:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8460:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8513:5:12",
														"nodeType": "YulTypedName",
														"src": "8513:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8520:3:12",
														"nodeType": "YulTypedName",
														"src": "8520:3:12",
														"type": ""
													}
												],
												"src": "8460:118:12"
											},
											{
												"body": {
													"nativeSrc": "8738:288:12",
													"nodeType": "YulBlock",
													"src": "8738:288:12",
													"statements": [
														{
															"nativeSrc": "8748:26:12",
															"nodeType": "YulAssignment",
															"src": "8748:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8760:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8760:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8771:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8771:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8756:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8756:3:12"
																},
																"nativeSrc": "8756:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8756:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8748:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8748:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8828:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8828:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8841:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8841:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8852:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8852:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8837:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8837:3:12"
																		},
																		"nativeSrc": "8837:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8837:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8784:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "8784:43:12"
																},
																"nativeSrc": "8784:71:12",
																"nodeType": "YulFunctionCall",
																"src": "8784:71:12"
															},
															"nativeSrc": "8784:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "8784:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8909:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8909:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8922:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8922:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8933:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8933:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8918:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8918:3:12"
																		},
																		"nativeSrc": "8918:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8918:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8865:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "8865:43:12"
																},
																"nativeSrc": "8865:72:12",
																"nodeType": "YulFunctionCall",
																"src": "8865:72:12"
															},
															"nativeSrc": "8865:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "8865:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8991:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8991:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9004:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9004:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9015:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9015:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9000:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9000:3:12"
																		},
																		"nativeSrc": "9000:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9000:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8947:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "8947:43:12"
																},
																"nativeSrc": "8947:72:12",
																"nodeType": "YulFunctionCall",
																"src": "8947:72:12"
															},
															"nativeSrc": "8947:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "8947:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8584:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8694:9:12",
														"nodeType": "YulTypedName",
														"src": "8694:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8706:6:12",
														"nodeType": "YulTypedName",
														"src": "8706:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8714:6:12",
														"nodeType": "YulTypedName",
														"src": "8714:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8722:6:12",
														"nodeType": "YulTypedName",
														"src": "8722:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8733:4:12",
														"nodeType": "YulTypedName",
														"src": "8733:4:12",
														"type": ""
													}
												],
												"src": "8584:442:12"
											},
											{
												"body": {
													"nativeSrc": "9130:124:12",
													"nodeType": "YulBlock",
													"src": "9130:124:12",
													"statements": [
														{
															"nativeSrc": "9140:26:12",
															"nodeType": "YulAssignment",
															"src": "9140:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9152:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9152:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9163:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9163:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9148:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9148:3:12"
																},
																"nativeSrc": "9148:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9148:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9140:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9140:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9220:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9220:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9233:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9233:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9244:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9244:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9229:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9229:3:12"
																		},
																		"nativeSrc": "9229:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9229:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9176:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9176:43:12"
																},
																"nativeSrc": "9176:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9176:71:12"
															},
															"nativeSrc": "9176:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9176:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9032:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9102:9:12",
														"nodeType": "YulTypedName",
														"src": "9102:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9114:6:12",
														"nodeType": "YulTypedName",
														"src": "9114:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9125:4:12",
														"nodeType": "YulTypedName",
														"src": "9125:4:12",
														"type": ""
													}
												],
												"src": "9032:222:12"
											},
											{
												"body": {
													"nativeSrc": "9288:152:12",
													"nodeType": "YulBlock",
													"src": "9288:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9305:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9305:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9308:77:12",
																		"nodeType": "YulLiteral",
																		"src": "9308:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9298:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9298:6:12"
																},
																"nativeSrc": "9298:88:12",
																"nodeType": "YulFunctionCall",
																"src": "9298:88:12"
															},
															"nativeSrc": "9298:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "9298:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9402:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9402:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9405:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9405:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9395:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9395:6:12"
																},
																"nativeSrc": "9395:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9395:15:12"
															},
															"nativeSrc": "9395:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9395:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9426:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9426:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9429:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9429:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9419:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9419:6:12"
																},
																"nativeSrc": "9419:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9419:15:12"
															},
															"nativeSrc": "9419:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9419:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9260:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "9260:180:12"
											},
											{
												"body": {
													"nativeSrc": "9490:147:12",
													"nodeType": "YulBlock",
													"src": "9490:147:12",
													"statements": [
														{
															"nativeSrc": "9500:25:12",
															"nodeType": "YulAssignment",
															"src": "9500:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9523:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9523:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9505:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9505:17:12"
																},
																"nativeSrc": "9505:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9505:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9500:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9500:1:12"
																}
															]
														},
														{
															"nativeSrc": "9534:25:12",
															"nodeType": "YulAssignment",
															"src": "9534:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9557:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9557:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9539:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9539:17:12"
																},
																"nativeSrc": "9539:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9539:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9534:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9534:1:12"
																}
															]
														},
														{
															"nativeSrc": "9568:16:12",
															"nodeType": "YulAssignment",
															"src": "9568:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9579:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9579:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9582:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9582:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9575:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9575:3:12"
																},
																"nativeSrc": "9575:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9575:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9568:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9568:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9608:22:12",
																"nodeType": "YulBlock",
																"src": "9608:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9610:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9610:16:12"
																			},
																			"nativeSrc": "9610:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9610:18:12"
																		},
																		"nativeSrc": "9610:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9610:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9600:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9600:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9603:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9603:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9597:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9597:2:12"
																},
																"nativeSrc": "9597:10:12",
																"nodeType": "YulFunctionCall",
																"src": "9597:10:12"
															},
															"nativeSrc": "9594:36:12",
															"nodeType": "YulIf",
															"src": "9594:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9446:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9477:1:12",
														"nodeType": "YulTypedName",
														"src": "9477:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9480:1:12",
														"nodeType": "YulTypedName",
														"src": "9480:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9486:3:12",
														"nodeType": "YulTypedName",
														"src": "9486:3:12",
														"type": ""
													}
												],
												"src": "9446:191:12"
											},
											{
												"body": {
													"nativeSrc": "9769:206:12",
													"nodeType": "YulBlock",
													"src": "9769:206:12",
													"statements": [
														{
															"nativeSrc": "9779:26:12",
															"nodeType": "YulAssignment",
															"src": "9779:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9791:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9791:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9802:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9802:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9787:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9787:3:12"
																},
																"nativeSrc": "9787:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9787:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9779:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9779:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9859:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9859:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9872:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9872:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9883:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9883:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9868:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9868:3:12"
																		},
																		"nativeSrc": "9868:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9868:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9815:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9815:43:12"
																},
																"nativeSrc": "9815:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9815:71:12"
															},
															"nativeSrc": "9815:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9815:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9940:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9940:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9953:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9953:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9964:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9964:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9949:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9949:3:12"
																		},
																		"nativeSrc": "9949:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9949:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9896:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9896:43:12"
																},
																"nativeSrc": "9896:72:12",
																"nodeType": "YulFunctionCall",
																"src": "9896:72:12"
															},
															"nativeSrc": "9896:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "9896:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "9643:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9733:9:12",
														"nodeType": "YulTypedName",
														"src": "9733:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9745:6:12",
														"nodeType": "YulTypedName",
														"src": "9745:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9753:6:12",
														"nodeType": "YulTypedName",
														"src": "9753:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9764:4:12",
														"nodeType": "YulTypedName",
														"src": "9764:4:12",
														"type": ""
													}
												],
												"src": "9643:332:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610114575f3560e01c806340c10f19116100a0578063a217fddf1161006f578063a217fddf14610304578063a9059cbb14610322578063d539139314610352578063d547741f14610370578063dd62ed3e1461038c57610114565b806340c10f191461026a57806370a082311461028657806391d14854146102b657806395d89b41146102e657610114565b806323b872dd116100e757806323b872dd146101b4578063248a9ca3146101e45780632f2ff15d14610214578063313ce5671461023057806336568abe1461024e57610114565b806301ffc9a71461011857806306fdde0314610148578063095ea7b31461016657806318160ddd14610196575b5f80fd5b610132600480360381019061012d919061113f565b6103bc565b60405161013f9190611184565b60405180910390f35b610150610435565b60405161015d9190611227565b60405180910390f35b610180600480360381019061017b91906112d4565b6104c5565b60405161018d9190611184565b60405180910390f35b61019e6104e7565b6040516101ab9190611321565b60405180910390f35b6101ce60048036038101906101c9919061133a565b6104f0565b6040516101db9190611184565b60405180910390f35b6101fe60048036038101906101f991906113bd565b61051e565b60405161020b91906113f7565b60405180910390f35b61022e60048036038101906102299190611410565b61053b565b005b61023861055d565b6040516102459190611469565b60405180910390f35b61026860048036038101906102639190611410565b610565565b005b610284600480360381019061027f91906112d4565b6105e0565b005b6102a0600480360381019061029b9190611482565b610619565b6040516102ad9190611321565b60405180910390f35b6102d060048036038101906102cb9190611410565b61065e565b6040516102dd9190611184565b60405180910390f35b6102ee6106c2565b6040516102fb9190611227565b60405180910390f35b61030c610752565b60405161031991906113f7565b60405180910390f35b61033c600480360381019061033791906112d4565b610758565b6040516103499190611184565b60405180910390f35b61035a61077a565b60405161036791906113f7565b60405180910390f35b61038a60048036038101906103859190611410565b61079e565b005b6103a660048036038101906103a191906114ad565b6107c0565b6040516103b39190611321565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042e575061042d82610842565b5b9050919050565b60606003805461044490611518565b80601f016020809104026020016040519081016040528092919081815260200182805461047090611518565b80156104bb5780601f10610492576101008083540402835291602001916104bb565b820191905f5260205f20905b81548152906001019060200180831161049e57829003601f168201915b5050505050905090565b5f806104cf6108ab565b90506104dc8185856108b2565b600191505092915050565b5f600254905090565b5f806104fa6108ab565b90506105078582856108c4565b610512858585610956565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b6105448261051e565b61054d81610a46565b6105578383610a5a565b50505050565b5f6012905090565b61056d6108ab565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105d1576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105db8282610b44565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661060a81610a46565b6106148383610c2e565b505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b6060600480546106d190611518565b80601f01602080910402602001604051908101604052809291908181526020018280546106fd90611518565b80156107485780601f1061071f57610100808354040283529160200191610748565b820191905f5260205f20905b81548152906001019060200180831161072b57829003601f168201915b5050505050905090565b5f801b81565b5f806107626108ab565b905061076f818585610956565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6107a78261051e565b6107b081610a46565b6107ba8383610b44565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6108bf8383836001610cad565b505050565b5f6108cf84846107c0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109505781811015610941578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161093893929190611557565b60405180910390fd5b61094f84848484035f610cad565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109c6575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109bd919061158c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a36575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a2d919061158c565b60405180910390fd5b610a41838383610e7c565b505050565b610a5781610a526108ab565b611095565b50565b5f610a65838361065e565b610b3a57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610ad76108ab565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610b3e565b5f90505b92915050565b5f610b4f838361065e565b15610c24575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bc16108ab565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610c28565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c9e575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c95919061158c565b60405180910390fd5b610ca95f8383610e7c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d1d575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d14919061158c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d8d575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d84919061158c565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610e76578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e6d9190611321565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ecc578060025f828254610ec091906115d2565b92505081905550610f9a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f55578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f4c93929190611557565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fe1578060025f828254039250508190555061102b565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110889190611321565b60405180910390a3505050565b61109f828261065e565b6110e25780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016110d9929190611605565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61111e816110ea565b8114611128575f80fd5b50565b5f8135905061113981611115565b92915050565b5f60208284031215611154576111536110e6565b5b5f6111618482850161112b565b91505092915050565b5f8115159050919050565b61117e8161116a565b82525050565b5f6020820190506111975f830184611175565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156111d45780820151818401526020810190506111b9565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6111f98261119d565b61120381856111a7565b93506112138185602086016111b7565b61121c816111df565b840191505092915050565b5f6020820190508181035f83015261123f81846111ef565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61127082611247565b9050919050565b61128081611266565b811461128a575f80fd5b50565b5f8135905061129b81611277565b92915050565b5f819050919050565b6112b3816112a1565b81146112bd575f80fd5b50565b5f813590506112ce816112aa565b92915050565b5f80604083850312156112ea576112e96110e6565b5b5f6112f78582860161128d565b9250506020611308858286016112c0565b9150509250929050565b61131b816112a1565b82525050565b5f6020820190506113345f830184611312565b92915050565b5f805f60608486031215611351576113506110e6565b5b5f61135e8682870161128d565b935050602061136f8682870161128d565b9250506040611380868287016112c0565b9150509250925092565b5f819050919050565b61139c8161138a565b81146113a6575f80fd5b50565b5f813590506113b781611393565b92915050565b5f602082840312156113d2576113d16110e6565b5b5f6113df848285016113a9565b91505092915050565b6113f18161138a565b82525050565b5f60208201905061140a5f8301846113e8565b92915050565b5f8060408385031215611426576114256110e6565b5b5f611433858286016113a9565b92505060206114448582860161128d565b9150509250929050565b5f60ff82169050919050565b6114638161144e565b82525050565b5f60208201905061147c5f83018461145a565b92915050565b5f60208284031215611497576114966110e6565b5b5f6114a48482850161128d565b91505092915050565b5f80604083850312156114c3576114c26110e6565b5b5f6114d08582860161128d565b92505060206114e18582860161128d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061152f57607f821691505b602082108103611542576115416114eb565b5b50919050565b61155181611266565b82525050565b5f60608201905061156a5f830186611548565b6115776020830185611312565b6115846040830184611312565b949350505050565b5f60208201905061159f5f830184611548565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115dc826112a1565b91506115e7836112a1565b92508282019050808211156115ff576115fe6115a5565b5b92915050565b5f6040820190506116185f830185611548565b61162560208301846113e8565b939250505056fea2646970667358221220f985ae9be74689642d7f8e137dd9f77cb30c43f65758f68097258c624bf0bb3a64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38C JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E6 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x24E JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x113F JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x12D4 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x133A JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x13BD JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x12D4 JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x12D4 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35A PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x79E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x14AD JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x42E JUMPI POP PUSH2 0x42D DUP3 PUSH2 0x842 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x444 SWAP1 PUSH2 0x1518 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x470 SWAP1 PUSH2 0x1518 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x492 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4CF PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x4DC DUP2 DUP6 DUP6 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4FA PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x507 DUP6 DUP3 DUP6 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x512 DUP6 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x544 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x54D DUP2 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x557 DUP4 DUP4 PUSH2 0xA5A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x56D PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DB DUP3 DUP3 PUSH2 0xB44 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x60A DUP2 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x614 DUP4 DUP4 PUSH2 0xC2E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6D1 SWAP1 PUSH2 0x1518 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6FD SWAP1 PUSH2 0x1518 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x748 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x71F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x748 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x72B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x762 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x76F DUP2 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x7A7 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x7B0 DUP2 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x7BA DUP4 DUP4 PUSH2 0xB44 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8BF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCAD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8CF DUP5 DUP5 PUSH2 0x7C0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x950 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x941 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x938 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCAD JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA41 DUP4 DUP4 DUP4 PUSH2 0xE7C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA57 DUP2 PUSH2 0xA52 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x1095 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xA65 DUP4 DUP4 PUSH2 0x65E JUMP JUMPDEST PUSH2 0xB3A JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xAD7 PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xB3E JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB4F DUP4 DUP4 PUSH2 0x65E JUMP JUMPDEST ISZERO PUSH2 0xC24 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBC1 PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC28 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC95 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA9 PUSH0 DUP4 DUP4 PUSH2 0xE7C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD1D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD14 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xE76 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE6D SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF9A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF55 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFE1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x102B JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1088 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x109F DUP3 DUP3 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x10E2 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP3 SWAP2 SWAP1 PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111E DUP2 PUSH2 0x10EA JUMP JUMPDEST DUP2 EQ PUSH2 0x1128 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1139 DUP2 PUSH2 0x1115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1154 JUMPI PUSH2 0x1153 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1161 DUP5 DUP3 DUP6 ADD PUSH2 0x112B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117E DUP2 PUSH2 0x116A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1197 PUSH0 DUP4 ADD DUP5 PUSH2 0x1175 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11D4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11B9 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11F9 DUP3 PUSH2 0x119D JUMP JUMPDEST PUSH2 0x1203 DUP2 DUP6 PUSH2 0x11A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1213 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0x121C DUP2 PUSH2 0x11DF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x123F DUP2 DUP5 PUSH2 0x11EF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1270 DUP3 PUSH2 0x1247 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1280 DUP2 PUSH2 0x1266 JUMP JUMPDEST DUP2 EQ PUSH2 0x128A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x129B DUP2 PUSH2 0x1277 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B3 DUP2 PUSH2 0x12A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x12BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12CE DUP2 PUSH2 0x12AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12EA JUMPI PUSH2 0x12E9 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12F7 DUP6 DUP3 DUP7 ADD PUSH2 0x128D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1308 DUP6 DUP3 DUP7 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x131B DUP2 PUSH2 0x12A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1334 PUSH0 DUP4 ADD DUP5 PUSH2 0x1312 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1351 JUMPI PUSH2 0x1350 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x135E DUP7 DUP3 DUP8 ADD PUSH2 0x128D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x136F DUP7 DUP3 DUP8 ADD PUSH2 0x128D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1380 DUP7 DUP3 DUP8 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139C DUP2 PUSH2 0x138A JUMP JUMPDEST DUP2 EQ PUSH2 0x13A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B7 DUP2 PUSH2 0x1393 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13DF DUP5 DUP3 DUP6 ADD PUSH2 0x13A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13F1 DUP2 PUSH2 0x138A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x140A PUSH0 DUP4 ADD DUP5 PUSH2 0x13E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1426 JUMPI PUSH2 0x1425 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1433 DUP6 DUP3 DUP7 ADD PUSH2 0x13A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1444 DUP6 DUP3 DUP7 ADD PUSH2 0x128D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1463 DUP2 PUSH2 0x144E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x147C PUSH0 DUP4 ADD DUP5 PUSH2 0x145A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1497 JUMPI PUSH2 0x1496 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14A4 DUP5 DUP3 DUP6 ADD PUSH2 0x128D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14C3 JUMPI PUSH2 0x14C2 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14D0 DUP6 DUP3 DUP7 ADD PUSH2 0x128D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14E1 DUP6 DUP3 DUP7 ADD PUSH2 0x128D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x152F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1542 JUMPI PUSH2 0x1541 PUSH2 0x14EB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1551 DUP2 PUSH2 0x1266 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x156A PUSH0 DUP4 ADD DUP7 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x1577 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1312 JUMP JUMPDEST PUSH2 0x1584 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1312 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x159F PUSH0 DUP4 ADD DUP5 PUSH2 0x1548 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15DC DUP3 PUSH2 0x12A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x15E7 DUP4 PUSH2 0x12A1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15FF JUMPI PUSH2 0x15FE PUSH2 0x15A5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1618 PUSH0 DUP4 ADD DUP6 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x1625 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 DUP6 0xAE SWAP12 0xE7 CHAINID DUP10 PUSH5 0x2D7F8E137D 0xD9 0xF7 PUSH29 0xB30C43F65758F68097258C624BF0BB3A64736F6C634300081700330000 ",
							"sourceMap": "180:422:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3002:82:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;492:107:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;231:62:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;2074:89:4:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;3002:82:4:-;3051:5;3075:2;3068:9;;3002:82;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;492:107:11:-;269:24;2464:16:0;2475:4;2464:10;:16::i;:::-;574:17:11::1;580:2;584:6;574:5;:17::i;:::-;492:107:::0;;;:::o;3299:116:4:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2276:93:4:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3610:178:4:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;231:62:11:-;269:24;231:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3846:140:4:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;762:146:8:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8989:128:4:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;7721:208:4:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:12:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:126::-;2897:7;2937:42;2930:5;2926:54;2915:65;;2860:126;;;:::o;2992:96::-;3029:7;3058:24;3076:5;3058:24;:::i;:::-;3047:35;;2992:96;;;:::o;3094:122::-;3167:24;3185:5;3167:24;:::i;:::-;3160:5;3157:35;3147:63;;3206:1;3203;3196:12;3147:63;3094:122;:::o;3222:139::-;3268:5;3306:6;3293:20;3284:29;;3322:33;3349:5;3322:33;:::i;:::-;3222:139;;;;:::o;3367:77::-;3404:7;3433:5;3422:16;;3367:77;;;:::o;3450:122::-;3523:24;3541:5;3523:24;:::i;:::-;3516:5;3513:35;3503:63;;3562:1;3559;3552:12;3503:63;3450:122;:::o;3578:139::-;3624:5;3662:6;3649:20;3640:29;;3678:33;3705:5;3678:33;:::i;:::-;3578:139;;;;:::o;3723:474::-;3791:6;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;3723:474;;;;;:::o;4203:118::-;4290:24;4308:5;4290:24;:::i;:::-;4285:3;4278:37;4203:118;;:::o;4327:222::-;4420:4;4458:2;4447:9;4443:18;4435:26;;4471:71;4539:1;4528:9;4524:17;4515:6;4471:71;:::i;:::-;4327:222;;;;:::o;4555:619::-;4632:6;4640;4648;4697:2;4685:9;4676:7;4672:23;4668:32;4665:119;;;4703:79;;:::i;:::-;4665:119;4823:1;4848:53;4893:7;4884:6;4873:9;4869:22;4848:53;:::i;:::-;4838:63;;4794:117;4950:2;4976:53;5021:7;5012:6;5001:9;4997:22;4976:53;:::i;:::-;4966:63;;4921:118;5078:2;5104:53;5149:7;5140:6;5129:9;5125:22;5104:53;:::i;:::-;5094:63;;5049:118;4555:619;;;;;:::o;5180:77::-;5217:7;5246:5;5235:16;;5180:77;;;:::o;5263:122::-;5336:24;5354:5;5336:24;:::i;:::-;5329:5;5326:35;5316:63;;5375:1;5372;5365:12;5316:63;5263:122;:::o;5391:139::-;5437:5;5475:6;5462:20;5453:29;;5491:33;5518:5;5491:33;:::i;:::-;5391:139;;;;:::o;5536:329::-;5595:6;5644:2;5632:9;5623:7;5619:23;5615:32;5612:119;;;5650:79;;:::i;:::-;5612:119;5770:1;5795:53;5840:7;5831:6;5820:9;5816:22;5795:53;:::i;:::-;5785:63;;5741:117;5536:329;;;;:::o;5871:118::-;5958:24;5976:5;5958:24;:::i;:::-;5953:3;5946:37;5871:118;;:::o;5995:222::-;6088:4;6126:2;6115:9;6111:18;6103:26;;6139:71;6207:1;6196:9;6192:17;6183:6;6139:71;:::i;:::-;5995:222;;;;:::o;6223:474::-;6291:6;6299;6348:2;6336:9;6327:7;6323:23;6319:32;6316:119;;;6354:79;;:::i;:::-;6316:119;6474:1;6499:53;6544:7;6535:6;6524:9;6520:22;6499:53;:::i;:::-;6489:63;;6445:117;6601:2;6627:53;6672:7;6663:6;6652:9;6648:22;6627:53;:::i;:::-;6617:63;;6572:118;6223:474;;;;;:::o;6703:86::-;6738:7;6778:4;6771:5;6767:16;6756:27;;6703:86;;;:::o;6795:112::-;6878:22;6894:5;6878:22;:::i;:::-;6873:3;6866:35;6795:112;;:::o;6913:214::-;7002:4;7040:2;7029:9;7025:18;7017:26;;7053:67;7117:1;7106:9;7102:17;7093:6;7053:67;:::i;:::-;6913:214;;;;:::o;7133:329::-;7192:6;7241:2;7229:9;7220:7;7216:23;7212:32;7209:119;;;7247:79;;:::i;:::-;7209:119;7367:1;7392:53;7437:7;7428:6;7417:9;7413:22;7392:53;:::i;:::-;7382:63;;7338:117;7133:329;;;;:::o;7468:474::-;7536:6;7544;7593:2;7581:9;7572:7;7568:23;7564:32;7561:119;;;7599:79;;:::i;:::-;7561:119;7719:1;7744:53;7789:7;7780:6;7769:9;7765:22;7744:53;:::i;:::-;7734:63;;7690:117;7846:2;7872:53;7917:7;7908:6;7897:9;7893:22;7872:53;:::i;:::-;7862:63;;7817:118;7468:474;;;;;:::o;7948:180::-;7996:77;7993:1;7986:88;8093:4;8090:1;8083:15;8117:4;8114:1;8107:15;8134:320;8178:6;8215:1;8209:4;8205:12;8195:22;;8262:1;8256:4;8252:12;8283:18;8273:81;;8339:4;8331:6;8327:17;8317:27;;8273:81;8401:2;8393:6;8390:14;8370:18;8367:38;8364:84;;8420:18;;:::i;:::-;8364:84;8185:269;8134:320;;;:::o;8460:118::-;8547:24;8565:5;8547:24;:::i;:::-;8542:3;8535:37;8460:118;;:::o;8584:442::-;8733:4;8771:2;8760:9;8756:18;8748:26;;8784:71;8852:1;8841:9;8837:17;8828:6;8784:71;:::i;:::-;8865:72;8933:2;8922:9;8918:18;8909:6;8865:72;:::i;:::-;8947;9015:2;9004:9;9000:18;8991:6;8947:72;:::i;:::-;8584:442;;;;;;:::o;9032:222::-;9125:4;9163:2;9152:9;9148:18;9140:26;;9176:71;9244:1;9233:9;9229:17;9220:6;9176:71;:::i;:::-;9032:222;;;;:::o;9260:180::-;9308:77;9305:1;9298:88;9405:4;9402:1;9395:15;9429:4;9426:1;9419:15;9446:191;9486:3;9505:20;9523:1;9505:20;:::i;:::-;9500:25;;9539:20;9557:1;9539:20;:::i;:::-;9534:25;;9582:1;9579;9575:9;9568:16;;9603:3;9600:1;9597:10;9594:36;;;9610:18;;:::i;:::-;9594:36;9446:191;;;;:::o;9643:332::-;9764:4;9802:2;9791:9;9787:18;9779:26;;9815:71;9883:1;9872:9;9868:17;9859:6;9815:71;:::i;:::-;9896:72;9964:2;9953:9;9949:18;9940:6;9896:72;:::i;:::-;9643:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1146000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "352",
								"MINTER_ROLE()": "391",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"decimals()": "427",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3189",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 180,
									"end": 602,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 180,
									"end": 602,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 180,
									"end": 602,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 302,
									"end": 484,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 484,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 302,
									"end": 484,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 302,
									"end": 484,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 302,
									"end": 484,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 302,
									"end": 484,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 302,
									"end": 484,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 302,
									"end": 484,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "4173686F6B75436F696E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "4143530000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 390,
									"end": 434,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 419,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 401,
									"end": 419,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 421,
									"end": 433,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 390,
									"end": 400,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 390,
									"end": 400,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 390,
									"end": 400,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 390,
									"end": 434,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 390,
									"end": 434,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 390,
									"end": 434,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 390,
									"end": 434,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 390,
									"end": 434,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 390,
									"end": 434,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 445,
									"end": 476,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 269,
									"end": 293,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 469,
									"end": 475,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 445,
									"end": 455,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 445,
									"end": 455,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 445,
									"end": 455,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 445,
									"end": 476,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 445,
									"end": 476,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 445,
									"end": 476,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 445,
									"end": 476,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 445,
									"end": 476,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 445,
									"end": 476,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 302,
									"end": 484,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 180,
									"end": 602,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 180,
									"end": 602,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1410,
									"end": 1416,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1444,
									"end": 1449,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1450,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1511,
									"end": 1588,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1589,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1608,
									"end": 1612,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1605,
									"end": 1606,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1632,
									"end": 1636,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1629,
									"end": 1630,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1622,
									"end": 1637,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1697,
									"end": 1774,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1687,
									"end": 1775,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1794,
									"end": 1798,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1784,
									"end": 1799,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1822,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1808,
									"end": 1823,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1879,
									"end": 1885,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1916,
									"end": 1917,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1910,
									"end": 1914,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1906,
									"end": 1918,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1963,
									"end": 1964,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1957,
									"end": 1961,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1953,
									"end": 1965,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1984,
									"end": 2002,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2040,
									"end": 2044,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 2032,
									"end": 2038,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2028,
									"end": 2045,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2102,
									"end": 2104,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2094,
									"end": 2100,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2091,
									"end": 2105,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2071,
									"end": 2089,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2068,
									"end": 2106,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 2121,
									"end": 2139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 2155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1835,
									"end": 2155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2210,
									"end": 2214,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2233,
									"end": 2236,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2259,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2253,
									"end": 2254,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2246,
									"end": 2260,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2290,
									"end": 2294,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2161,
									"end": 2302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2345,
									"end": 2351,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2387,
									"end": 2389,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2380,
									"end": 2385,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2372,
									"end": 2395,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2308,
									"end": 2401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2451,
									"end": 2459,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2501,
									"end": 2506,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2499,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2491,
									"end": 2507,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2514,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 2627,
									"end": 2637,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2623,
									"end": 2641,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2692,
									"end": 2758,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2681,
									"end": 2690,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 2662,
									"end": 2759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 2810,
									"end": 2818,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2799,
									"end": 2808,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 2780,
									"end": 2819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2848,
									"end": 2857,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2841,
									"end": 2846,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2837,
									"end": 2858,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2901,
									"end": 2905,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2891,
									"end": 2899,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2885,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2877,
									"end": 2907,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2913,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2956,
									"end": 2963,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 2990,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2919,
									"end": 2996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3030,
									"end": 3033,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3002,
									"end": 3062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3118,
									"end": 3127,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 3196,
									"end": 3201,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 3178,
									"end": 3202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3169,
									"end": 3203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 3151,
									"end": 3204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3068,
									"end": 3210,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3259,
									"end": 3262,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3280,
									"end": 3285,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3216,
									"end": 3291,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 3438,
									"end": 3445,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 3407,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 3541,
									"end": 3557,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 3517,
									"end": 3558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3509,
									"end": 3515,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3496,
									"end": 3507,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 3468,
									"end": 3559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3455,
									"end": 3560,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3373,
									"end": 3566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3297,
									"end": 3566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3617,
									"end": 3620,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3572,
									"end": 3645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 3728,
									"end": 3760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 3827,
									"end": 3833,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3819,
									"end": 3825,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3813,
									"end": 3817,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 3769,
									"end": 3834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "tag",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3704,
									"end": 3840,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3651,
									"end": 3840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3923,
									"end": 3926,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3916,
									"end": 3921,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3913,
									"end": 3927,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 4014,
									"end": 4015,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4007,
									"end": 4012,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 3977,
									"end": 4016,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3951,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3943,
									"end": 3948,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3939,
									"end": 3952,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3846,
									"end": 4032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4139,
									"end": 4141,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4134,
									"end": 4137,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4131,
									"end": 4142,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 4205,
									"end": 4210,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 4173,
									"end": 4211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "tag",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 4275,
									"end": 4285,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 4257,
									"end": 4286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "tag",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4247,
									"end": 4255,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4243,
									"end": 4287,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4440,
									"end": 4442,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4428,
									"end": 4438,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4425,
									"end": 4443,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4461,
									"end": 4469,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "tag",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 4558,
									"end": 4561,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 4540,
									"end": 4562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4530,
									"end": 4538,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4526,
									"end": 4563,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4513,
									"end": 4524,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 4484,
									"end": 4564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4641,
									"end": 4649,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4691,
									"end": 4696,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4685,
									"end": 4689,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4681,
									"end": 4697,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4754,
									"end": 4760,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 4835,
									"end": 4836,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4831,
									"end": 4837,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4823,
									"end": 4828,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 4816,
									"end": 4829,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 4787,
									"end": 4838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "tag",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4783,
									"end": 4839,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4868,
									"end": 4872,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4862,
									"end": 4866,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4858,
									"end": 4873,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4761,
									"end": 4879,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4710,
									"end": 4879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4960,
									"end": 4964,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5131,
									"end": 5134,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5125,
									"end": 5129,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 5106,
									"end": 5135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5168,
									"end": 5171,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5165,
									"end": 5166,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 5161,
									"end": 5172,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 5155,
									"end": 5159,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5152,
									"end": 5173,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4884,
									"end": 5179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 5334,
									"end": 5337,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 5301,
									"end": 5338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5403,
									"end": 5421,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5395,
									"end": 5401,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5392,
									"end": 5422,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 5425,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "tag",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 5501,
									"end": 5505,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5495,
									"end": 5506,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5469,
									"end": 5507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 5614,
									"end": 5620,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5606,
									"end": 5612,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 5554,
									"end": 5621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "tag",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5648,
									"end": 5649,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5672,
									"end": 5676,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5704,
									"end": 5706,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 5696,
									"end": 5702,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5693,
									"end": 5707,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 5721,
									"end": 5722,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6378,
									"end": 6379,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6395,
									"end": 6401,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6444,
									"end": 6453,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6439,
									"end": 6442,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 6435,
									"end": 6454,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6429,
									"end": 6455,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 6555,
									"end": 6561,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6548,
									"end": 6553,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 6495,
									"end": 6562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6489,
									"end": 6493,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 6482,
									"end": 6563,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 6351,
									"end": 6573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "tag",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5768,
									"end": 5772,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 5764,
									"end": 5773,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 5756,
									"end": 5762,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5752,
									"end": 5774,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 5834,
									"end": 5838,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 5802,
									"end": 5839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "tag",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5861,
									"end": 5862,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5889,
									"end": 5896,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5886,
									"end": 5887,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5883,
									"end": 5897,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5968,
									"end": 5977,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5963,
									"end": 5966,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 5959,
									"end": 5978,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5953,
									"end": 5979,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 5945,
									"end": 5951,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5938,
									"end": 5980,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 6019,
									"end": 6020,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 6011,
									"end": 6017,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6007,
									"end": 6021,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6066,
									"end": 6068,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6055,
									"end": 6064,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6051,
									"end": 6069,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5912,
									"end": 5916,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5909,
									"end": 5910,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5905,
									"end": 5917,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6111,
									"end": 6117,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 6102,
									"end": 6109,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6099,
									"end": 6118,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6169,
									"end": 6178,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6164,
									"end": 6167,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 6160,
									"end": 6179,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6154,
									"end": 6180,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 6254,
									"end": 6258,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 6246,
									"end": 6252,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 6242,
									"end": 6259,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6231,
									"end": 6240,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 6212,
									"end": 6260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "tag",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6204,
									"end": 6210,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6197,
									"end": 6261,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 6119,
									"end": 6275,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "tag",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6321,
									"end": 6322,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 6317,
									"end": 6318,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 6309,
									"end": 6315,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 6305,
									"end": 6319,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 6301,
									"end": 6323,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6295,
									"end": 6299,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 6288,
									"end": 6324,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "tag",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5184,
									"end": 6579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 180,
									"end": 602,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 180,
									"end": 602,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 180,
									"end": 602,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 602,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 180,
									"end": 602,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 602,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 602,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 180,
									"end": 602,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 602,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f985ae9be74689642d7f8e137dd9f77cb30c43f65758f68097258c624bf0bb3a64736f6c63430008170033",
									".code": [
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "D5391393"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 180,
											"end": 602,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 492,
											"end": 599,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 492,
											"end": 599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 492,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 492,
											"end": 599,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 492,
											"end": 599,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 492,
											"end": 599,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 492,
											"end": 599,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 492,
											"end": 599,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 492,
											"end": 599,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 492,
											"end": 599,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 492,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 492,
											"end": 599,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 492,
											"end": 599,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 492,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 492,
											"end": 599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 492,
											"end": 599,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 492,
											"end": 599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 492,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 492,
											"end": 599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 492,
											"end": 599,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 492,
											"end": 599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 492,
											"end": 599,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 231,
											"end": 293,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 231,
											"end": 293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 231,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 231,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 231,
											"end": 293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 231,
											"end": 293,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 231,
											"end": 293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 231,
											"end": 293,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 293,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 231,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 231,
											"end": 293,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 231,
											"end": 293,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 231,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 231,
											"end": 293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 231,
											"end": 293,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 231,
											"end": 293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 231,
											"end": 293,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 293,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 231,
											"end": 293,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 231,
											"end": 293,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 231,
											"end": 293,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 231,
											"end": 293,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 231,
											"end": 293,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 492,
											"end": 599,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 492,
											"end": 599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 269,
											"end": 293,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 574,
											"end": 591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 580,
											"end": 582,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 584,
											"end": 590,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 574,
											"end": 579,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 574,
											"end": 591,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 574,
											"end": 591,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 574,
											"end": 591,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 492,
											"end": 599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 492,
											"end": 599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 492,
											"end": 599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 492,
											"end": 599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 231,
											"end": 293,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 231,
											"end": 293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 269,
											"end": 293,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 231,
											"end": 293,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 231,
											"end": 293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2979,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2935,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2926,
											"end": 2980,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3029,
											"end": 3036,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 3076,
											"end": 3081,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 3058,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 3167,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3157,
											"end": 3192,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3208,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3094,
											"end": 3216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3273,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3312,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3293,
											"end": 3313,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 3349,
											"end": 3354,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 3322,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3222,
											"end": 3361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3411,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 3541,
											"end": 3546,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 3523,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3516,
											"end": 3521,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3562,
											"end": 3563,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3560,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3629,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3668,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3649,
											"end": 3669,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 3705,
											"end": 3710,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 3678,
											"end": 3711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3836,
											"end": 3845,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3827,
											"end": 3834,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3823,
											"end": 3846,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3819,
											"end": 3851,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 3854,
											"end": 3933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 4044,
											"end": 4051,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4035,
											"end": 4041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4024,
											"end": 4033,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4020,
											"end": 4042,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 3999,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3945,
											"end": 4062,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 4172,
											"end": 4179,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4169,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4152,
											"end": 4161,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4148,
											"end": 4170,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 4127,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4072,
											"end": 4190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 4308,
											"end": 4313,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 4290,
											"end": 4314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4285,
											"end": 4288,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4315,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4420,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4460,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4456,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4461,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4435,
											"end": 4461,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4435,
											"end": 4461,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 4539,
											"end": 4540,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4537,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4524,
											"end": 4541,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4515,
											"end": 4521,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 4471,
											"end": 4542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4632,
											"end": 4638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4699,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4685,
											"end": 4694,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4683,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4672,
											"end": 4695,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4668,
											"end": 4700,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 4703,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4823,
											"end": 4824,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 4893,
											"end": 4900,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4884,
											"end": 4890,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 4891,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 4848,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4838,
											"end": 4901,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4838,
											"end": 4901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4794,
											"end": 4911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4952,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 5021,
											"end": 5028,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5012,
											"end": 5018,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5001,
											"end": 5010,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5019,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 4976,
											"end": 5029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 5029,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 5029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4921,
											"end": 5039,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5078,
											"end": 5080,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 5149,
											"end": 5156,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5129,
											"end": 5138,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5125,
											"end": 5147,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 5104,
											"end": 5157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5094,
											"end": 5157,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5094,
											"end": 5157,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5049,
											"end": 5167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 5174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5217,
											"end": 5224,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5251,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5235,
											"end": 5251,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5235,
											"end": 5251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5180,
											"end": 5257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 5354,
											"end": 5359,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 5336,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5334,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5326,
											"end": 5361,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5375,
											"end": 5376,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5442,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5482,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5453,
											"end": 5482,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5453,
											"end": 5482,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 5518,
											"end": 5523,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 5491,
											"end": 5524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5391,
											"end": 5530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5595,
											"end": 5601,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5646,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5623,
											"end": 5630,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5619,
											"end": 5642,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5647,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 5650,
											"end": 5729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5770,
											"end": 5771,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 5840,
											"end": 5847,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5831,
											"end": 5837,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5820,
											"end": 5829,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 5838,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 5795,
											"end": 5848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5785,
											"end": 5848,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5785,
											"end": 5848,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5741,
											"end": 5858,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5536,
											"end": 5865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 5958,
											"end": 5982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5953,
											"end": 5956,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5946,
											"end": 5983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6088,
											"end": 6092,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6128,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6103,
											"end": 6129,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6103,
											"end": 6129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 6207,
											"end": 6208,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6205,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6192,
											"end": 6209,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6189,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 6139,
											"end": 6210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5995,
											"end": 6217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6305,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6348,
											"end": 6350,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6336,
											"end": 6345,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6327,
											"end": 6334,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6323,
											"end": 6346,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6351,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 6354,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6474,
											"end": 6475,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 6544,
											"end": 6551,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6535,
											"end": 6541,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6524,
											"end": 6533,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6520,
											"end": 6542,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 6499,
											"end": 6552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6489,
											"end": 6552,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6489,
											"end": 6552,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6445,
											"end": 6562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6601,
											"end": 6603,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 6672,
											"end": 6679,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6652,
											"end": 6661,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6648,
											"end": 6670,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 6627,
											"end": 6680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6572,
											"end": 6690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6738,
											"end": 6745,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 6771,
											"end": 6776,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6767,
											"end": 6783,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6756,
											"end": 6783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6756,
											"end": 6783,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6703,
											"end": 6789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 6894,
											"end": 6899,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 6878,
											"end": 6900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6873,
											"end": 6876,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6866,
											"end": 6901,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6795,
											"end": 6907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7006,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7042,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7029,
											"end": 7038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7017,
											"end": 7043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7017,
											"end": 7043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 7117,
											"end": 7118,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7106,
											"end": 7115,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7119,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7093,
											"end": 7099,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 7053,
											"end": 7120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6913,
											"end": 7127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7192,
											"end": 7198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7229,
											"end": 7238,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7220,
											"end": 7227,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7212,
											"end": 7244,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 7247,
											"end": 7326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7367,
											"end": 7368,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7428,
											"end": 7434,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7417,
											"end": 7426,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7413,
											"end": 7435,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 7392,
											"end": 7445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7382,
											"end": 7445,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7382,
											"end": 7445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7338,
											"end": 7455,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7133,
											"end": 7462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7536,
											"end": 7542,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7550,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7595,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7572,
											"end": 7579,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7568,
											"end": 7591,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7564,
											"end": 7596,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 7599,
											"end": 7678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7719,
											"end": 7720,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 7789,
											"end": 7796,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7780,
											"end": 7786,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7769,
											"end": 7778,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7765,
											"end": 7787,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 7744,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7734,
											"end": 7797,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7734,
											"end": 7797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7690,
											"end": 7807,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7846,
											"end": 7848,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 7917,
											"end": 7924,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7914,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7897,
											"end": 7906,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7893,
											"end": 7915,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 7872,
											"end": 7925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7862,
											"end": 7925,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7862,
											"end": 7925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7817,
											"end": 7935,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7948,
											"end": 8128,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 7948,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7996,
											"end": 8073,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7993,
											"end": 7994,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8074,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8093,
											"end": 8097,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 8090,
											"end": 8091,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8083,
											"end": 8098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8117,
											"end": 8121,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8114,
											"end": 8115,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8107,
											"end": 8122,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8178,
											"end": 8184,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8215,
											"end": 8216,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 8209,
											"end": 8213,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8205,
											"end": 8217,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8195,
											"end": 8217,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8195,
											"end": 8217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8262,
											"end": 8263,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8256,
											"end": 8260,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8252,
											"end": 8264,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8339,
											"end": 8343,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8327,
											"end": 8344,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8317,
											"end": 8344,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8317,
											"end": 8344,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8401,
											"end": 8403,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8393,
											"end": 8399,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8404,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8367,
											"end": 8405,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 8420,
											"end": 8438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8185,
											"end": 8454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8134,
											"end": 8454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8578,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 8460,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8547,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 8565,
											"end": 8570,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8547,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 8547,
											"end": 8571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8547,
											"end": 8571,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 8547,
											"end": 8571,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8542,
											"end": 8545,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8535,
											"end": 8572,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8578,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8578,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8584,
											"end": 9026,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 8584,
											"end": 9026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8733,
											"end": 8737,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8771,
											"end": 8773,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8760,
											"end": 8769,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8748,
											"end": 8774,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8748,
											"end": 8774,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8784,
											"end": 8855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 8852,
											"end": 8853,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8841,
											"end": 8850,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8837,
											"end": 8854,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8828,
											"end": 8834,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8784,
											"end": 8855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 8784,
											"end": 8855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8784,
											"end": 8855,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 8784,
											"end": 8855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8865,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 8933,
											"end": 8935,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8922,
											"end": 8931,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8918,
											"end": 8936,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8909,
											"end": 8915,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8865,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 8865,
											"end": 8937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8865,
											"end": 8937,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 8865,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8947,
											"end": 9019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 9015,
											"end": 9017,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9004,
											"end": 9013,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9000,
											"end": 9018,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8991,
											"end": 8997,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8947,
											"end": 9019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 8947,
											"end": 9019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8947,
											"end": 9019,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 8947,
											"end": 9019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8584,
											"end": 9026,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8584,
											"end": 9026,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8584,
											"end": 9026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8584,
											"end": 9026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8584,
											"end": 9026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8584,
											"end": 9026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8584,
											"end": 9026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9032,
											"end": 9254,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 9032,
											"end": 9254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9125,
											"end": 9129,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9163,
											"end": 9165,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9152,
											"end": 9161,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9148,
											"end": 9166,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9140,
											"end": 9166,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9140,
											"end": 9166,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9176,
											"end": 9247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 9244,
											"end": 9245,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9233,
											"end": 9242,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9229,
											"end": 9246,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9220,
											"end": 9226,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9176,
											"end": 9247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 9176,
											"end": 9247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9176,
											"end": 9247,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 9176,
											"end": 9247,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9032,
											"end": 9254,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9032,
											"end": 9254,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9032,
											"end": 9254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9032,
											"end": 9254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9032,
											"end": 9254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9260,
											"end": 9440,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 9260,
											"end": 9440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9308,
											"end": 9385,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9305,
											"end": 9306,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9386,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9405,
											"end": 9409,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 9402,
											"end": 9403,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9395,
											"end": 9410,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9429,
											"end": 9433,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9426,
											"end": 9427,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9434,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9446,
											"end": 9637,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 9446,
											"end": 9637,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9486,
											"end": 9489,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 9523,
											"end": 9524,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 9505,
											"end": 9525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9500,
											"end": 9525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9500,
											"end": 9525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9539,
											"end": 9559,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 9557,
											"end": 9558,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9539,
											"end": 9559,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 9539,
											"end": 9559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9539,
											"end": 9559,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 9539,
											"end": 9559,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9534,
											"end": 9559,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9534,
											"end": 9559,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9582,
											"end": 9583,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9579,
											"end": 9580,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9575,
											"end": 9584,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9584,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9603,
											"end": 9606,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9600,
											"end": 9601,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9597,
											"end": 9607,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9594,
											"end": 9630,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9594,
											"end": 9630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 9594,
											"end": 9630,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 9610,
											"end": 9628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9594,
											"end": 9630,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 9594,
											"end": 9630,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9446,
											"end": 9637,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9446,
											"end": 9637,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9446,
											"end": 9637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9446,
											"end": 9637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9446,
											"end": 9637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 9975,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 9643,
											"end": 9975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9764,
											"end": 9768,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9802,
											"end": 9804,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9791,
											"end": 9800,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9787,
											"end": 9805,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9779,
											"end": 9805,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9779,
											"end": 9805,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9815,
											"end": 9886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 9883,
											"end": 9884,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9872,
											"end": 9881,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9868,
											"end": 9885,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9859,
											"end": 9865,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9815,
											"end": 9886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 9815,
											"end": 9886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9815,
											"end": 9886,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 9815,
											"end": 9886,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 9964,
											"end": 9966,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9953,
											"end": 9962,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9949,
											"end": 9967,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9940,
											"end": 9946,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 9896,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 9975,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 9975,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 9975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 9975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 9975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 9975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"quiz.sol",
								"token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"token.sol\":\"AshokuCoin\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"token.sol\":{\"keccak256\":\"0xdbd2f657901dd5016382131f2670e16fb1ac1efbaded1a050b59a57d81746d5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddfd93916ffc8ad12bb50d7013c54c3f67498dea38ef71e9aec31c0bde003ac\",\"dweb:/ipfs/QmS3ZtnKe8rTJjWxPPGXwWuzuR5ix8NLPisLfCkAjpxcxH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 686,
								"contract": "token.sol:AshokuCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 692,
								"contract": "token.sol:AshokuCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 694,
								"contract": "token.sol:AshokuCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 696,
								"contract": "token.sol:AshokuCoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 698,
								"contract": "token.sol:AshokuCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "token.sol:AshokuCoin",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "token.sol:AshokuCoin",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "token.sol:AshokuCoin",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1304
						],
						"ERC165": [
							1328
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1305,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1304,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1329,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1328,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1304,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1328,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1328,
								1340,
								378,
								1304
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1327
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1327,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1304
						],
						"Ownable": [
							526
						]
					},
					"id": 527,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 527,
							"sourceUnit": 1305,
							"src": "128:45:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 381,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1304,
										"src": "136:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 384,
										"name": "Context",
										"nameLocations": [
											"692:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1304,
										"src": "692:7:2"
									},
									"id": 385,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 383,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 526,
							"linearizedBaseContracts": [
								526,
								1304
							],
							"name": "Ownable",
							"nameLocation": "681:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 387,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 526,
									"src": "706:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 386,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:2",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 392,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "858:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:2"
									},
									"src": "825:50:2"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:2",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 397,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "994:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:2"
									},
									"src": "968:41:2"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 403,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1042:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1073:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:2"
									},
									"src": "1015:84:2"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "1259:153:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 409,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "1273:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 410,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 423,
												"nodeType": "IfStatement",
												"src": "1269:95:2",
												"trueBody": {
													"id": 422,
													"nodeType": "Block",
													"src": "1301:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 416,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 415,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "1322:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 421,
															"nodeType": "RevertStatement",
															"src": "1315:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 425,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "1392:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 424,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "1373:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:2"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:2",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 429,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "1237:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:2"
									},
									"scope": 526,
									"src": "1225:187:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "1521:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 432,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "1531:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:2"
											},
											{
												"id": 435,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:2"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 437,
									"name": "onlyOwner",
									"nameLocation": "1509:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:2"
									},
									"src": "1500:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "1693:30:2",
										"statements": [
											{
												"expression": {
													"id": 443,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 387,
													"src": "1710:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 442,
												"id": 444,
												"nodeType": "Return",
												"src": "1703:13:2"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1684:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:2"
									},
									"scope": 526,
									"src": "1638:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "1841:117:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 450,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "1855:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 452,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "1866:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 461,
												"nodeType": "IfStatement",
												"src": "1851:101:2",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "1880:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 456,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "1928:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 455,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "1901:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 459,
															"nodeType": "RevertStatement",
															"src": "1894:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:2"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:2"
									},
									"scope": 526,
									"src": "1796:162:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2347:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 469,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "2357:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:2"
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 467,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 466,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "2337:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:2"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:2"
									},
									"scope": 526,
									"src": "2293:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "2613:145:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 485,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "2627:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 486,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 499,
												"nodeType": "IfStatement",
												"src": "2623:91:2",
												"trueBody": {
													"id": 498,
													"nodeType": "Block",
													"src": "2651:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 492,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 491,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "2672:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 497,
															"nodeType": "RevertStatement",
															"src": "2665:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 501,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "2742:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 500,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "2723:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:2"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 483,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 482,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "2603:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "2570:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:2"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:2"
									},
									"scope": 526,
									"src": "2543:215:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "2975:124:2",
										"statements": [
											{
												"assignments": [
													512
												],
												"declarations": [
													{
														"constant": false,
														"id": 512,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 524,
														"src": "2985:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 511,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 514,
												"initialValue": {
													"id": 513,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 387,
													"src": "3004:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:2"
											},
											{
												"expression": {
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 515,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "3020:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 516,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "3029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 520,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "3073:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3083:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 519,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "3052:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "EmitStatement",
												"src": "3047:45:2"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "2940:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:2"
									},
									"scope": 526,
									"src": "2912:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 527,
							"src": "663:2438:2",
							"usedErrors": [
								392,
								397
							],
							"usedEvents": [
								403
							]
						}
					],
					"src": "102:3000:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							663
						],
						"IERC20Errors": [
							568
						],
						"IERC721Errors": [
							616
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 528,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 529,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:3",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 568,
							"linearizedBaseContracts": [
								568
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 538,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "668:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "685:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:3"
									},
									"src": "621:80:3"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 543,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "889:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:3"
									},
									"src": "864:41:3"
								},
								{
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 548,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1102:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:3"
									},
									"src": "1075:45:3"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 557,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1509:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1526:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1545:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:3"
									},
									"src": "1476:85:3"
								},
								{
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 562,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1773:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:3"
									},
									"src": "1746:45:3"
								},
								{
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 567,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "2023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:3"
									},
									"src": "1997:43:3"
								}
							],
							"scope": 664,
							"src": "278:1764:3",
							"usedErrors": [
								538,
								543,
								548,
								557,
								562,
								567
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 569,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:3",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 616,
							"linearizedBaseContracts": [
								616
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 574,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "2465:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:3"
									},
									"src": "2440:40:3"
								},
								{
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 579,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2652:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:3"
									},
									"src": "2623:46:3"
								},
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 588,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "2996:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3012:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3029:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:3"
									},
									"src": "2969:75:3"
								},
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 593,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3233:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:3"
									},
									"src": "3207:42:3"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 598,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "3447:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:3"
									},
									"src": "3419:46:3"
								},
								{
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 605,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3756:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3774:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:3"
									},
									"src": "3723:68:3"
								},
								{
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 610,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "4004:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:3"
									},
									"src": "3976:46:3"
								},
								{
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 615,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4258:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:3"
									},
									"src": "4230:46:3"
								}
							],
							"scope": 664,
							"src": "2186:2092:3",
							"usedErrors": [
								574,
								579,
								588,
								593,
								598,
								605,
								610,
								615
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 617,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:3",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 628,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4854:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4870:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4887:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4903:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:3"
									},
									"src": "4821:99:3"
								},
								{
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 633,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "5110:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:3"
									},
									"src": "5083:43:3"
								},
								{
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 638,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "5325:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:3"
									},
									"src": "5296:47:3"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 645,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5645:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5663:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:3"
									},
									"src": "5610:68:3"
								},
								{
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 650,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5892:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:3"
									},
									"src": "5863:47:3"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 655,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "6147:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:3"
									},
									"src": "6118:47:3"
								},
								{
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 662,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "6488:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "6507:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:3"
									},
									"src": "6456:73:3"
								}
							],
							"scope": 664,
							"src": "4424:2107:3",
							"usedErrors": [
								628,
								633,
								638,
								645,
								650,
								655,
								662
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1304
						],
						"ERC20": [
							1178
						],
						"IERC20": [
							1256
						],
						"IERC20Errors": [
							568
						],
						"IERC20Metadata": [
							1282
						]
					},
					"id": 1179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 667,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1179,
							"sourceUnit": 1257,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 666,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1256,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 669,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1179,
							"sourceUnit": 1283,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 668,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1282,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 671,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1179,
							"sourceUnit": 1305,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 670,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1304,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 673,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1179,
							"sourceUnit": 664,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 672,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 568,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 675,
										"name": "Context",
										"nameLocations": [
											"1428:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1304,
										"src": "1428:7:4"
									},
									"id": 676,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:4"
								},
								{
									"baseName": {
										"id": 677,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1256,
										"src": "1437:6:4"
									},
									"id": 678,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:4"
								},
								{
									"baseName": {
										"id": 679,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1282,
										"src": "1445:14:4"
									},
									"id": 680,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:4"
								},
								{
									"baseName": {
										"id": 681,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 568,
										"src": "1461:12:4"
									},
									"id": 682,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 674,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1178,
							"linearizedBaseContracts": [
								1178,
								568,
								1282,
								1256,
								1304
							],
							"name": "ERC20",
							"nameLocation": "1419:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 686,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1480:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 685,
										"keyName": "account",
										"keyNameLocation": "1496:7:4",
										"keyType": {
											"id": 683,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 684,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 692,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1540:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 691,
										"keyName": "account",
										"keyNameLocation": "1556:7:4",
										"keyType": {
											"id": 687,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 690,
											"keyName": "spender",
											"keyNameLocation": "1583:7:4",
											"keyType": {
												"id": 688,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 689,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 694,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1630:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 693,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 696,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1665:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 695,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 698,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1691:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 697,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "1952:57:4",
										"statements": [
											{
												"expression": {
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 706,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "1962:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 707,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "1970:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:4"
											},
											{
												"expression": {
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 710,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "1985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 711,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "1995:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:4"
											}
										]
									},
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 715,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1908:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 700,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1929:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 702,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:4"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:4"
									},
									"scope": 1178,
									"src": "1896:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1269
									],
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "2134:29:4",
										"statements": [
											{
												"expression": {
													"id": 721,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 696,
													"src": "2151:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 720,
												"id": 722,
												"nodeType": "Return",
												"src": "2144:12:4"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:4"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "2119:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 718,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:4"
									},
									"scope": 1178,
									"src": "2074:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1275
									],
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "2338:31:4",
										"statements": [
											{
												"expression": {
													"id": 730,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 698,
													"src": "2355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 729,
												"id": 731,
												"nodeType": "Return",
												"src": "2348:14:4"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "2323:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 727,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:4"
									},
									"scope": 1178,
									"src": "2276:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1281
									],
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "3058:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 738,
												"id": 740,
												"nodeType": "Return",
												"src": "3068:9:4"
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:4"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "3051:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 736,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:4"
									},
									"scope": 1178,
									"src": "3002:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1205
									],
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "3205:36:4",
										"statements": [
											{
												"expression": {
													"id": 748,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 694,
													"src": "3222:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 747,
												"id": 749,
												"nodeType": "Return",
												"src": "3215:19:4"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:4"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3196:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:4"
									},
									"scope": 1178,
									"src": "3144:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1213
									],
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "3373:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 759,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "3390:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 761,
													"indexExpression": {
														"id": 760,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "3400:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 758,
												"id": 762,
												"nodeType": "Return",
												"src": "3383:25:4"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "3318:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:4"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "3364:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:4"
									},
									"scope": 1178,
									"src": "3299:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1223
									],
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "3685:103:4",
										"statements": [
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "3695:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 774,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 776,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "3711:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 780,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "3743:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "3750:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "3754:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "3733:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 773,
												"id": 786,
												"nodeType": "Return",
												"src": "3770:11:4"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "3628:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "3640:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:4"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "3679:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:4"
									},
									"scope": 1178,
									"src": "3610:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1233
									],
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "3935:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 798,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "3952:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 800,
														"indexExpression": {
															"id": 799,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3964:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 802,
													"indexExpression": {
														"id": 801,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "3971:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 797,
												"id": 803,
												"nodeType": "Return",
												"src": "3945:34:4"
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "3865:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "3880:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:4"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "3926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:4"
									},
									"scope": 1178,
									"src": "3846:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1243
									],
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "4372:107:4",
										"statements": [
											{
												"assignments": [
													816
												],
												"declarations": [
													{
														"constant": false,
														"id": 816,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 828,
														"src": "4382:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 815,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 819,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 817,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "4398:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 821,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "4429:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 822,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "4436:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 823,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "4445:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 820,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1069,
															1129
														],
														"referencedDeclaration": 1069,
														"src": "4420:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 814,
												"id": 827,
												"nodeType": "Return",
												"src": "4461:11:4"
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4310:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4327:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:4"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4366:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 812,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:4"
									},
									"scope": 1178,
									"src": "4293:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1255
									],
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "5132:151:4",
										"statements": [
											{
												"assignments": [
													842
												],
												"declarations": [
													{
														"constant": false,
														"id": 842,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 860,
														"src": "5142:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 841,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 845,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 843,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "5160:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 847,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "5198:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "5204:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "5213:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 846,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "5182:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 853,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "5239:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "5245:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "5249:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 852,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "5229:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 840,
												"id": 859,
												"nodeType": "Return",
												"src": "5265:11:4"
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5061:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5075:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5087:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:4"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5126:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 838,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:4"
									},
									"scope": 1178,
									"src": "5039:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "5725:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 871,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "5739:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 872,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 885,
												"nodeType": "IfStatement",
												"src": "5735:86:4",
												"trueBody": {
													"id": 884,
													"nodeType": "Block",
													"src": "5759:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 878,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 877,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "5780:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 883,
															"nodeType": "RevertStatement",
															"src": "5773:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 886,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "5834:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 887,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 900,
												"nodeType": "IfStatement",
												"src": "5830:86:4",
												"trueBody": {
													"id": 899,
													"nodeType": "Block",
													"src": "5852:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 895,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 893,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 892,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "5873:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 898,
															"nodeType": "RevertStatement",
															"src": "5866:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 902,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "5933:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "5939:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 904,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "5943:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 901,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "5925:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:4"
											}
										]
									},
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "5675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "5689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "5701:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:4"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:4"
									},
									"scope": 1178,
									"src": "5656:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "6346:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 918,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "6360:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 919,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 955,
													"nodeType": "Block",
													"src": "6534:362:4",
													"statements": [
														{
															"assignments": [
																930
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 930,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 955,
																	"src": "6548:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 929,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 934,
															"initialValue": {
																"baseExpression": {
																	"id": 931,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "6570:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 933,
																"indexExpression": {
																	"id": 932,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "6580:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 935,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "6603:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 936,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "6617:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 945,
															"nodeType": "IfStatement",
															"src": "6599:115:4",
															"trueBody": {
																"id": 944,
																"nodeType": "Block",
																"src": "6624:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 939,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 911,
																					"src": "6674:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 940,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "6680:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 941,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 915,
																					"src": "6693:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 938,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "6649:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 943,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:4"
																	}
																]
															}
														},
														{
															"id": 954,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 946,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "6834:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 948,
																			"indexExpression": {
																				"id": 947,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 911,
																				"src": "6844:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 949,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 930,
																				"src": "6852:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 950,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 915,
																				"src": "6866:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 953,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:4"
																}
															]
														}
													]
												},
												"id": 956,
												"nodeType": "IfStatement",
												"src": "6356:540:4",
												"trueBody": {
													"id": 928,
													"nodeType": "Block",
													"src": "6380:148:4",
													"statements": [
														{
															"expression": {
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 924,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "6496:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 925,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "6512:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 927,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 957,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "6910:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 958,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 976,
													"nodeType": "Block",
													"src": "7125:206:4",
													"statements": [
														{
															"id": 975,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 969,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "7284:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 971,
																			"indexExpression": {
																				"id": 970,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 913,
																				"src": "7294:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 972,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "7301:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 974,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:4"
																}
															]
														}
													]
												},
												"id": 977,
												"nodeType": "IfStatement",
												"src": "6906:425:4",
												"trueBody": {
													"id": 968,
													"nodeType": "Block",
													"src": "6928:191:4",
													"statements": [
														{
															"id": 967,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 963,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 694,
																			"src": "7073:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 964,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "7089:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 966,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 979,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "7355:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 980,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "7361:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 981,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "7365:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 978,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "7346:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "EmitStatement",
												"src": "7341:30:4"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "6288:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "6302:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "6314:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:4"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:4"
									},
									"scope": 1178,
									"src": "6271:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "7777:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 993,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "7791:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 994,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1007,
												"nodeType": "IfStatement",
												"src": "7787:91:4",
												"trueBody": {
													"id": 1006,
													"nodeType": "Block",
													"src": "7814:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1000,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 999,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "7835:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1005,
															"nodeType": "RevertStatement",
															"src": "7828:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1009,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "7907:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "7916:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1008,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "7887:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:4"
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "7736:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "7753:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:4"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:4"
									},
									"scope": 1178,
									"src": "7721:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "8303:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1026,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "8317:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1027,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1040,
												"nodeType": "IfStatement",
												"src": "8313:89:4",
												"trueBody": {
													"id": 1039,
													"nodeType": "Block",
													"src": "8340:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1033,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1032,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "8361:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1038,
															"nodeType": "RevertStatement",
															"src": "8354:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1042,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "8419:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1043,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "8440:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1041,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "8411:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:4"
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "8262:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "8279:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:4"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:4"
									},
									"scope": 1178,
									"src": "8247:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "9063:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1062,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "9082:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "9089:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1064,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "9098:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1061,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1069,
															1129
														],
														"referencedDeclaration": 1129,
														"src": "9073:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:4"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "9007:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "9022:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "9039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:4"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:4"
									},
									"scope": 1178,
									"src": "8989:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "10047:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1081,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "10061:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1082,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1095,
												"nodeType": "IfStatement",
												"src": "10057:89:4",
												"trueBody": {
													"id": 1094,
													"nodeType": "Block",
													"src": "10082:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1088,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1087,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "10103:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1093,
															"nodeType": "RevertStatement",
															"src": "10096:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1096,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "10159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1097,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1110,
												"nodeType": "IfStatement",
												"src": "10155:90:4",
												"trueBody": {
													"id": 1109,
													"nodeType": "Block",
													"src": "10182:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1103,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1102,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "10203:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1108,
															"nodeType": "RevertStatement",
															"src": "10196:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1111,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "10254:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1114,
															"indexExpression": {
																"id": 1112,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "10266:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1115,
														"indexExpression": {
															"id": 1113,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "10273:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1116,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "10284:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:4"
											},
											{
												"condition": {
													"id": 1119,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1078,
													"src": "10303:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "10299:76:4",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "10314:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1121,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1072,
																		"src": "10342:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1122,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1074,
																		"src": "10349:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1123,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1076,
																		"src": "10358:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1120,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1199,
																	"src": "10333:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "EmitStatement",
															"src": "10328:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "9967:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "9999:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "10014:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1077,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:4"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:4"
									},
									"scope": 1178,
									"src": "9949:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "10752:388:4",
										"statements": [
											{
												"assignments": [
													1140
												],
												"declarations": [
													{
														"constant": false,
														"id": 1140,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1176,
														"src": "10762:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1139,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1145,
												"initialValue": {
													"arguments": [
														{
															"id": 1142,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "10799:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "10806:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1141,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "10789:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1146,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "10828:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1148,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1147,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1175,
												"nodeType": "IfStatement",
												"src": "10824:310:4",
												"trueBody": {
													"id": 1174,
													"nodeType": "Block",
													"src": "10867:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1153,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "10885:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1154,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "10904:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1163,
															"nodeType": "IfStatement",
															"src": "10881:130:4",
															"trueBody": {
																"id": 1162,
																"nodeType": "Block",
																"src": "10911:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1157,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1134,
																					"src": "10963:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1158,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1140,
																					"src": "10972:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1159,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1136,
																					"src": "10990:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1156,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 557,
																				"src": "10936:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1161,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:4"
																	}
																]
															}
														},
														{
															"id": 1173,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1165,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1132,
																				"src": "11061:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1166,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1134,
																				"src": "11068:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1169,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1167,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1140,
																					"src": "11077:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1168,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1136,
																					"src": "11096:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1164,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1069,
																				1129
																			],
																			"referencedDeclaration": 1129,
																			"src": "11052:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1172,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "10688:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "10703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "10720:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:4"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:4"
									},
									"scope": 1178,
									"src": "10663:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1179,
							"src": "1401:9741:4",
							"usedErrors": [
								538,
								543,
								548,
								557,
								562,
								567
							],
							"usedEvents": [
								1190,
								1199
							]
						}
					],
					"src": "105:11038:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1256
						]
					},
					"id": 1257,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1180,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1181,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1256,
							"linearizedBaseContracts": [
								1256
							],
							"name": "IERC20",
							"nameLocation": "213:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1190,
									"name": "Transfer",
									"nameLocation": "395:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "404:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "426:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:5"
									},
									"src": "389:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1199,
									"name": "Approval",
									"nameLocation": "626:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "635:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "658:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:5"
									},
									"src": "620:78:5"
								},
								{
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 1256,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "930:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:5"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:5"
									},
									"scope": 1256,
									"src": "911:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "1221:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "1233:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:5"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "1266:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:5"
									},
									"scope": 1256,
									"src": "1203:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1566:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1581:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:5"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:5"
									},
									"scope": 1256,
									"src": "1547:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "2325:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:5"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 1256,
									"src": "2308:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2711:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2725:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2737:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:5"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2770:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:5"
									},
									"scope": 1256,
									"src": "2689:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1257,
							"src": "203:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1190,
								1199
							]
						}
					],
					"src": "106:2673:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1256
						],
						"IERC20Metadata": [
							1282
						]
					},
					"id": 1283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1258,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1260,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1283,
							"sourceUnit": 1257,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1259,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1256,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1262,
										"name": "IERC20",
										"nameLocations": [
											"305:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1256,
										"src": "305:6:6"
									},
									"id": 1263,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1261,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1282,
							"linearizedBaseContracts": [
								1282,
								1256
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:6"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "416:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:6"
									},
									"scope": 1282,
									"src": "377:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:6"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "539:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:6"
									},
									"scope": 1282,
									"src": "498:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:6"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "673:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1278,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:6"
									},
									"scope": 1282,
									"src": "630:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1283,
							"src": "277:405:6",
							"usedErrors": [],
							"usedEvents": [
								1190,
								1199
							]
						}
					],
					"src": "125:558:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1304
						]
					},
					"id": 1305,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1284,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1285,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1304,
							"linearizedBaseContracts": [
								1304
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1290,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1289,
												"id": 1292,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1304,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1299,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1298,
												"id": 1301,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1304,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1305,
							"src": "624:235:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1328
						],
						"IERC165": [
							1340
						]
					},
					"id": 1329,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1306,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1308,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 1341,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1307,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1340,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1310,
										"name": "IERC165",
										"nameLocations": [
											"687:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1340,
										"src": "687:7:8"
									},
									"id": 1311,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1309,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1328,
							"linearizedBaseContracts": [
								1328,
								1340
							],
							"name": "ERC165",
							"nameLocation": "677:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1339
									],
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "844:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1319,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "861:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1321,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "881:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1340_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1340_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1320,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1340",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1318,
												"id": 1325,
												"nodeType": "Return",
												"src": "854:47:8"
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "789:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1313,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:8"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "838:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1316,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:8"
									},
									"scope": 1328,
									"src": "762:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1329,
							"src": "659:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1340
						]
					},
					"id": 1341,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1331,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1340,
							"linearizedBaseContracts": [
								1340
							],
							"name": "IERC165",
							"nameLocation": "431:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "817:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1333,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:9"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "860:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:9"
									},
									"scope": 1340,
									"src": "790:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1341,
							"src": "421:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:9"
				},
				"id": 9
			},
			"quiz.sol": {
				"ast": {
					"absolutePath": "quiz.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"AshokuCoin": [
							1651
						],
						"Context": [
							1304
						],
						"ERC165": [
							1328
						],
						"ERC20": [
							1178
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1256
						],
						"IERC20Errors": [
							568
						],
						"IERC20Metadata": [
							1282
						],
						"Ownable": [
							526
						],
						"QuizGame": [
							1599
						]
					},
					"id": 1600,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1342,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1343,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1600,
							"sourceUnit": 527,
							"src": "61:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "token.sol",
							"file": "./token.sol",
							"id": 1344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1600,
							"sourceUnit": 1652,
							"src": "115:21:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1345,
										"name": "Ownable",
										"nameLocations": [
											"161:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 526,
										"src": "161:7:10"
									},
									"id": 1346,
									"nodeType": "InheritanceSpecifier",
									"src": "161:7:10"
								}
							],
							"canonicalName": "QuizGame",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1599,
							"linearizedBaseContracts": [
								1599,
								526,
								1304
							],
							"name": "QuizGame",
							"nameLocation": "149:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "QuizGame.QuizState",
									"id": 1350,
									"members": [
										{
											"id": 1347,
											"name": "NotStarted",
											"nameLocation": "193:10:10",
											"nodeType": "EnumValue",
											"src": "193:10:10"
										},
										{
											"id": 1348,
											"name": "Started",
											"nameLocation": "205:7:10",
											"nodeType": "EnumValue",
											"src": "205:7:10"
										},
										{
											"id": 1349,
											"name": "Ended",
											"nameLocation": "214:5:10",
											"nodeType": "EnumValue",
											"src": "214:5:10"
										}
									],
									"name": "QuizState",
									"nameLocation": "181:9:10",
									"nodeType": "EnumDefinition",
									"src": "176:45:10"
								},
								{
									"constant": false,
									"functionSelector": "9206815f",
									"id": 1353,
									"mutability": "mutable",
									"name": "quizState",
									"nameLocation": "244:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 1599,
									"src": "227:26:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_QuizState_$1350",
										"typeString": "enum QuizGame.QuizState"
									},
									"typeName": {
										"id": 1352,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1351,
											"name": "QuizState",
											"nameLocations": [
												"227:9:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1350,
											"src": "227:9:10"
										},
										"referencedDeclaration": 1350,
										"src": "227:9:10",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_QuizState_$1350",
											"typeString": "enum QuizGame.QuizState"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "087e88d0",
									"id": 1356,
									"mutability": "mutable",
									"name": "acsToken",
									"nameLocation": "280:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1599,
									"src": "262:26:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AshokuCoin_$1651",
										"typeString": "contract AshokuCoin"
									},
									"typeName": {
										"id": 1355,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1354,
											"name": "AshokuCoin",
											"nameLocations": [
												"262:10:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1651,
											"src": "262:10:10"
										},
										"referencedDeclaration": 1651,
										"src": "262:10:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AshokuCoin_$1651",
											"typeString": "contract AshokuCoin"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dfbf53ae",
									"id": 1358,
									"mutability": "mutable",
									"name": "winner",
									"nameLocation": "312:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1599,
									"src": "297:21:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1357,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "297:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7b2a7be",
									"id": 1361,
									"mutability": "mutable",
									"name": "rewardAmount",
									"nameLocation": "340:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1599,
									"src": "325:39:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1359,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "325:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e35",
										"id": 1360,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "355:9:10",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000_by_1",
											"typeString": "int_const 500000000000000000"
										},
										"value": "0.5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5b67bdb4",
									"id": 1365,
									"mutability": "mutable",
									"name": "hasAnswered",
									"nameLocation": "405:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1599,
									"src": "373:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1364,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1362,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "381:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "373:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1363,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "392:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b042f1d4d3b82efc559238fc1e12537fcdb79cccef346a003202925d94ff3133",
									"id": 1367,
									"name": "QuizStarted",
									"nameLocation": "431:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "442:2:10"
									},
									"src": "425:20:10"
								},
								{
									"anonymous": false,
									"eventSelector": "e5f4afc88cb448bad8ab76d9ea0a66b123681b66f88c8f8aedd19526d742fad5",
									"id": 1373,
									"name": "QuizEnded",
									"nameLocation": "457:9:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"indexed": false,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "475:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "467:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "491:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "483:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "466:38:10"
									},
									"src": "451:54:10"
								},
								{
									"body": {
										"id": 1384,
										"nodeType": "Block",
										"src": "540:90:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_QuizState_$1350",
																"typeString": "enum QuizGame.QuizState"
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1376,
																"name": "quizState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "559:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_QuizState_$1350",
																	"typeString": "enum QuizGame.QuizState"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1377,
																	"name": "QuizState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "572:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_QuizState_$1350_$",
																		"typeString": "type(enum QuizGame.QuizState)"
																	}
																},
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "582:7:10",
																"memberName": "Started",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1348,
																"src": "572:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_QuizState_$1350",
																	"typeString": "enum QuizGame.QuizState"
																}
															},
															"src": "559:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5175697a206e6f742073746172746564",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "591:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6113f27c66be9fe3c34f86efb147343546eef327965cd9666d90ebff6f883d80",
																"typeString": "literal_string \"Quiz not started\""
															},
															"value": "Quiz not started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6113f27c66be9fe3c34f86efb147343546eef327965cd9666d90ebff6f883d80",
																"typeString": "literal_string \"Quiz not started\""
															}
														],
														"id": 1375,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "551:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "551:59:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "551:59:10"
											},
											{
												"id": 1383,
												"nodeType": "PlaceholderStatement",
												"src": "621:1:10"
											}
										]
									},
									"id": 1385,
									"name": "onlyQuizStarted",
									"nameLocation": "522:15:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "537:2:10"
									},
									"src": "513:117:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "668:97:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_QuizState_$1350",
																"typeString": "enum QuizGame.QuizState"
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1388,
																"name": "quizState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "687:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_QuizState_$1350",
																	"typeString": "enum QuizGame.QuizState"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1389,
																	"name": "QuizState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "700:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_QuizState_$1350_$",
																		"typeString": "type(enum QuizGame.QuizState)"
																	}
																},
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "710:10:10",
																"memberName": "NotStarted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1347,
																"src": "700:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_QuizState_$1350",
																	"typeString": "enum QuizGame.QuizState"
																}
															},
															"src": "687:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5175697a20616c72656164792073746172746564",
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "722:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74d31cd5a0f981d114c8b7b13b997b7f4104d83ecf021469195c2e6fe273e612",
																"typeString": "literal_string \"Quiz already started\""
															},
															"value": "Quiz already started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74d31cd5a0f981d114c8b7b13b997b7f4104d83ecf021469195c2e6fe273e612",
																"typeString": "literal_string \"Quiz already started\""
															}
														],
														"id": 1387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "679:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "679:66:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "679:66:10"
											},
											{
												"id": 1395,
												"nodeType": "PlaceholderStatement",
												"src": "756:1:10"
											}
										]
									},
									"id": 1397,
									"name": "onlyQuizNotStarted",
									"nameLocation": "647:18:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "665:2:10"
									},
									"src": "638:127:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "854:100:10",
										"statements": [
											{
												"expression": {
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1407,
														"name": "acsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "865:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AshokuCoin_$1651",
															"typeString": "contract AshokuCoin"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1409,
																"name": "acsTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "887:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1408,
															"name": "AshokuCoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "876:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AshokuCoin_$1651_$",
																"typeString": "type(contract AshokuCoin)"
															}
														},
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "876:27:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AshokuCoin_$1651",
															"typeString": "contract AshokuCoin"
														}
													},
													"src": "865:38:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AshokuCoin_$1651",
														"typeString": "contract AshokuCoin"
													}
												},
												"id": 1412,
												"nodeType": "ExpressionStatement",
												"src": "865:38:10"
											},
											{
												"expression": {
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1413,
														"name": "quizState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "914:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_QuizState_$1350",
															"typeString": "enum QuizGame.QuizState"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1414,
															"name": "QuizState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "926:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_QuizState_$1350_$",
																"typeString": "type(enum QuizGame.QuizState)"
															}
														},
														"id": 1415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "936:10:10",
														"memberName": "NotStarted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1347,
														"src": "926:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_QuizState_$1350",
															"typeString": "enum QuizGame.QuizState"
														}
													},
													"src": "914:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_QuizState_$1350",
														"typeString": "enum QuizGame.QuizState"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "914:32:10"
											}
										]
									},
									"id": 1419,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1404,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1401,
													"src": "840:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1405,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1403,
												"name": "Ownable",
												"nameLocations": [
													"832:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 526,
												"src": "832:7:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "832:21:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "acsTokenAddress",
												"nameLocation": "793:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "785:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "785:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "818:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "810:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:47:10"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:0:10"
									},
									"scope": 1599,
									"src": "773:181:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1434,
										"nodeType": "Block",
										"src": "1021:77:10",
										"statements": [
											{
												"expression": {
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1426,
														"name": "quizState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "1032:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_QuizState_$1350",
															"typeString": "enum QuizGame.QuizState"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1427,
															"name": "QuizState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "1044:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_QuizState_$1350_$",
																"typeString": "type(enum QuizGame.QuizState)"
															}
														},
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1054:7:10",
														"memberName": "Started",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1348,
														"src": "1044:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_QuizState_$1350",
															"typeString": "enum QuizGame.QuizState"
														}
													},
													"src": "1032:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_QuizState_$1350",
														"typeString": "enum QuizGame.QuizState"
													}
												},
												"id": 1430,
												"nodeType": "ExpressionStatement",
												"src": "1032:29:10"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1431,
														"name": "QuizStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "1077:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1077:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1433,
												"nodeType": "EmitStatement",
												"src": "1072:18:10"
											}
										]
									},
									"functionSelector": "4c3415e6",
									"id": 1435,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1422,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1421,
												"name": "onlyOwner",
												"nameLocations": [
													"992:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "992:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "992:9:10"
										},
										{
											"id": 1424,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1423,
												"name": "onlyQuizNotStarted",
												"nameLocations": [
													"1002:18:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1397,
												"src": "1002:18:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1002:18:10"
										}
									],
									"name": "startQuiz",
									"nameLocation": "971:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "980:2:10"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1021:0:10"
									},
									"scope": 1599,
									"src": "962:136:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "1289:1163:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1308:20:10",
															"subExpression": {
																"baseExpression": {
																	"id": 1455,
																	"name": "hasAnswered",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "1309:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1457,
																"indexExpression": {
																	"id": 1456,
																	"name": "player",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1437,
																	"src": "1321:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1309:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c617965722068617320616c726561647920616e737765726564",
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1330:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bbdbe33ec55f5fd3ff65c62ebfc5c8c611b57e63d612b7f8a86521ceeeabac23",
																"typeString": "literal_string \"Player has already answered\""
															},
															"value": "Player has already answered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bbdbe33ec55f5fd3ff65c62ebfc5c8c611b57e63d612b7f8a86521ceeeabac23",
																"typeString": "literal_string \"Player has already answered\""
															}
														],
														"id": 1454,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1300:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1300:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "1300:60:10"
											},
											{
												"assignments": [
													1467
												],
												"declarations": [
													{
														"constant": false,
														"id": 1467,
														"mutability": "mutable",
														"name": "correctAnswers",
														"nameLocation": "1468:14:10",
														"nodeType": "VariableDeclaration",
														"scope": 1597,
														"src": "1451:31:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_string_memory_ptr_$5_memory_ptr",
															"typeString": "string[5]"
														},
														"typeName": {
															"baseType": {
																"id": 1465,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1451:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string"
																}
															},
															"id": 1466,
															"length": {
																"hexValue": "35",
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1458:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															"nodeType": "ArrayTypeName",
															"src": "1451:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$5_storage_ptr",
																"typeString": "string[5]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1474,
												"initialValue": {
													"components": [
														{
															"hexValue": "436f727265637431",
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1486:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_978c6524595994e28b7756c3f266304191adfdf994ccbe56c2830c2d570951f9",
																"typeString": "literal_string \"Correct1\""
															},
															"value": "Correct1"
														},
														{
															"hexValue": "436f727265637432",
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1498:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b208d4b083666195351fd12a244814e5e661c4c208172a3b4de6b4ead4a1c8f",
																"typeString": "literal_string \"Correct2\""
															},
															"value": "Correct2"
														},
														{
															"hexValue": "436f727265637433",
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1510:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b6eb56d29a1f07538c3257dff15e91b918dabd6531b08ffaac02178dbf4d593d",
																"typeString": "literal_string \"Correct3\""
															},
															"value": "Correct3"
														},
														{
															"hexValue": "436f727265637434",
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1522:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c96ddbf97156ed8367a2eb78a858e742d317ab936890c01f2bac5df1d4ed6ac",
																"typeString": "literal_string \"Correct4\""
															},
															"value": "Correct4"
														},
														{
															"hexValue": "436f727265637435",
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1534:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1994ac63a43af56e2d255140256a2d8301718cd0a57264859ad14f6d1fedca9",
																"typeString": "literal_string \"Correct5\""
															},
															"value": "Correct5"
														}
													],
													"id": 1473,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1485:60:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_memory_ptr_$5_memory_ptr",
														"typeString": "string memory[5] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1451:94:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1479,
																				"name": "answer1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1439,
																				"src": "1593:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1477,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1576:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "1580:12:10",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1576:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1576:25:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1476,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "1566:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1566:36:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 1485,
																					"name": "correctAnswers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1467,
																					"src": "1633:14:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_string_memory_ptr_$5_memory_ptr",
																						"typeString": "string memory[5] memory"
																					}
																				},
																				"id": 1487,
																				"indexExpression": {
																					"hexValue": "30",
																					"id": 1486,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1648:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1633:17:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1483,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1616:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "1620:12:10",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1616:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1616:35:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1482,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "1606:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1606:46:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "1566:86:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f727265637420616e737765722031",
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1654:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5340bde7db8ae904c90cdf5d9f62cdff34386ee2216c16409523907d46f72aa0",
																"typeString": "literal_string \"Incorrect answer 1\""
															},
															"value": "Incorrect answer 1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5340bde7db8ae904c90cdf5d9f62cdff34386ee2216c16409523907d46f72aa0",
																"typeString": "literal_string \"Incorrect answer 1\""
															}
														],
														"id": 1475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1558:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1558:117:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "1558:117:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1498,
																				"name": "answer2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1441,
																				"src": "1721:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1496,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1704:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "1708:12:10",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1704:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1704:25:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1495,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "1694:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1694:36:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 1504,
																					"name": "correctAnswers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1467,
																					"src": "1761:14:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_string_memory_ptr_$5_memory_ptr",
																						"typeString": "string memory[5] memory"
																					}
																				},
																				"id": 1506,
																				"indexExpression": {
																					"hexValue": "31",
																					"id": 1505,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1776:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1761:17:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1502,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1744:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "1748:12:10",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1744:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1744:35:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1501,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "1734:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1734:46:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "1694:86:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f727265637420616e737765722032",
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1782:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_be0700e5bdf2f4a3f99c0f46642cfa260d65dd8db325c0f55f4146b120a077d0",
																"typeString": "literal_string \"Incorrect answer 2\""
															},
															"value": "Incorrect answer 2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_be0700e5bdf2f4a3f99c0f46642cfa260d65dd8db325c0f55f4146b120a077d0",
																"typeString": "literal_string \"Incorrect answer 2\""
															}
														],
														"id": 1494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1686:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1686:117:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "1686:117:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1517,
																				"name": "answer3",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1443,
																				"src": "1849:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1515,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1832:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "1836:12:10",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1832:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1832:25:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1514,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "1822:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1822:36:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 1523,
																					"name": "correctAnswers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1467,
																					"src": "1889:14:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_string_memory_ptr_$5_memory_ptr",
																						"typeString": "string memory[5] memory"
																					}
																				},
																				"id": 1525,
																				"indexExpression": {
																					"hexValue": "32",
																					"id": 1524,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1904:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1889:17:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1521,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1872:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "1876:12:10",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1872:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1872:35:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1520,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "1862:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1862:46:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "1822:86:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f727265637420616e737765722033",
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1910:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3a576880600c047ca9851e6f261b487ffa5f3a81013948b0c7c1a1460e555eb5",
																"typeString": "literal_string \"Incorrect answer 3\""
															},
															"value": "Incorrect answer 3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3a576880600c047ca9851e6f261b487ffa5f3a81013948b0c7c1a1460e555eb5",
																"typeString": "literal_string \"Incorrect answer 3\""
															}
														],
														"id": 1513,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1814:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1814:117:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "1814:117:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1536,
																				"name": "answer4",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1445,
																				"src": "1977:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1534,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1960:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "1964:12:10",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1960:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1960:25:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1533,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "1950:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1950:36:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 1542,
																					"name": "correctAnswers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1467,
																					"src": "2017:14:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_string_memory_ptr_$5_memory_ptr",
																						"typeString": "string memory[5] memory"
																					}
																				},
																				"id": 1544,
																				"indexExpression": {
																					"hexValue": "33",
																					"id": 1543,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2032:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3_by_1",
																						"typeString": "int_const 3"
																					},
																					"value": "3"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2017:17:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1540,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "2000:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2004:12:10",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "2000:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2000:35:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1539,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "1990:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1990:46:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "1950:86:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f727265637420616e737765722034",
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2038:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68e9596cd0a7b9f571bf50ecf7466a10151c68711345cab90d69efe6597bbe63",
																"typeString": "literal_string \"Incorrect answer 4\""
															},
															"value": "Incorrect answer 4"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68e9596cd0a7b9f571bf50ecf7466a10151c68711345cab90d69efe6597bbe63",
																"typeString": "literal_string \"Incorrect answer 4\""
															}
														],
														"id": 1532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1942:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1942:117:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1550,
												"nodeType": "ExpressionStatement",
												"src": "1942:117:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1555,
																				"name": "answer5",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1447,
																				"src": "2105:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1553,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "2088:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2092:12:10",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "2088:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2088:25:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1552,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2078:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2078:36:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 1561,
																					"name": "correctAnswers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1467,
																					"src": "2145:14:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_string_memory_ptr_$5_memory_ptr",
																						"typeString": "string memory[5] memory"
																					}
																				},
																				"id": 1563,
																				"indexExpression": {
																					"hexValue": "34",
																					"id": 1562,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2160:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					},
																					"value": "4"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2145:17:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1559,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "2128:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2132:12:10",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "2128:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2128:35:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1558,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2118:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2118:46:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "2078:86:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f727265637420616e737765722035",
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2166:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e8112adc87c1e5a5bdffba84ab292ce541ed4ba337eacc65ef17b25239e16d0",
																"typeString": "literal_string \"Incorrect answer 5\""
															},
															"value": "Incorrect answer 5"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e8112adc87c1e5a5bdffba84ab292ce541ed4ba337eacc65ef17b25239e16d0",
																"typeString": "literal_string \"Incorrect answer 5\""
															}
														],
														"id": 1551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2070:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2070:117:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1569,
												"nodeType": "ExpressionStatement",
												"src": "2070:117:10"
											},
											{
												"expression": {
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1570,
														"name": "winner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "2200:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1571,
														"name": "player",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "2209:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2200:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "2200:15:10"
											},
											{
												"expression": {
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1574,
															"name": "hasAnswered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "2226:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1576,
														"indexExpression": {
															"id": 1575,
															"name": "player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "2238:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2226:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2248:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2226:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "2226:26:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1583,
															"name": "winner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "2334:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1584,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "2342:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1580,
															"name": "acsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "2320:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AshokuCoin_$1651",
																"typeString": "contract AshokuCoin"
															}
														},
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2329:4:10",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1650,
														"src": "2320:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2320:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1586,
												"nodeType": "ExpressionStatement",
												"src": "2320:35:10"
											},
											{
												"expression": {
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1587,
														"name": "quizState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "2368:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_QuizState_$1350",
															"typeString": "enum QuizGame.QuizState"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1588,
															"name": "QuizState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "2380:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_QuizState_$1350_$",
																"typeString": "type(enum QuizGame.QuizState)"
															}
														},
														"id": 1589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2390:5:10",
														"memberName": "Ended",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1349,
														"src": "2380:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_QuizState_$1350",
															"typeString": "enum QuizGame.QuizState"
														}
													},
													"src": "2368:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_QuizState_$1350",
														"typeString": "enum QuizGame.QuizState"
													}
												},
												"id": 1591,
												"nodeType": "ExpressionStatement",
												"src": "2368:27:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1593,
															"name": "winner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "2423:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1594,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "2431:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1592,
														"name": "QuizEnded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "2413:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2413:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1596,
												"nodeType": "EmitStatement",
												"src": "2408:36:10"
											}
										]
									},
									"functionSelector": "aa4339cb",
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1450,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1449,
												"name": "onlyOwner",
												"nameLocations": [
													"1263:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "1263:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1263:9:10"
										},
										{
											"id": 1452,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1451,
												"name": "onlyQuizStarted",
												"nameLocations": [
													"1273:15:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1385,
												"src": "1273:15:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1273:15:10"
										}
									],
									"name": "endQuiz",
									"nameLocation": "1115:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "1131:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "1123:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1123:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "answer1",
												"nameLocation": "1153:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "1139:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1139:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "answer2",
												"nameLocation": "1176:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "1162:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1440,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1162:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "answer3",
												"nameLocation": "1199:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "1185:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1442,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1185:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "answer4",
												"nameLocation": "1222:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "1208:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1208:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "answer5",
												"nameLocation": "1245:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "1231:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1446,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1231:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1122:131:10"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:10"
									},
									"scope": 1599,
									"src": "1106:1346:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1600,
							"src": "140:2315:10",
							"usedErrors": [
								392,
								397
							],
							"usedEvents": [
								403,
								1367,
								1373
							]
						}
					],
					"src": "33:2424:10"
				},
				"id": 10
			},
			"token.sol": {
				"ast": {
					"absolutePath": "token.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"AshokuCoin": [
							1651
						],
						"Context": [
							1304
						],
						"ERC165": [
							1328
						],
						"ERC20": [
							1178
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1256
						],
						"IERC20Errors": [
							568
						],
						"IERC20Metadata": [
							1282
						]
					},
					"id": 1652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1601,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1602,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1652,
							"sourceUnit": 1179,
							"src": "61:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1603,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1652,
							"sourceUnit": 296,
							"src": "118:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1604,
										"name": "ERC20",
										"nameLocations": [
											"203:5:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1178,
										"src": "203:5:11"
									},
									"id": 1605,
									"nodeType": "InheritanceSpecifier",
									"src": "203:5:11"
								},
								{
									"baseName": {
										"id": 1606,
										"name": "AccessControl",
										"nameLocations": [
											"210:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "210:13:11"
									},
									"id": 1607,
									"nodeType": "InheritanceSpecifier",
									"src": "210:13:11"
								}
							],
							"canonicalName": "AshokuCoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1651,
							"linearizedBaseContracts": [
								1651,
								295,
								1328,
								1340,
								378,
								1178,
								568,
								1282,
								1256,
								1304
							],
							"name": "AshokuCoin",
							"nameLocation": "189:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1612,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "255:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1651,
									"src": "231:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1608,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "231:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1610,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "279:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1609,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "269:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1611,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "269:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1633,
										"nodeType": "Block",
										"src": "379:105:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1624,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "401:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1625,
															"name": "defaultAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "421:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1623,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "390:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "390:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1627,
												"nodeType": "ExpressionStatement",
												"src": "390:44:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1629,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "456:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1630,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "469:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1628,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "445:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "445:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1632,
												"nodeType": "ExpressionStatement",
												"src": "445:31:11"
											}
										]
									},
									"id": 1634,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4173686f6b75436f696e",
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "358:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_faa12083a9ceac1d2b59d2229388dc373725d77181ff18e1072a641c76ec2005",
														"typeString": "literal_string \"AshokuCoin\""
													},
													"value": "AshokuCoin"
												},
												{
													"hexValue": "414353",
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "372:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_6e0a4c470c2b124630924e7866cfeebfe430044766dd43c337fbbbbd6ad72b34",
														"typeString": "literal_string \"ACS\""
													},
													"value": "ACS"
												}
											],
											"id": 1621,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1618,
												"name": "ERC20",
												"nameLocations": [
													"352:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1178,
												"src": "352:5:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "352:26:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "defaultAdmin",
												"nameLocation": "322:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "314:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "344:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "336:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "336:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "313:38:11"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "379:0:11"
									},
									"scope": 1651,
									"src": "302:182:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "563:36:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1645,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "580:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1646,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "584:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1644,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "574:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "574:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1648,
												"nodeType": "ExpressionStatement",
												"src": "574:17:11"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1641,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1612,
													"src": "550:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1642,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1640,
												"name": "onlyRole",
												"nameLocations": [
													"541:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "541:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "541:21:11"
										}
									],
									"name": "mint",
									"nameLocation": "501:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "514:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "506:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "526:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "518:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "505:28:11"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "563:0:11"
									},
									"scope": 1651,
									"src": "492:107:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1652,
							"src": "180:422:11",
							"usedErrors": [
								305,
								308,
								538,
								543,
								548,
								557,
								562,
								567
							],
							"usedEvents": [
								317,
								326,
								335,
								1190,
								1199
							]
						}
					],
					"src": "33:569:11"
				},
				"id": 11
			}
		}
	}
}