<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Computer Networks Quiz</title>
    <style>
        /* Your existing styles remain unchanged */

        #menu {
            background: rgba(0, 0, 0, 0.7);
            padding: 10px;
            border-radius: 10px;
            margin-bottom: 20px;
        }
    </style>
</head>

<body>
    <div id="menu">
        <span id="level">Level: 1</span>
        <span id="score">Score: 0</span>
    </div>
    <h1>Welcome to the Computer Networks Quiz</h1>
    <button onclick="connectWallet()">Connect Wallet</button>
    <div id="quiz" style="display: none;">
        <h2>Level 1</h2>
        <form id="quizForm" onsubmit="submitQuiz(event)">
            <label>Question 1: What does DNS stand for?</label>
            <input type="text" id="answer1" required><br>

            <!-- Add more questions and answers for each level -->
            <label>Question 2: What does DHCP stand for?</label>
            <input type="text" id="answer2" required><br>

            <button type="submit">Submit Answer</button>
        </form>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/web3@1.6.0/dist/web3.min.js"></script>
    <script>
        // Your existing JavaScript code remains unchanged
        // ...
        let web3;
        let contract;
        let account;
        let score = 0;

async function connectWallet() {
            if (window.ethereum) {
                web3 = new Web3(window.ethereum);
                try {
                    await window.ethereum.enable();
                    const accounts = await web3.eth.getAccounts();
                    account = accounts[0];
                    console.log('Connected to MetaMask:', account);

                    // Initialize the quiz once the wallet is connected
                    initializeQuiz();
                } catch (error) {
                    console.error('Error connecting to MetaMask:', error);
                }
            } else {
                console.error('MetaMask not found. Please install MetaMask to play the game.');
            }
        }



        async function initializeQuiz() {
            $('#quiz').show();
            updateMenu();
        }

        async function submitQuiz(event) {
            event.preventDefault();

            const answer1 = $('#answer1').val();
            const answer2 = $('#answer2').val();

            if (allAnswersCorrect()) {
                console.log('All answers are correct!');
                score += 10; // Increment the score by 10 for each correct answer

                // Mint 0.1 ACS for the current level
                try {
                    const tokenContractAddress = '0x2a20E78F558CB8F659ABc1bC242801D56B9f05c0';
                   const tokenAbi = [
                        {
                            "inputs": [
                                {
                                    "internalType": "address",
                                    "name": "defaultAdmin",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "minter",
                                    "type": "address"
                                }
                            ],
                            "stateMutability": "nonpayable",
                            "type": "constructor"
                        },
                        {
                            "inputs": [],
                            "name": "AccessControlBadConfirmation",
                            "type": "error"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "address",
                                    "name": "account",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "neededRole",
                                    "type": "bytes32"
                                }
                            ],
                            "name": "AccessControlUnauthorizedAccount",
                            "type": "error"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "address",
                                    "name": "spender",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "allowance",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "needed",
                                    "type": "uint256"
                                }
                            ],
                            "name": "ERC20InsufficientAllowance",
                            "type": "error"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "address",
                                    "name": "sender",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "balance",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "needed",
                                    "type": "uint256"
                                }
                            ],
                            "name": "ERC20InsufficientBalance",
                            "type": "error"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "address",
                                    "name": "approver",
                                    "type": "address"
                                }
                            ],
                            "name": "ERC20InvalidApprover",
                            "type": "error"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "address",
                                    "name": "receiver",
                                    "type": "address"
                                }
                            ],
                            "name": "ERC20InvalidReceiver",
                            "type": "error"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "address",
                                    "name": "sender",
                                    "type": "address"
                                }
                            ],
                            "name": "ERC20InvalidSender",
                            "type": "error"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "address",
                                    "name": "spender",
                                    "type": "address"
                                }
                            ],
                            "name": "ERC20InvalidSpender",
                            "type": "error"
                        },
                        {
                            "anonymous": false,
                            "inputs": [
                                {
                                    "indexed": true,
                                    "internalType": "address",
                                    "name": "owner",
                                    "type": "address"
                                },
                                {
                                    "indexed": true,
                                    "internalType": "address",
                                    "name": "spender",
                                    "type": "address"
                                },
                                {
                                    "indexed": false,
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                }
                            ],
                            "name": "Approval",
                            "type": "event"
                        },
                        {
                            "anonymous": false,
                            "inputs": [
                                {
                                    "indexed": true,
                                    "internalType": "bytes32",
                                    "name": "role",
                                    "type": "bytes32"
                                },
                                {
                                    "indexed": true,
                                    "internalType": "bytes32",
                                    "name": "previousAdminRole",
                                    "type": "bytes32"
                                },
                                {
                                    "indexed": true,
                                    "internalType": "bytes32",
                                    "name": "newAdminRole",
                                    "type": "bytes32"
                                }
                            ],
                            "name": "RoleAdminChanged",
                            "type": "event"
                        },
                        {
                            "anonymous": false,
                            "inputs": [
                                {
                                    "indexed": true,
                                    "internalType": "bytes32",
                                    "name": "role",
                                    "type": "bytes32"
                                },
                                {
                                    "indexed": true,
                                    "internalType": "address",
                                    "name": "account",
                                    "type": "address"
                                },
                                {
                                    "indexed": true,
                                    "internalType": "address",
                                    "name": "sender",
                                    "type": "address"
                                }
                            ],
                            "name": "RoleGranted",
                            "type": "event"
                        },
                        {
                            "anonymous": false,
                            "inputs": [
                                {
                                    "indexed": true,
                                    "internalType": "bytes32",
                                    "name": "role",
                                    "type": "bytes32"
                                },
                                {
                                    "indexed": true,
                                    "internalType": "address",
                                    "name": "account",
                                    "type": "address"
                                },
                                {
                                    "indexed": true,
                                    "internalType": "address",
                                    "name": "sender",
                                    "type": "address"
                                }
                            ],
                            "name": "RoleRevoked",
                            "type": "event"
                        },
                        {
                            "anonymous": false,
                            "inputs": [
                                {
                                    "indexed": true,
                                    "internalType": "address",
                                    "name": "from",
                                    "type": "address"
                                },
                                {
                                    "indexed": true,
                                    "internalType": "address",
                                    "name": "to",
                                    "type": "address"
                                },
                                {
                                    "indexed": false,
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                }
                            ],
                            "name": "Transfer",
                            "type": "event"
                        },
                        {
                            "inputs": [],
                            "name": "DEFAULT_ADMIN_ROLE",
                            "outputs": [
                                {
                                    "internalType": "bytes32",
                                    "name": "",
                                    "type": "bytes32"
                                }
                            ],
                            "stateMutability": "view",
                            "type": "function"
                        },
                        {
                            "inputs": [],
                            "name": "MINTER_ROLE",
                            "outputs": [
                                {
                                    "internalType": "bytes32",
                                    "name": "",
                                    "type": "bytes32"
                                }
                            ],
                            "stateMutability": "view",
                            "type": "function"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "address",
                                    "name": "owner",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "spender",
                                    "type": "address"
                                }
                            ],
                            "name": "allowance",
                            "outputs": [
                                {
                                    "internalType": "uint256",
                                    "name": "",
                                    "type": "uint256"
                                }
                            ],
                            "stateMutability": "view",
                            "type": "function"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "address",
                                    "name": "spender",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                }
                            ],
                            "name": "approve",
                            "outputs": [
                                {
                                    "internalType": "bool",
                                    "name": "",
                                    "type": "bool"
                                }
                            ],
                            "stateMutability": "nonpayable",
                            "type": "function"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "address",
                                    "name": "account",
                                    "type": "address"
                                }
                            ],
                            "name": "balanceOf",
                            "outputs": [
                                {
                                    "internalType": "uint256",
                                    "name": "",
                                    "type": "uint256"
                                }
                            ],
                            "stateMutability": "view",
                            "type": "function"
                        },
                        {
                            "inputs": [],
                            "name": "decimals",
                            "outputs": [
                                {
                                    "internalType": "uint8",
                                    "name": "",
                                    "type": "uint8"
                                }
                            ],
                            "stateMutability": "view",
                            "type": "function"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "bytes32",
                                    "name": "role",
                                    "type": "bytes32"
                                }
                            ],
                            "name": "getRoleAdmin",
                            "outputs": [
                                {
                                    "internalType": "bytes32",
                                    "name": "",
                                    "type": "bytes32"
                                }
                            ],
                            "stateMutability": "view",
                            "type": "function"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "bytes32",
                                    "name": "role",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "account",
                                    "type": "address"
                                }
                            ],
                            "name": "grantRole",
                            "outputs": [],
                            "stateMutability": "nonpayable",
                            "type": "function"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "bytes32",
                                    "name": "role",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "account",
                                    "type": "address"
                                }
                            ],
                            "name": "hasRole",
                            "outputs": [
                                {
                                    "internalType": "bool",
                                    "name": "",
                                    "type": "bool"
                                }
                            ],
                            "stateMutability": "view",
                            "type": "function"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "address",
                                    "name": "to",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "amount",
                                    "type": "uint256"
                                }
                            ],
                            "name": "mint",
                            "outputs": [],
                            "stateMutability": "nonpayable",
                            "type": "function"
                        },
                        {
                            "inputs": [],
                            "name": "name",
                            "outputs": [
                                {
                                    "internalType": "string",
                                    "name": "",
                                    "type": "string"
                                }
                            ],
                            "stateMutability": "view",
                            "type": "function"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "bytes32",
                                    "name": "role",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "callerConfirmation",
                                    "type": "address"
                                }
                            ],
                            "name": "renounceRole",
                            "outputs": [],
                            "stateMutability": "nonpayable",
                            "type": "function"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "bytes32",
                                    "name": "role",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "account",
                                    "type": "address"
                                }
                            ],
                            "name": "revokeRole",
                            "outputs": [],
                            "stateMutability": "nonpayable",
                            "type": "function"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "bytes4",
                                    "name": "interfaceId",
                                    "type": "bytes4"
                                }
                            ],
                            "name": "supportsInterface",
                            "outputs": [
                                {
                                    "internalType": "bool",
                                    "name": "",
                                    "type": "bool"
                                }
                            ],
                            "stateMutability": "view",
                            "type": "function"
                        },
                        {
                            "inputs": [],
                            "name": "symbol",
                            "outputs": [
                                {
                                    "internalType": "string",
                                    "name": "",
                                    "type": "string"
                                }
                            ],
                            "stateMutability": "view",
                            "type": "function"
                        },
                        {
                            "inputs": [],
                            "name": "totalSupply",
                            "outputs": [
                                {
                                    "internalType": "uint256",
                                    "name": "",
                                    "type": "uint256"
                                }
                            ],
                            "stateMutability": "view",
                            "type": "function"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "address",
                                    "name": "to",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                }
                            ],
                            "name": "transfer",
                            "outputs": [
                                {
                                    "internalType": "bool",
                                    "name": "",
                                    "type": "bool"
                                }
                            ],
                            "stateMutability": "nonpayable",
                            "type": "function"
                        },
                        {
                            "inputs": [
                                {
                                    "internalType": "address",
                                    "name": "from",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "to",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                }
                            ],
                            "name": "transferFrom",
                            "outputs": [
                                {
                                    "internalType": "bool",
                                    "name": "",
                                    "type": "bool"
                                }
                            ],
                            "stateMutability": "nonpayable",
                            "type": "function"
                        }
                    ];

                    
                    contract = new web3.eth.Contract(tokenAbi, tokenContractAddress);
                    await contract.methods.mint(account, web3.utils.toWei('0.1', 'ether')).send({ from: account });

                    console.log('0.1 ACS minted and deposited to the player\'s account.');
                } catch (error) {
                    console.error('Error minting and depositing ACS:', error);
                }

                // Move to the next level or end the game
                if (currentLevel < 10) {
                    currentLevel++;
                    $('#quizForm')[0].reset(); // Reset the form
                    $('h2').text('Level ' + currentLevel); // Update level text
                    updateMenu();
                } else {
                    console.log('Game completed! Redeem your ACS.');
                    redeemScore();
                }
            } else {
                console.log('Some answers are incorrect.');
            }
        }

        function updateMenu() {
            $('#level').text('Level: ' + currentLevel);
            $('#score').text('Score: ' + score);
        }

        function redeemScore() {
            const totalACS = score / 100;
            try {
                // Redeem totalACS ACS to the player's account
                async function mintAndSend() {
                    try {
                        console.log(`${totalACS} ACS redeemed and deposited to the player's account.`);
                    } catch (error) {
                        console.error('Error redeeming ACS:', error);
                    }

                    let currentLevel = 1;

                mintAndSend();
                console.log(`${totalACS} ACS redeemed and deposited to the player\'s account.`);
            } 
        } catch (error) {
                console.error('Error redeeming ACS:', error);
            }
        }

        let currentLevel = 1;
        function allAnswersCorrect() {
            // Implement your logic to check if all quiz answers are correct
            // match the answers with the correct answers and return true if all are correct
            // to make it easier, you can convert all answers to lowercase before matching and remove all spaces
            // for example, if the correct answer is "Computer Networks", you can convert it to "computernetworks" and then match it with the user's answer

            const answer1 = $('#answer1').val();
            const answer2 = $('#answer2').val();

            if (answer1.toLowerCase().replace(/\s/g, '') === 'domainname' && answer2.toLowerCase().replace(/\s/g, '') === 'dynamic') {
                return true;
            } else {
                return false;
            }
        }
    </script>
</body>

</html>
